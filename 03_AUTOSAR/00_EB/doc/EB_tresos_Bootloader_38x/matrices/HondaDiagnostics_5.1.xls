<?xml version="1.0"?>
<Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet" xmlns:html="http://www.w3.org/TR/REC-html40" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet" xmlns:x="urn:schemas-microsoft-com:office:excel"><Styles><Style ss:ID="StyleReq"><Alignment ss:Horizontal="Center" ss:Vertical="Center" ss:WrapText="1"/><Borders><Border ss:LineStyle="Continuous" ss:Position="Bottom" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Left" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Right" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Top" ss:Weight="1"/></Borders><Interior ss:Color="#FFFFFF" ss:Pattern="Solid"/></Style><Style ss:ID="StyleReqRejected"><Alignment ss:Horizontal="Center" ss:Vertical="Center" ss:WrapText="1"/><Borders><Border ss:LineStyle="Continuous" ss:Position="Bottom" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Left" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Right" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Top" ss:Weight="1"/></Borders><Interior ss:Color="#BFBFBF" ss:Pattern="Solid"/></Style><Style ss:ID="StyleHistory"><Alignment ss:Horizontal="Center" ss:Vertical="Bottom" ss:WrapText="1"/><Borders><Border ss:LineStyle="Continuous" ss:Position="Bottom" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Left" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Right" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Top" ss:Weight="1"/></Borders><Interior ss:Color="#FFFFFF" ss:Pattern="Solid"/></Style><Style ss:ID="StyleHistoryDate"><Alignment ss:Horizontal="Center" ss:Vertical="Bottom" ss:WrapText="1"/><Borders><Border ss:LineStyle="Continuous" ss:Position="Bottom" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Left" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Right" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Top" ss:Weight="1"/></Borders><Interior ss:Color="#FFFFFF" ss:Pattern="Solid"/><NumberFormat ss:Format="Short Date"/></Style><Style ss:ID="Default" ss:Name="Normal"><Alignment ss:Horizontal="Center" ss:Vertical="Center"/><Borders/><Font ss:FontName="Arial" ss:Size="10"/><Interior/><NumberFormat/><Protection/></Style><Style ss:ID="StyleHeader"><Alignment ss:Horizontal="Center" ss:Vertical="Center" ss:WrapText="1"/></Style><Style ss:ID="StyleHeader2"><Borders><Border ss:LineStyle="Continuous" ss:Position="Bottom" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Left" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Right" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Top" ss:Weight="1"/></Borders><Font ss:Bold="1" ss:Color="#000000" ss:FontName="Arial" ss:Size="10"/><Interior ss:Color="#CCFFFF" ss:Pattern="Solid"/></Style><Style ss:ID="styleFull"><Alignment ss:Horizontal="Center" ss:Vertical="Center" ss:WrapText="1"/><Borders><Border ss:LineStyle="Continuous" ss:Position="Bottom" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Left" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Right" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Top" ss:Weight="1"/></Borders><Font ss:Bold="1" ss:FontName="Arial" x:Family="Swiss"/><Interior ss:Color="#00FF00" ss:Pattern="Solid"/></Style><Style ss:ID="stylePartial"><Alignment ss:Horizontal="Center" ss:Vertical="Center" ss:WrapText="1"/><Borders><Border ss:LineStyle="Continuous" ss:Position="Bottom" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Left" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Right" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Top" ss:Weight="1"/></Borders><Font ss:Bold="1" ss:FontName="Arial" x:Family="Swiss"/><Interior ss:Color="#FFCC00" ss:Pattern="Solid"/></Style><Style ss:ID="styleNotImplemented"><Alignment ss:Horizontal="Center" ss:Vertical="Center" ss:WrapText="1"/><Borders><Border ss:LineStyle="Continuous" ss:Position="Bottom" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Left" ss:Weight="1"/><Border ss:LineStyle="Continuous" ss:Position="Top" ss:Weight="1"/></Borders><Font ss:Bold="1" ss:Color="#FFFFFF" ss:FontName="Arial" x:Family="Swiss"/><Interior ss:Color="#FF0000" ss:Pattern="Solid"/></Style><Style ss:ID="StyleEBName"><Alignment ss:Horizontal="Center" ss:Vertical="Center" ss:WrapText="1"/><Borders><Border ss:LineStyle="Continuous" ss:Position="Bottom" ss:Weight="2"/><Border ss:LineStyle="Continuous" ss:Position="Left" ss:Weight="2"/><Border ss:LineStyle="Continuous" ss:Position="Right" ss:Weight="2"/><Border ss:LineStyle="Continuous" ss:Position="Top" ss:Weight="2"/></Borders><Font ss:Bold="1" ss:Color="#00FF00" ss:FontName="Arial" ss:Size="26" x:Family="Swiss"/></Style><Style ss:ID="StyleSpecName"><Alignment ss:Horizontal="Center" ss:Vertical="Center" ss:WrapText="1"/><Borders><Border ss:LineStyle="Continuous" ss:Position="Bottom" ss:Weight="2"/><Border ss:LineStyle="Continuous" ss:Position="Left" ss:Weight="2"/><Border ss:LineStyle="Continuous" ss:Position="Right" ss:Weight="2"/><Border ss:LineStyle="Continuous" ss:Position="Top" ss:Weight="2"/></Borders><Font ss:Bold="1" ss:FontName="Arial" ss:Size="10" ss:Underline="Single" x:Family="Swiss"/></Style><Style ss:ID="StyleEBAddress"><Alignment ss:Horizontal="Center" ss:Vertical="Center" ss:WrapText="1"/><Borders><Border ss:LineStyle="Continuous" ss:Position="Bottom" ss:Weight="2"/><Border ss:LineStyle="Continuous" ss:Position="Left" ss:Weight="2"/><Border ss:LineStyle="Continuous" ss:Position="Right" ss:Weight="2"/><Border ss:LineStyle="Continuous" ss:Position="Top" ss:Weight="2"/></Borders><Font ss:FontName="Arial" ss:Size="10" x:Family="Swiss"/></Style></Styles><Worksheet ss:Name="History "><Table ss:ExpandedColumnCount="9" ss:ExpandedRowCount="65536" x:FullColumns="1" x:FullRows="1"><Column ss:Width="100"/><Column ss:Width="100"/><Column ss:Width="55"/><Column ss:Width="250"/><Column ss:Width="65"/><Column ss:Width="65"/><Column ss:Width="200"/><Column ss:Width="200"/><Column ss:Width="200"/><Row ss:AutoFitHeight="0" ss:Height="22.5"><Cell ss:MergeDown="1" ss:StyleID="StyleEBName"><Data ss:Type="String">EB</Data></Cell><Cell ss:MergeAcross="4" ss:MergeDown="1" ss:StyleID="StyleSpecName"><ss:Data ss:Type="String">Specification : 
  HondaDiagnostics_5.1&#10;Revision 1.0, Status: released</ss:Data></Cell><Cell ss:MergeAcross="2" ss:MergeDown="1" ss:StyleID="StyleEBAddress"><Data ss:Type="String">8, avenue Eiffel F-78 420 CARRIERES-SUR-SEINE Tel: +33 (0)1 34 80 29 00 Fax: +33 (0)1 30 71 23 17</Data></Cell></Row><Row ss:AutoFitHeight="0" ss:Height="17"/><Row ss:Height="17" ss:Index="5"/><Row><Cell ss:StyleID="StyleHeader2"><Data ss:Type="String">Author</Data></Cell><Cell ss:StyleID="StyleHeader2"><Data ss:Type="String">Date</Data></Cell><Cell ss:StyleID="StyleHeader2"><Data ss:Type="String">Version</Data></Cell><Cell ss:StyleID="StyleHeader2"><Data ss:Type="String">Description</Data></Cell></Row><Row><Cell ss:StyleID="StyleHistory"><Data ss:Type="String">Gabriel LIPSA</Data></Cell><Cell ss:StyleID="StyleHistoryDate"><Data ss:Type="DateTime">2018-05-16</Data></Cell><Cell ss:StyleID="StyleHistory"><Data ss:Type="String">1.0</Data></Cell><Cell ss:StyleID="StyleHistory"><Data ss:Type="String">Creation</Data></Cell></Row></Table></Worksheet><Worksheet ss:Name="Matrix"><Table ss:ExpandedColumnCount="9" ss:ExpandedRowCount="65536" x:FullColumns="1" x:FullRows="1"><Column ss:Width="200"/><Column ss:Width="200"/><Column ss:Width="50"/><Column ss:Width="50"/><Column ss:Width="50"/><Column ss:Width="50"/><Column ss:Width="200"/><Column ss:Width="200"/><Column ss:Width="200"/><Row ss:AutoFitHeight="0" ss:Height="22.5"><Cell ss:MergeDown="1" ss:StyleID="StyleEBName"><Data ss:Type="String">EB</Data></Cell><Cell ss:MergeAcross="4" ss:MergeDown="1" ss:StyleID="StyleSpecName"><ss:Data ss:Type="String">Specification : 
  HondaDiagnostics_5.1&#10;Revision 1.0, Status: released</ss:Data></Cell><Cell ss:MergeAcross="2" ss:MergeDown="1" ss:StyleID="StyleEBAddress"><Data ss:Type="String">8, avenue Eiffel F-78 420 CARRIERES-SUR-SEINE Tel: +33 (0)1 34 80 29 00 Fax: +33 (0)1 30 71 23 17</Data></Cell></Row><Row ss:AutoFitHeight="0" ss:Height="17"/><Row ss:Height="17" ss:Index="5"/><Row><Cell ss:MergeAcross="1" ss:StyleID="StyleHeader2"><Data ss:Type="String">Requirements</Data></Cell><Cell ss:StyleID="StyleHeader2"><Data ss:Type="String"/></Cell><Cell ss:MergeAcross="4" ss:StyleID="StyleHeader2"><Data ss:Type="String">Coverage</Data></Cell><Cell ss:StyleID="StyleHeader2"><Data ss:Type="String">Covered documents</Data></Cell></Row><Row><Cell ss:StyleID="StyleHeader2"><Data ss:Type="String">Requirement number</Data></Cell><Cell ss:StyleID="StyleHeader2"><Data ss:Type="String">Requirement Description</Data></Cell><Cell ss:StyleID="StyleHeader2"><Data ss:Type="String">Layer</Data></Cell><Cell ss:StyleID="styleFull"><Data ss:Type="String">Full</Data></Cell><Cell ss:StyleID="stylePartial"><Data ss:Type="String">Partial</Data></Cell><Cell ss:StyleID="styleNotImplemented"><Data ss:Type="String">Not Implemented</Data></Cell><Cell ss:StyleID="StyleHeader2"><Data ss:Type="String">Justification</Data></Cell><Cell ss:StyleID="StyleHeader2"><Data ss:Type="String">Integration support (callback details, etc)</Data></Cell><Cell ss:StyleID="StyleHeader2"><Data ss:Type="String">Specification</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-1_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
HDC_CAN (Honda Diagnostic Communication on CAN) CAN (500kbps)
HDC_CAN ISO15765-2 / -3 / -4, ISO
14229-1
HDC_CAN (Honda Diagnostic Communication on CAN) is a communication protocol developed in order to realize
diagnostic communication with offboard tester using High speed CAN (500kbps). HDC_CAN is based on
ISO15765-2 / -3 / -4, ISO 14229-1.
Fig. 1-1 ECU CAN 16 Pin DLC (SAE J1962/ISO 15031-3
) 16 Pin DLC CAN HDC_CAN
ECU
Fig. 1-1 is an example of automotive ECU network. High speed CAN is connected with 16pin DLC (Diagnostic
connector in compliance with SAE J1962/ISO 15031-3). Offboard tester is connected to CAN through the 16pin DLC,
and communication between ECUs equipped with HDC_CAN.
CAN ECU HDC_CAN CAN ECU
CAN
In general, CAN is used for communication between ECUs. HDC_CAN communicate with offboard tester, utilizing
vacant time of the communication between ECUs.
CAN 16 Pin DLC Engine, T/M, , EPS 4 HDC_CAN ECU
( ECU CAN K-Line )
HDC_CAN ECU CAN
In the example below, 16pin DLC and 4 ECUs with HDC CAN, that is, Engine, T/M, Meter, EPS are on the CAN bus
(Other ECUs communicate with offboard tester through K-line even though they are connected with the CAN bus).
Besides, connected with multiple CAN networks through gateway.
Vehicle side 16 Pin DLC
(SAE J1962 / ISO 15031-3)
CAN bus
(ISO 11898 / 500 kbps)
Engine 6 CAN-H
14 CAN-L
K-Line bus
(ISO 9141 / ISO 14230)
7 K-LINE
T/M
EPS
Meter
SRS
Air-Bag
ABS/VSA
Fig. 1-1 - ECU Automotive ECU network
HDC_CAN ISO11898-1 CAN
1 1 4095 (
) CAN
HDC_CAN protocol operates on the CAN in compliance with ISO11898-1, creating a master-slave type one-to-one
link, offboard tester being a master. The link can exchange information (diagnostic message) of 4,095 bytes
maximum. In so doing, a packet of information may be divided to fit in the CAN frames at transmission, and
combined at reception.
Fig. 1-2 HDC_CAN HDC_CAN
CAN
ECU
Fig. 1-2 is an overview of software and hardware related to HDC_CAN diagnostic communication. HDC_CAN
receives CAN frames from offboard tester, combines and interprets them, and generates requests to and from
application software.
HDC_CAN 2
Normally it is incorporated into two parts. Each of them contains the followings.
&gt; Communication Service
CAN CAN 1
1 CAN CAN
CAN ID
During reception, this picks up diagnostic frames from frames that CAN hardware interface receives, and the
single or multiple frames are combined as a diagnostic message and sent to Diagnostic Service. During
transmission, it divides diagnostic messages from Diagnostic Service into single or multiple CAN frames, and
requests messages CAN hardware interface to send them to the bus. In other words, it includes CAN ID filtering,
processing to divide and combine messages, master-slave control and so on.
&gt; Diagnostic Service
This interprets diagnostic messages from Communication Service, and requests application software for
appropriate handlings. It also generates diagnostic messages according to information given from application
software, and requests Communication Service for their transmission.
ECU
Application software Diagnostic information generation and system
control requested by Diagnostic Service
Diagnostic Service ( )
Interpretation of received diagnostic message
_CAN and generation of response message
(Application layer)
Communication
software for
HDC CAN
Communication Service ( , )
Network control for message exchange
(Network layer, Transport layer)
ISO11898-1/-2 CAN
CAN ( , )
CAN Hardware CAN frame communication in accordance
with ISO 11898-1/2
(Physical layer , Data link layer)
CAN CAN bus
Fig. 1-2 HDC_CAN Overview of software and hardware
related to HDC_CAN diagnostic communication</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-1_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
This document defines the interpretation of the received diagnostic message, contents of processing of
corresponding diagnostic service and diagnostic service performs generation of a response massage.
/
CAN 1.1
The process to convert from a CAN frame to a diagnostic message and vice versa, such as addressing of
diagnostic messages, division and combination of diagnostic message, division and combination of diagnostic
messages, synchronized control of request / response messages. In other words, Communication Service
described in 1.1. is discussed. Diagnostic Service is discussed in separate document.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-1_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Purpose of each selection which constructs this document is explained in this section.
1.
1. Definition of the document
Purpose and scope of this document.
2. ~ 3.
2. Message format ~ 3. general requirement for response message creation
Basic structure of request and response message, and how to create response to request from physical address,
and function address.
4. Service $10 (DiagnosticSessionControl service) ~ 21. Service
4. Service $10 (DiagnosticSessionControl service) ~ 21. Not supported service
HDC_CAN
Explanation on HDC supported services about each diagnosis service detail, request, response message
structure and message check procedure.
22.
22. Reprogramming
HDC_CAN ECU
Request on Reprogramming ECU with HDC_CAN protocol
Appendix A Negative response code (NRC) list
4. ~ 21. (NRC)
Negative response code (NRC) from section 4. to 21.
Appendix B Supplementary explanation of reprograming ECU
ECU
Additional explanation other than diagnosis service for reprogramming ECU.
Appendix C The example of implementation of the request message inspection for every Service.
Service
The example of implementation of the request message inspection routine of each Service is shown.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-1_4</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
HDC_CAN
Below are reference documents related to HDC_CAN. Unless defined, the latest version of those shall be referenced.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EB bootloader implements only ISO 14229-1:2006.

Other documents should be covered by the communication stack.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-1_4_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
ISO 11898-1:2003
Road vehicles Controller area network (CAN) Part 1: Data link layer and physical signaling
ISO 11898-2:2003
Road vehicles Controller area network (CAN) Part 2: High-speed medium access unit
ISO 15765-2:2003
Road vehicles Diagnostics on Controller Area Networks (CAN) Part 2: Network layer services
ISO 15765-3:2004
Road vehicles -- Diagnostics on controller area network (CAN) -- Part 3: Implementation of unified diagnostic
services (UDS on CAN)
ISO 14229-1:2006
Road vehicles -- Unified diagnostics services (UDS) -- Specification and requirements</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EB bootloader implements only ISO 14229-1:2006.

Other documents should be covered by the communication stack.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-1_4_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
TS-DCC01
Honda Diagnostic Communication on CAN / ECU /
Honda Diagnostic Communication on CAN / Requirements for Communication of ECU / Communication Service</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-1_5</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
The term used for below in this book is explained.
Offboard tester
SAE J1978 Scan Tool, HDS, LET, SAE J2534
Generic name used to refer to external diagnostic device that supports part of, or all of communication protocol
defined in this document, such as SAE J1978 Scan Tool, HDS, LET, and SAE J2534 pass-through device.
message, request message, response message
ECU (
) ECU
ECU
The information packet exchanged with off-board tester between ECUs is shown. A message is constituted by
user data and address information (information showing the addressee and transmitting origin of a message).
The message by which the message sent from an off-board tester to ECU is sent to an off-board tester from a
request message and ECU is a response message.
User data
The information packet handled in diagnostic service is shown. Within this document, the message is used in
the same meaning as user data.
positive response message, negative response
message
2
As response message, two kinds, positive response message and negative response message, are defined.
Positive response message is returned when the request by request message is received and processed. At the
time, negative response message is returned, when it cannot process.
No response processing
The meaning of "no response processing" should not perform a positive response or negative response to a
request message, either.
Response pending
NRC
Because the meaning of "response pending" is executing required processing, when you cannot reply a positive
response or negative response of NRC except $78, extend the return term of a response message.
The abbreviation used for below in this book is explained.
SID (Service Identifier)
Data Byte #1 SID = $19 (Service $19)
"DTC "
The function of a message is expressed with the information currently assigned to Data Byte #1 of the message.
if SID is $19 (Service $19), it means DTC and the related information read-out request.
Cvt (Convention)
It is specified whether when each parameter contained in a data byte constitutes a message, it is mandatory, or
it is optional.
Cvt "M" "C" "U" 3
Three levels, "M", "C", and "U", are defined as Cvt, and they are the following definitions, respectively.
M (Mandatory)
M (Mandatory) Mandatory
C (Conditional)
C (Conditional) It is based on conditions. The condition is specified for every parameter of a message.
U (User Option)
U (User Option) The sending end of each message is determined.
PosRsp (Positive Response Message)
Positive Response Message
NegRsp (Negative Response Message)
Negative Response Message
NoRsp (No Response)
No Response
NRC (Negative Response Code)
Negative Response Code
$ + (16 ) $+ (hexadecimal number)
16 "$ + (16 )" (16 ) + "hex" "$10" "10 hex"
10
With this document, "$+ (hexadecimal number)" or (hexadecimal number) +"hex" uses for the notation of a
hexadecimal number. For example, "$10", "10hex". When there is no specification in particular, a decimal
number is shown except this.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
OBD
This section explains message format for communication except OBD regulation. The explanation is general and for
each system should be specified separately. application should be defined by each Diagnostic service.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-2_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
SID sub-function
Request message has two types one with sub-function and one without sub-function. Each has different message
format.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">Shall be configured by Customer

The following services are not supported by the EB Bootloader (should be managed by the customer):
14 ClearDiagnosticInformation service
19 ReadDTCInformation service
23 ReadMemoryByAddress service
28 CommunicationControl service
2F InputOutputControlByIdentifier service
35 RequestUpload service
85 ControlDTCSetting service</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-2_1_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
SID sub-function Table 2.1
Table 2.1 shows if each SID has sub-function or not.
Table 2.1 Service sub-function
Existence of the sub-function for every diagnostic service
SID Diagnostic service name sub-function
(Hex)
10 DiagnosticSessionControl service
11 ECUReset service
14 ClearDiagnosticInformation service
19 ReadDTCInformation service
22 ReadDataByIdentifier service
23 ReadMemoryByAddress service
27 SecurityAccess service
28 CommunicationControl service
2E WriteDataByIdentifier service
2F InputOutputControlByIdentifier service
31 RoutineControl service
34 RequestDownload service
35 RequestUpload service
36 TransferData service
37 RequestTransferExit service
3E TesterPresent service
85 ControlDTCSetting service
= sub-function SID SID with sub-function
= sub-function SID SID without sub-function</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">Shall be configured by Customer

The following services are not supported by the EB Bootloader (should be managed by the customer):
14 ClearDiagnosticInformation service
19 ReadDTCInformation service
23 ReadMemoryByAddress service
28 CommunicationControl service
2F InputOutputControlByIdentifier service
35 RequestUpload service
85 ControlDTCSetting service</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-2_1_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 2.2 sub-function
Table 2.2 shows request message format with sub-function.
(m) 4093
Maximum data parameter (m) is 4093 bytes.
Table 2.2 sub-function
Request message format with sub-function
Hex
Data Byte Parameter Cvt Hex Mnemonic
value
#1 SID Request SID M xx SIDRQ
#2 sub-function M 1) xx LEV_
#3 SID #1 U xx DP_#1
Data parameter #1 defined by SID
#4 SID #2 U xx DP_#2
Data parameter #2 defined by SID
: : : : :
#n-2 SID #m-2 U xx DP_#m-2
Data parameter #m-2 defined by SID
#n-1 SID #m-1 U xx DP_#m-1
Data parameter #m-1 defined by SID
#n SID #m U xx DP_#m
Data parameter #m defined by SID
1) ISO 14229-1 S( ) M
ISO 14229-1 specifies "S" but this Spec uses "M".
Table 2.3 sub-function
Table 2.3 shows structure of sub-function.
sub-function 1 bit suppressPosRspMsgIndicationBit 7 bit sub-function parameter value
sub-function consists of 1 bit of suppressPosRspMsgIndicationBit and 7 bit of sub-function parameter value
Table 2.3 sub-function structure of sub-function
bit Contents
suppressPosRspMsgIndicationBit
/
This bit indicates if a positive response message shall be suppressed by the server.
7 0 (FALSE)
server shall send a positive or negative response message.
1 (TRUE)
server shall NOT send a positive response message.
sub-function parameter value
0-6 sub-function parameter bit 0 6 7 bit ( $00 $7F)
sub-function parameter value is defined by 7bits from bit 0 to bit6 ($00 to $7F)</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-2_1_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 2.4 sub-function
Table 2.4 shows request message format without sub-function.
(m) 4094
Maximum data byte (m) is 4094 bytes.
Table 2.4 sub-function
request message format without sub-function
Hex
Data Byte Parameter Cvt Hex Mnemonic
value
#1 SID Request SID M xx SIDRQ
#2 SID #1 U xx DP_#1
Data parameter #1 defined by SID
#3 SID #2 U xx DP_#2
Data parameter #2 defined by SID
#4 SID #3 U xx DP_#3
Data parameter #3 defined by SID
: : : : :
#n-2 SID #m-2 U xx DP_#m-2
Data parameter #m-2 defined by SID
#n-1 SID #m-1 U xx DP_#m-1
Data parameter #m-1 defined by SID
#n SID #m U xx DP_#m
Data parameter #m defined by SID</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-2_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(PosRsp)
(NegRsp)
Response message have two types. Positive response message (PosRsp) in case request message is accepted.
Negative response message (NegRsp) in case request is not accepted.
Table 22.4
Negative response code used in the service is shown in Table 22.4.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-2_2_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 2.5
Table 2.5 shows positive response message format.
Table 2.5 positive response message format
Hex
Data Byte Parameter Cvt Hex Mnemonic
value
#1 SID Positive response SID M 1) xx SIDPR
#2 SID #1 U xx DP_#1
Data parameter #1 defined by SID
#3 SID #2 U xx DP_#2
Data parameter #2 defined by SID
#4 SID #3 U xx DP_#3
Data parameter #3 defined by SID
: : : : :
#n-2 SID #m-2 U xx DP_#m-2
Data parameter #m-2 defined by SID
#n-1 SID #m-1 U xx DP_#m-1
Data parameter #m-1 defined by SID
#n SID #m U xx DP_#m
Data parameter #m defined by SID
1) ISO 14229-1 S( ) M
ISO 14229-1 specifies "S" but this Spec uses "M".</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-2_2_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 2.6
Table 2.6 shows negative response message format.
Table 2.6 negative response message format
Hex
Data Byte Parameter Cvt Hex Mnemonic
value
#1 SID Negative response SID M 7F SIDNR
#2 SID Request message SID M xx SIDRQ
#3 Response code M xx NRC_</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
message preparation
ECU SID sub-function
It is defined by the information on request messages, such as a CAN address, SID, and sub-function, whether ECU
replies which that response of positive response, negative response, and no response.
ECU
This section defines general procedure of message analyze and response message creation, when ECU receives
request message.
Real application should be defined by the system.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-3_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
with sub-function
sub-function ECU
The general request message inspection routine of ECU which received the request message with sub-function is
shown.
(1)
Check if requested diagnosis service is supported or not.
a. ECU NRC $11 (serviceNotSupported
(SNS))
When the request is not supported, ECU should do no response or negative response with NRC $11
(serviceNotSupported (SNS)).
(2) sub-function parameter value
Check if sub function parameter value is supported or not.
a. sub-function parameter value ECU NRC $12
(subFunctionNotSupported (SFNS))
When the requested sub-function parameter is not supported, ECU should do no response or return
negative response message with NRC $12 (subFunctionNotSupported (SFNS)).
(3)
Request message length check
a. ECU NRC $13
(incorrectMessageLengthOrInvalidFormat (IMLOIF))
When request message length is not as specified, ECU should send negative response message with NRC
$13 (incorrectMessageLengthOrInvalidFormat (IMLOIF))/
(4)
Other checks
a.
NRC
Check all conditions specified by the diagnosis service, when request message is accepted then no
response or positive response. When request message is not accepted, no response or negative response
message with appropriate NRC.
</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">no NRC priority is defined in ISO 14229 2006</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-3_1_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
 Request message with physical address
Table 3.1 sub-function
Table 3.1 shows response message when physical address request message with sub-function is received.
Table 3.1 sub-function
Response requirement on request message of Physical address with sub-function
Offboard tester ECU
No suppressPosR SID sub-function Note
Address spMsgIndicatio Sub-function Data parameter Response
nBit SID support support support</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">no NRC priority is defined in ISO 14229 2006</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-3_1_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 3.2 shows response message when function address request message with sub-function is received
When response pending is done, response should be a according to the situation.
(1) ECU SID sub-function
ECU supports requested SID and sub-function and ready to accept the request. then positive response should
be sent.
(2) ECU SID sub-function (
SID )
NRC
ECU supports requested SID and sub-function but not possible to accept the request. e.g. request message
length is not correct or not possible to execute because of wrong condition. Then Negative response with
appropriate NRC should be sent.
ECU supports requested SID and sub-function but requested parameter is not supported. Then no response.
NRC = $31 (requestOutOfRange (ROOR))
NRC = $31 (requestOutOfRange (ROOR))
When function address request message is used, NRC = $31 (requestOutOfRange (ROOR)) should not be
replied. But when response pending is used, NRC = $31 (requestOutOfRange (ROOR)) should be replied in the
end.
ECU doesn't support requested SID. Then no response.
NRC = $11 (serviceNotSupported (SNS))
NRC = $11 (serviceNotSupported (SNS))
When function address request message is used, NRC = $11 (serviceNotSupported (SNS)) should not be
replied. But when response pending is used, NRC = $11 (serviceNotSupported (SNS)) should be replied in the
end.
(5) ECU SID sub-function
ECU supports requested SID but not sub-function. Then no response.
NRC = $12 (subFunctionNotSupported (SFNS))
NRC = $12 (subFunctionNotSupported (SFNS))
When function address request message is used, NRC = $12 (subFunctionNotSupported (SFNS)) should not be
replied. But when response pending is used, NRC = $12 (subFunctionNotSupported (SFNS)) should be replied
in the end.
(6) ECU SID sub-function
(suppressPosRspMsgIndicationBit = TRUE)
ECU supports requested SID and sub-function and ready to accept the request. But request message doesn't
require positive response suppressPosRspMsgIndicationBit = TRUE). Then no response. In case of response
pending, positive response message should be sent in the end.
ECU supports requested SID and sub-function but not possible to accept the request. e.g. request message
length is not correct or not possible to execute because of wrong condition. Then Negative response with
appropriate NRC should be sent.
(8) ECU SID sub-function
ECU supports requested SID and sub-function but requested parameter is not supported. Then no response.
NRC = $31 (requestOutOfRange (ROOR))
NRC = $31 (requestOutOfRange (ROOR))
When function address request message is used, NRC = $31 (requestOutOfRange (ROOR)) should not be
replied. But when response pending is used, NRC = $31 (requestOutOfRange (ROOR)) should be replied in the
end.
(9) ECU SID
ECU doesn't support requested SID. Then no response.
NRC = $11 (serviceNotSupported (SNS))
NRC = $11 (serviceNotSupported (SNS))
When function address request message is used, NRC = $11 (serviceNotSupported (SNS)) should not be
replied. But when response pending is used, NRC = $11 (serviceNotSupported (SNS)) should be replied in the
end.
(10) ECU SID sub-function
ECU supports requested SID but not sub-function. Then no response.
NRC = $12 (subFunctionNotSupported (SFNS))
NRC = $12 (subFunctionNotSupported (SFNS))
When function address request message is used, NRC = $12 (subFunctionNotSupported (SFNS)) should not be
replied. But when response pending is used, NRC = $12 (subFunctionNotSupported (SFNS)) should be replied
in the end.
</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer should configure the request in TresosStudio</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-3_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
message without sub-function
sub-function ECU
The general request message inspection routine of ECU which received the request message without sub-function is
shown.
(1)
Check if requested diagnosis service is supported or not.
a. SID ECU NRC $11 (serviceNotSupported (SNS))
When the request is not supported, ECU should do no response or negative response with NRC $11
(serviceNotSupported (SNS)).
(2)
Check if data parameter value is supported or not.
a.
ECU NRC $31 (requestOutOfRange (ROOR))
When the requested data parameter is not supported or data parameter is out of range, ECU should do no
response or return negative response message with NRC $31 (requestOutOfRange (ROOR)).
(3)
Request message length check
a. ECU NRC $13
(incorrectMessageLengthOrInvalidFormat (IMLOIF))
When request message length is not as specified, ECU should send negative response message with NRC
$13 (incorrectMessageLengthOrInvalidFormat (IMLOIF)).
(4)
Other checks
a.
NRC
Check all conditions specified by the diagnosis service, when request message is accepted then no
response or positive response. When request message is not accepted, no response or negative response
message with appropriate NRC.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">no NRC priority is defined in ISO 14229 2006</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-3_2_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 3.3 sub-function
Table 3.3 shows response message when physical address request message without sub-function is received.
Table 3.3 sub-function
Return regulation at the time of request message received of a physical address without sub-function
Offboard tester ECU
No SID Note
Address SID support Data parameter Response
support
1 at least 1 PosRsp positive Response
2 YES at least 1 NRC = $xx
3 Physical address NONE NegRsp NRC = $31 (ROOR)
4 NO NRC = $11 (SNS)
at least 1 = ECU 1
Data parameter of the request message is supported at least one.
NONE = ECU 1
Data parameter of the request message is not at all support
(1) ECU SID
ECU supports requested SID and sub-function and ready to accept the request. then positive response should
be sent.
(2) ECU SID
( SID
) NRC
ECU supports requested SID and sub-function but not possible to accept the request. e.g. request message
length is not correct or not possible to execute because of wrong condition. Then Negative response with
appropriate NRC should be sent.
(3) ECU SID NRC $31
(requestOutOfRange (ROOR))
ECU supports requested SID but non of parameters are not supported. then Negative response message with
NRC =$31 (requestOutOfRange (ROOR)) should be replied.
(4) ECU SID NRC $11 (serviceNotSupported (SNS))
ECU doesn't support requested SID. Then negative response with NRC $11 (serviceNotSupported (SNS))
should be sent.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-3_2_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 3.4 sub-function
Table 3.4 shows response message when function address request message without sub-function is received.
Table 3.4 sub-function
Return regulation at the time of request message received of a functional address without sub-function
Offboard tester ECU
No SID Note
Address SID support Data parameter Response
support
1 at least 1 PosRsp positive response
2 YES at least 1 NegRsp NRC = $xx
3 Function address NONE 1)
4 NO NoRsp No response 1)
at least 1 = ECU 1
Data parameter of the request message is supported at least one.
NONE = ECU 1
Data parameter of the request message is not at all support
1) =
When response pending is done, response should be a according to the situation.
(1) ECU SID
ECU supports requested SID and sub-function and ready to accept the request. then positive response should
be sent.
(2) ECU SID
( SID
) NRC
ECU supports requested SID and sub-function but not possible to accept the request. e.g. request message
length is not correct or not possible to execute because of wrong condition. Then Negative response with
appropriate NRC should be sent.
(3) ECU SID
ECU supports requested SID and sub-function but requested parameter is not supported. Then no response.
NRC = $31 (requestOutOfRange (ROOR))
NRC = $31 (requestOutOfRange (ROOR))
When function address request message is used, NRC = $31 (requestOutOfRange (ROOR)) should not be
replied. But when response pending is used, NRC = $31 (requestOutOfRange (ROOR)) should be replied in the
end.
(4) ECU SID
ECU doesn't support requested SID. Then no response.
NRC = $11 (serviceNotSupported (SNS))
NRC = $11 (serviceNotSupported (SNS))
When function address request message is used, NRC = $11 (serviceNotSupported (SNS)) should not be
replied. But when response pending is used, NRC = $11 (serviceNotSupported (SNS)) should be replied in the
end.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-4_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Service $10 (DiagnosticSessionControl service) ECU DiagnosticSession
Service $10 (DiagnosticSessionControl service) is used to change ECU DiagnosticSession.
DiagnosticSession ECU (
CAN ) DiagnosticSession
ECU DiagnosticSession
DiagnosticSession presents Specific diagnostic service and function group availability in the ECU. Some diagnostic
functions for example security access, stop of CAN communication for system control, require change of
DiagnosticSession to be available. Thus, ECU needs to change the diagnostic service which an offboard tester can use,
whenever the change of DiagnosticSession is performed.
ECU defaultSession 1 DiagnosticSession defaultSession
( / DTC )
( CAN ) defaultSession
DiagnosticSession
In general ECU supports one or more Diagnostic session in addition to defaultSession. Default session has basic
diagnostic functions. For example current and stored data reading, DTC reading, etc. Higher level diagnostic function,
for example security access or CAN communication stop for vehicle control system, is only available at another
DiagnosticSession switched from defaultSession.
DiagnosticSession
Available diagnostic function at each DiagnosticSession is defined by the system.
diagnosticSessionType Service $10 ECU
DiagnosticSession ECU diagnosticSessionType DiagnosticSession
The offboard tester requires ECU to transfer to DiagnosticSession by Service $10 request message, which has
diagnosticSessionType. Then ECU replies with response either transfer to requested DiagnosticSession or not.
ECU 1 DiagnosticSession ON ECU defaultSession
( )
ECU is working always under one DiagnosticSession and when IG is on, ECU works at defaultSession.
HDC_CAN DiagnosticSession
HDC_CAN defines below DiagnosticSession.
defaultSession ( )
extendedDiagnosticSession
programmingSession
engineeringSession
DiagnosticSession
However, additional DiagnosticSession may be defined by the system.
DiagnosticSession
However, additional DiagnosticSession may be defined by the system.
Service $10 DiagnosticSession
Supported DiagnosticSession by Service $10 is defined by the system.
defaultSession extendedDiagnosticSession 1
defaultSession and extendedDiagnosticSession 1) must be supported by all system.
programmingSession engineeringSession ECU
programmingSession engineeringSession
Transfer to programmingSession and engineeringSession is protected by the security. ECU should not transfer to
programmingSession and engineeringSession unless security is released.
DiagnosticSession Service $10 (S3Server)
DiagnosticSession
Transfer between DiagnosticSessions is done by Service $10 request message or Session timer (S3Server) timeout. The
transfer rule between DiagnosticSessions is as follows.
DiagnosticSession ( DiagnosticSession ) Service $10
(DiagnosticSessionControl service)
In general transfer between DiagnosticSessions including transfer to the same diagnosticSession is done by
Service $10 request message.
There are some exceptions
1) defaultSession programmingSession engineeringSession (
)
From defaultSession to programmingSession and engineeringSession is not allowed. (needs security release)
2) Service $10 programmingSession defaultSession engineeringSession
extendedDiagnosticSession
By Service $10 request from programmingSession to defaultSession, extendedDiagnosticSession and to
engineeringSession is not allowed.
3) defaultSession (S3server) defaultSession
If there is Sessiontimer (S3server) timeout, transfer to defaultSession except at defaultSession.
(S3Server)
( ) ECU defaultSession
TS-DCC01
Sessiontimer timeout means one timer in the ECU to monitor time length when no request message from the
offboard tester is coming shows timeout. For details, it is referring to TS-DCC01 .
Fig. 4-1 DiagnosticSession DiagnosticSession
DiagnosticSession
As example, Fig. 4-1 shows transfer among DiagnosticSessions. The definition should be done by the system.

All the systems are requested to support Service $28 and Servic $85. The reason why extendedDiagnosis is
needed.
(6)
ON S3
IG sw ON S3 time out (5) programming
SID $10 Session (7)
(2) SID $10
SID $10
(1) defaultSession extendedDiagnostic (4) (11) SID $10
SID $10 ( Session SID $10
(3) engineering (9)
SID $10 (8) Session SID $10
S3 SID $10
S3 time out
(10)
SID $10
S3
S3 time out
Fig. 4-1 DiagnosticSession example of diagnosticSession transfer
(1) defaultSession diagnosticSessionType = defaultSession Service $10
ECU defaultSession
When ECU is in defaultSession and received Service $10 diagnosticSessionType = defaultSession, ECU keeps
defaultSession.
(2) defaultSession diagnosticSessionType = extendedDiagnosticSession Service $10
ECU extendedDiagnosticSession
When ECU is in defaultSession and received Service $10 diagnosticSessionType = extendedDiagnosticSession,
then ECU transfers to extendedDiagnosticSession.
(3) extendedDiagnosticSession diagnosticSessionType = defaultSession Service $10
(S3Server) ECU defaultSession
When ECU is in extendedDiagnosticSession and received Service $10 diagnosticSessionType = defaultSession
or Session timer shows time-out, ECU transfers to defaultSession.
(4) extendedDiagnosticSession diagnosticSessionType = extendedDiagnosticSession Service $10
ECU extendedDiagnosticSession
When ECU is in extendedDiagnosticSession and received Service $10 diagnosticSessionType =
extendedDiagnosticSession, then ECU keeps extendedDiagnosticSession.
(5) extendedDiagnosticSession diagnosticSessionType = programmingSession Service $10
ECU programmingSession
When ECU is in extendedDiagnosticSession and received Service $10 diagnosticSessionType =
programmingSession, then ECU transfers to programmingSession. In this case security needs to be released.
(6) programmingSession (S3Server) ECU defaultSession
programmingSession defaultSession (S3 Server)
When ECU is in programmingSession and Session Timer (S3 timer) has time out, then ECU should transfer to
defaultSession. From programmingSession to defaultSession is done only by the timeout of Session timer (S3
Server).
(7) programmingSession diagnosticSessionType = programmingSession Service $10
ECU programmingSession
When ECU is in programmingSession and received Service $10 diagnosticSessionType = programmingSession,
then ECU keeps programmingSession.
(8) extendedDiagnosticSession diagnosticSessionType = engineeringSession Service $10
ECU engineeringSession
When ECU is in extendedDiagnosticSession and received Service $10 diagnosticSessionType =
engineeringSession, then ECU transfers to engineeringSession. In this case security needs to be released.
engineeringSession diagnosticSessionType = extendedDiagnosticSession
Service $10 ECU extendedDiagnosticSession
When ECU is in engineeringSession and received Service $10 diagnosticSessionType =
extendedDiagnosticSession, then ECU transfers to extendedDiagnosticSession.
(9) engineeringSession diagnosticSessionType = engineeringSession Service $10
ECU engineeringSession
When ECU is in engineeringSession and received Service $10 diagnosticSessionType = engineeringSession,
then ECU keeps engineeringSession.
(10) engineeringSession diagnosticSessionType = defaultSession Service $10
(S3Server) ECU defaultSession
When ECU is in engineeringSession and received Service $10 diagnosticSessionType = defaultSession or
Session timer shows time-out, ECU transfers to defaultSession.
(11) engineeringSession diagnosticSessionType = programmingSession Service $10
ECU programmingSession
When ECU is in engineeringSession and received Service $10 diagnosticSessionType = programmingSession,
then ECU transfers to programmingSession.
- defaultSession defaultSession DiagnosticSession
defaultSession
Caution - When ECU transfers from other than defaultSession to defaultSession, functions, which are not
allowed in the defaultSession must in general not work.
) Service $27
example: Released security by Service $27 should be back to protected.
Available service should be defined by each diagnosticSession.
Table 4.1 DiagnosticSession
Table 4.1 is guideline for available service at each diagnosticSession. Detail should be defined by the system.
Table 4.1 DiagnosticSession
Services allowed during each diagnostic sessions
SID Diagnostic service name Default extendedDiag programming engineeringSe
(Hex) Session nosticSession Session ssion
2E WriteDataByIdentifier service
2F InputOutputControlByIdentifier service / 3)
3E TesterPresent service
Diagnostic Service not supported.
(sub-function, dataIdentifier, etc.)
Diagnostic Service and all functions (sub-function, dataIdentifier, etc.) are supported.
Diagnostic Service is supported but some functions are not supported.
1) /
Supported or not supported should be defined by the system.
2) dataIdentifier dataIdentifier
dataIdentifiers, which are protected by the security should not be accessed.
3) engineeringSession
Functions only available at engineeringSession can not be accessed.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer shall configure the accepted sessions.

The customer shall configure the protection of ProgrammingSession and EngineeringSession by SecurityAccess.

The following services are not supported by the EB Bootloader (should be managed by the customer):
14 ClearDiagnosticInformation service
19 ReadDTCInformation service
23 ReadMemoryByAddress service
28 CommunicationControl service
2F InputOutputControlByIdentifier service
35 RequestUpload service
85 ControlDTCSetting service</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-4_2_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 4.2 Service $10 Service $10 1
SID 1 sub-function (1 suppressPosRspMsgIndicationBit 7
diagnosticSessionType) sub-function bit 7 suppressPosRspMsgIndicationBit bit 0-6
diagnosticSessionType suppressPosRspMsgIndicationBit 2.1.2
Table 4.2 shows Service $10 request message format. which consists of SID and sub-function. Sub-function has 1 bit
of suppressPosRspMsgIndicationBit and 7bits of diagnosticSessionType. Detail of suppressPosRspMsgIndicationBit
should refer to section 2.1.2
Table 4.2 Service $10
Service $10 Request message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $10 SID M 10
Service $10 Request SID
#2 sub-function = [suppressPosRspMsgIndicationBit + M 00-FF
diagnosticSessionType]</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-4_2_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 4.3 Service $10 Service $10
1 SID 1 diagnosticSessionType
diagnosticSessionType diagnosticSessionType
Table 4.3 shows Service $10 positive response message format. diagnosticSessionType in reply should be
DiagnosticSessionType in request message.
ECU (diagnosticSessionType DiagnosticSession
)
ECU after receiving the message should perform request (transfer to requested diagnosticSession) and then send the
positive response.
Table 4.3 Service $10
Service $10 Positive response message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $10 SID M 50
Service $10 Positive response SID
#2 diagnosticSessionType M 00-7F</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer should configure the response size in TresosStudio</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-4_2_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
2.2.2
Negative response message should follow section 2.2.2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-4_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $10
The section defines parameter for Service $10 message.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-4_3_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
diagnosticSessionType (sub-function bit 0-6) Service $10 7
ECU DiagnosticSession
diagnosticSessionType (bit 0-6 of sub-function) is 7 bits information in Service $10 request message. It shows
DiagnosticSession in which ECU changes.
diagnosticSessionType
Positive response message includes the same value as received diagnosticSessionType value.
Table 4.4 diagnosticSessionType
Table 4-4 shows definition of diagnosticSessionType.
programmingSession engineeringSession
SecurityType
Since programmingSession and engineeringSession are protected by security, Security type to release security is
shown also on Table 4.4.
DiagnosticSessionType
DiagnosticSessionType to support is defined by system.
DiagnosticSessionType DiagnosticSessionType
And additional DiagnosticSessionType may be supported by system. Follow the request for every system about added
DiagnosticSessionType.
Table 4.4 Service $10 diagnosticSessionType
Diagnostic DiagnosticSession
SessionType Description Protection
(HEX) by
security
00 (ISO 14229-1 )
not used (reserved by ISO 14229-1)
defaultSession
DiagnosticSession ECU
01 defaultSession defaultSession no
Only for basic diagnostic function. When ECU is turned on ECU starts from
defaultSession. Available functions are defined by the system.
programmingSession
DiagnosticSession
(Service $34 / $36 / $37 ) programmingSession
02 ECU diagnosticSessionType Type I
For reprogramming purpose. Special diagnosis such as service $34/$36/$37
are only available at this session. Reprogrammable ECU must support this
diagnostic session.
extendedDiagnosticSession
03 DiagnosticSession extendedDiagnosticSession defaultSession
Special diagnosis to analysis and inspection at the dealer shop is available. no
At extendedDiagnosticSession diagnostic functions at defaultSession are
also available.
04 (ISO 14229-1 )
not used (reserved by ISO 14229-1)
05-3F (ISO 14229-1 )
not used (reserved by ISO 14229-1)
( )
40-4E not used (This range of values is reserved for vehicle manufacture-specific
use)
engineeringSession
DiagnosticSession engineeringSession
4F defaultSession extendedDiagnosticSession Type IV
Special diagnostic functions, which are for development, field analysis, and
End of line at OEM, and not for the dealer shop. Functions at
engineeringSession should include functions at defaultSession and
extendedDiagnosticSession.
( )
50-5F not used (This range of values is reserved for vehicle manufacture-specific
use)
60-7E ( 1))
not used (This range of values is reserved for system-supplier1)-specific use)
7F (ISO 14229-1 )
not used (reserved by ISO 14229-1)
1) HGT
System-supplier area must be agreed by HGT.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer shall configure the protection of ProgrammingSession and EngineeringSession by SecurityAccess.

The customer shall configure the sessions needed.
</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-4_3_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 4.5 Service $10 NRC 4.4
Table 4.5 shows Service $10 NRC. When to reply with negative response message should refer to section 4.4.
Table 4.5 Service $10
Service $10 Negative response code definition
NRC (Hex) Description
subFunctionNotSupported (SFNS)
12 sub-function
Requested sub-function is not supported..
incorrectMessageLengthOrInvalidFormat (IMLOIF)
13
Received message length or message structure doesn't suit Spec. .
securityAccessDenied (SAD)
33 programmingSession engineeringSession
Correct security type is not released to transfer to programmingSession or engineeringSession.
requestCorrectlyReceived-ResponsePending (RCRRP)
( NRC
)
78 Due to execution of requested task it is not possible to respond positive response or negative
response with appropriate NRC. Extension of time to reply for response message is requested.
TS-DCC01
Detail should refer to TS-DCC01 .
diagnosticSessionType = programmingSession
This negative response code is available only at diagnosticSessionType = programmingSession
subFunctionNotSupportedInActiveSession (SFNSIAS)
7E DiagnosticSession sub-function
Current diagnosticSession doesn't support requested sub-function.
- NRC = $78 (RCRRP) diagnosticSessionType = programmingSession
Caution - NRC = $78 (RCRRP) is available only at diagnosticSessionType = programmingSession.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer shall configure the accepted sessions.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-4_4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $10 ECU
Reply from ECU should follow this description.
Table 4.4 DiagnosticSession
If the system definition is different from Table 4.4, ECU should follow the system requirement.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The EB bootloader doesn't cover the system requirement.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-4_4_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(1) ( 2)
Check length of request message (check longer than minimum length 2))
a. 2 ECU NRC = $13 (IMLOIF)
4.4.3
When received request message is shorter than 2bytes, ECU should prepare negative response message
with NRC = $13 (IMLOIF) and execute reply response message specified at section 4.4.3.
(2) diagnosticSessionType
diagnosticSessionType analysis
a. diagnosticSessionType ECU NRC = $12
(SFNS) 4.4.3
When diagnosticSessionType in received request message is not supported, ECU should prepare negative
response message with NRC = $12 (SFNS) and execute reply response message specified at section 4.4.3.
(3)
Check length of request message
a. 2 ECU NRC = $13 (IMLOIF)
4.4.3
When received request message is NOT 2bytes, ECU should prepare negative response message with
NRC = $13 (IMLOIF) and execute reply response message specified at section 4.4.3.
(4) (1) (3) diagnosticSessionType
When message doesn't match the above (1) to (3), request message check, which is specified in below
subsection , should be done.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer shall configure the protection of ProgrammingSession and EngineeringSession by SecurityAccess.

No NRC priority is defined is ISO 14229 2006</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-4_4_1_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(5) DiagnosticSession
DiagnosticSession analysis
a. DiagnosticSession programmingSession ECU NRC = $7E (SFNSIAS)
4.4.3
When diagnosticSession is programmingSession, ECU should prepare negative response message with
NRC = $7E (SFNSIAS) and execute reply response message specified at section 4.4.3.
Prior to diagnosticSessioType, check if enough length of request message is received or not.
(6) (5) ECU DiagnosticSessionControl service
ECU 4.4.2
4.4.3
If (5) is not true, ECU should judge requested DiagnosticSessionControl service is possible to execute. ECU
should execute task specified in 4.4.2, then prepare positive response message, and execute reply response
message specified at section 4.4.3.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer shall configure the sessions needed.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-4_4_1_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(7) DiagnosticSession
DiagnosticSession analysis
a. ECU DiagnosticSession defaultSession ECU NRC = $7E (SFNSIAS)
4.4.3
When diagnosticSession is defaultSession, ECU should prepare negative response message with NRC =
$7E (SFNSIAS) and execute reply response message specified at section 4.4.3.
b. ECU DiagnosticSession programmingSession ECU
4.4.3
When diagnosticSession is programmingSession, ECU should prepare positive message and execute reply
response message specified at section 4.4.3.
(8)
Security check
a. Type I ( ) ECU NRC = $33
(SAD) 4.4.3
When type I security is not released or failed to released, ECU should prepare negative response message
with NRC = $33 (SAD) and execute reply response message specified at section 4.4.3.
6 "Service $27 (SecurityAccess service)"
Detail of security access is described in section 6 "Service $27 (SecurityAccess service)".
(9) (7) (8) ECU DiagnosticSessionControl service
ECU 4.4.2
4.4.3
If (7) or (8) is not true, ECU should judge requested DiagnosticSessionControl service is possible to execute.
ECU should execute task specified in 4.4.2, then prepare positive response message, and execute reply
response message specified at section 4.4.3.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer shall configure the protection of ProgrammingSession and EngineeringSession by SecurityAccess.

The customer shall configure the sessions needed.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-4_4_1_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(10) DiagnosticSession
DiagnosticSession analysis
a. ECU DiagnosticSession programmingSession ECU NRC = $7E (SFNSIAS)
4.4.3
When diagnosticSession is programmingSession, ECU should prepare negative response message with
NRC = $7E (SFNSIAS) and execute reply response message specified at section 4.4.3.
(11) (10) ECU DiagnosticSessionControl service
ECU 4.4.2
4.4.3
If (10) is not true, ECU should judge requested DiagnosticSessionControl service is possible to execute. ECU
should execute task specified in 4.4.2, then prepare positive response message, and execute reply response
message specified at section 4.4.3.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer shall configure the sessions needed.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-4_4_1_4</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(12) DiagnosticSession
DiagnosticSession analysis
a. ECU DiagnosticSession defaultSession programmingSession ECU NRC = $7E
(SFNSIAS) 4.4.3
When diagnosticSession is programmingSession, ECU should prepare negative response message with
NRC = $7E (SFNSIAS) and execute reply response message specified at section 4.4.3.
(13)
Security check
a. Type IV ( ) ECU NRC = $33
(SAD) 4.4.3
When type IV security is not released or failed to released, ECU should prepare negative response message
with NRC = $33 (SAD) and execute reply response message specified at section 4.4.3.
6 "Service $27 (SecurityAccess service)"
Detail of security access is described in section 6 "Service $27 (SecurityAccess service)".
(14) (12) (13) ECU DiagnosticSessionControl service
ECU 4.4.2
4.4.3
If (12) or (13) are not true, ECU should judge requested DiagnosticSessionControl service is possible to execute.
ECU should execute task specified in 4.4.2, then prepare positive response message, and execute reply
response message specified at section 4.4.3.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer shall configure the sessions needed.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-4_4_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
diagnosticSessionType
When ECU judges DiagnosticSessionControl service is possible based on 4.4.1 criteria, ECU should execute task
written after.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-4_4_2_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
ECU DiagnosticSession defaultSession
ECU diagnosticSession should transfer to defaultSession.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-4_4_2_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
ECU DiagnosticSession programmingSession
ECU diagnosticSession should transfer to programmingSession.
ECU DiagnosticSession programmingSession
When ECU is in programmingSession and it is judged to have limitation on system function from safety point of view,
some limit should be defined by the system.
ON
Reprogramming is done without engine running, ECU should not spend unnecessary energy.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer shall configure the protection of ProgrammingSession and EngineeringSession by SecurityAccess.

The EB will not check the preconditons.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-4_4_2_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
ECU DiagnosticSession extendedDiagnosticSession
ECU diagnosticSession should transfer to extendedDiagnosticSession.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer shall configure the sessions needed.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-4_4_2_4</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
ECU DiagnosticSession engineeringSession
ECU diagnosticSession should transfer to engineeringSession.
</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer shall configure the sessions needed.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-4_4_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Reply response message
3
( or ) suppressPosRspMsgIndicationBit
As described in section 3, not only by request message analysis results but also addressing type (physical or function
address), or suppressPosRspMsgIndicationBit have influence on response message.
Table 4.6 4.4.1
Table 4.6 shows response message definition.
diagnosticSessionType = programmingSession ($02) 4.4.2
(P2CAN) NRC = $78
(RCRRP)
diagnosticSessionType = programmingSession ($02) request message can request extension of positive response
message by sending negative response message with NRC = $78 (RCRRP) if positive response message can't be
sent within specified time of P2CAN due to on going task specified in 4.4.2.
P2CAN NRC = $78 (RCRRP) TS-DCC01
Detail of negative response message of P2CAN, negative response message with NRC = $78 (RCRRP) should refer to
TS-DCC01 .
- diagnosticSessionType programmingSession (defaultSession extendedDiagnosticSession
engineeringSession ) NRC = $78 (RCRRP)
4.4.1 (6) (11) (14) DiagnosticSession ECU
P2CAN DiagnosticSession
Caution - Negative response message with NRC = $78 is allowed only at programmingSession. Meaning ECU,
which judges to perform transfer specified in 4.4.1 (6), (11) or (14), should send mode transfer and positive
response message reply within time P2CAN.
Table 4.6 Service $10
Service $10 Reply to request message
Request message check result suppressPosRs
pMsgIndication Response message
No 1) Description addressing Bit
type
(1)a Physical 0 (False) (NRC $13)
(3)a Wrong message length 1 (True) Negative response
Function
diagnosticSessionType 0 (False) (NRC $12)
(2)a Physical 1 (True) Negative response
Requested diagnosticSessionType 0 (False)
is not supported Function 1 (True) No response
DiagnosticSession
(5)a diagnosticSessionType
(7)a Physical 0 (False) (NRC $7E)
(10)a Current Diagnostic Session doesn't 1 (True) Negative response
(12) a support requested Function
diagnosticSessionType.
(8)a Physical 0 (False) (NRC $33)
(13)a Security not released 1 (True) Negative response
Function
(6) DiagnosticSessionControl service 0 (False) Positive response
(7)b Physical
(9) Requested
(11) DiagnosticSessionControl service Function 1 (True) No response
(14) executable
1) 4.4.1 No.
No. is corresponding to No. in section 4.4.1.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer shall configure the sessions needed.

This NRC78 is related to DSC02 only for the securityAccess wich can take more than P2. The client should configure the SA for the programming session.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-4_5</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
diagnosticSessionType = programmingSession ($02) Service $10 ECU
With this section, ECU which received Service $10 in which diagnosticSessionType = programmingSession ($02) was
included specifies the processing to perform.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-4_5_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
diagnosticSessionType = programmingSession ($02) Service $10
ECU programmingSession
The offboard tester requests ECU to transfer to programmingSession by service $10 request message with
diagnosticSessionType = programmingSession ($02)
programmingSession
The communication process of executing the changes to programmingSession is as follows.
(1) diagnosticSessionType = programmingSession ($02) Service $10
Process 1 : The offboard tester sends Service $10 request message with diagnosticSessionType =
programmingSession ($02)
(2) ECU diagnosticSessionType = programmingSession ($02) Service $10
Type I
22.4 NRC = $78 (RCRRP)
Process 2: When ECU receives service $10 request message with diagnosticSessionType =
programmingSession ($02), ECU should prove "TYPE I security" is released. If security is released, then
ECU should send negative response message with NRC = $78 (RCRRP) and start activating
reprogramming module.
(3) ECU
Process 3: When reprogramming module is started, ECU should send positive response message.
ECU diagnosticSessionType = programmingSession ($02)
Service $10 22.7 Tc2
ECU should start reprogramming mode software within Tc2 from the completion of transmitting of the
Service $10 request message from an off-board tester, and should complete the reply of a positive
response message.
- ECU diagnosticSessionType = programmingSession ($02) Service $10
Caution - ECU should not start reprogramming module besides receiving service $10 request message with
diagnosticSessionType = programmingSession ($02).
Fig. 4-2 programmingSession
Fig. 4-2 shows the procedure.
Process (1)
(1) (TesterPresent might come
Request (TesterPresent
(2) (3)
Offboard tester Process (2) Process (3)
ECU programmingSession
NegRsp
(NRC $78 PosRsp
Tc2
P2CAN
Fig. 4-2 programmingSession
Communication process of programmingSession transfer</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer shall configure the protection of ProgrammingSession and EngineeringSession by SecurityAccess.

The customer shall configure the sessions needed.

Tc2 timing is also HW dependent and cannot be garanteed.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-4_5_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
ECU 22.7 Tc2
NRC=$78 (RCRRP)
When ECU requires extension of positive response time following section 4.4.3 by sending negative response
message with NRC = $78 (RCRRP), ECU should send within Tc2 positive response message or negative response
message other than NRC = $78 (RCRRP).</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-4_5_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
defaultSession 22.4 " "
ECU at programmingSession should return to "un-judged mode" specified in section 4.4.2, when below (1) to (4)
conditions are met.
(1) (S3Server)
Session Timer (S3Server) time out
(2) OFF
IG sw off.
(3)
Battery cut.
(4) Service $11 " OFF" " "
ECU
Execution of the ECU reset by Service $11 request.
programmingSession ECU (ECU DTC )
( )
3
When ECU is returned from programmingSession, DTC should be initialized (erased). Other data like learned values
should be defined by the system. 3)
3
Self-learned values, which can be used after reprogramming, should not be initialized but this depends on the
system. That's why data other than DTC should be defined by the system.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The EB Bootloader will leave the ProgrammingSession on S3 timeout and on Reset (Service $11) request. 
All other conditions are not checked and should be implemented by the integrator if needed.
DTC and learned values initialization shall be managed by customer

Reprogramming status shall be fully managed in integration code.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-5_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Service $11(ECUReset service) ECU
Service $11 (ECUReset service) is used to reset ECU.
resetType Service $11 ECU ECU
resetType
The offboard tester requests ECU reset by Service request $11 with resetType. ECU should reply response with
execute or not to the RESET request defined by resetType.
Service $11 defaultSession
( )
Service $11 Diagnostic functions must not be performed at defaultSession. And it is possible to reject due to safety
reasons such as engine run.
Service $11 DiagnosticSession
DiagnosticSession, which allows Service $11 and vehicle condition should be defined by every system.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer should configure the request in TresosStudio</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-5_2_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 5.1 Service $11 Service $11 1
SID 1 sub-function (1 suppressPosRspMsgIndicationBit 7 resetType)
sub-function bit 7 suppressPosRspMsgIndicationBit bit 0-6 resetType
suppressPosRspMsgIndicationBit 2.1.2
Table 5.1 shows Service $11 request message format, which consists of SID and sub-function. Sub-function has 1 bit
(bit 7) of suppressPosRspMsgIndicationBit and 7 bit (bit 0-6) of resetType. Detail of suppressPosRspMsgIndicationBit
should refer to section 2.1.2.
Table 5.1 Service $11
Service $11 Request message format
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $11 SID M 11
Service $11 Request SID
#2 sub-function = [suppressPosRspMsgIndicationBit + M 00-FF
resetType]</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-5_2_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 5.2 Service $11 Service $11
1 SID 1 resetType resetType
resetType
Table 5.2 shows Service $11 positive response message format. The message contains 1 byte of positive response
message SID and 1 bytes resetType. Positive response message includes the same value as received resetType
value.
ECU (resetType
)
ECU after receiving the message should send positive message and execute request process (ECU reset defined by
resetType).
Table 5.2 Service $11
Service $11 Positive response message format
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $11 SID M 51
Service $11 Positive response SID
#2 resetType M 00-7F</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">A callback shall be implemented by the customer to preform the reset</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-5_2_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
2.2.2
Negative response message should follow section 2.2.2.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-5_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $11
The section defines parameter for Service $11 message.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-5_3_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
resetType (sub-function bit 0-6) Service $11 7 ECU
resetType (bit 0-6 of sub-function) is 7 bits information in Service $11 request message.
resetType
Positive response message includes the same value as received resetType value.
Table 5.3 resetType
Table 5.3 shows definition of resetType.
Table 5.3 Service $11 resetType
Service $11 resetType definition
resetType resetType resetType name and explanation
(Hex)
00 (ISO 14229-1 )
not used (reserved by ISO 14229-1)
hardReset
01 ( RAM )
The same as battery cut. e.g. back up RAM will be erased.
02-05 (ISO 14229-1 )
not used (reserved by ISO 14229-1)
06-3F (ISO 14229-1 )
not used (reserved by ISO 14229-1)
40-5F ( )
not used (This range of values is reserved for vehicle-manufacturer-specific use.)
60-7E ( 1))
not used (This range of values is reserved for system-supplier-specific use. 1))
7F (ISO 14229-1 )
not used (reserved by ISO 14229-1)
1) HGT
System-supplier area must be agreed by HGT.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EB tresos Bootloader calls a callback to request the storage of the reset cause.
The customer is responsible to implement this callback and the callack allowing  to get the reset cause.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-5_3_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 5.4 Service $11 NRC 5.4
Table 5.4 shows Service $11 NRC definition. Negative response should be refer to 5.4.
Table 5.4 Service $11
Service $11 Negative response code definition
NRC (Hex) Description
subFunctionNotSupported (SFNS)
12 sub-function
Requested sub-function is not supported..
incorrectMessageLengthOrInvalidFormat (IMLOIF)
13
Received message length or message structure doesn't suit Spec. .
conditionsNotCorrect (CNC)
22
Vehicle condition doesn't allow reset.
securityAccessDenied (SAD)
33
Security is not released.
serviceNotSupportedInActiveSession (SNSIAS)
7F DiagnosticSession Service $11
Current diagnostic Session doesn't support Service $11.
- Service $11 NRC = $78 (RCRRP)
Caution NRC=$78 (RCRRP) is not allowed in Service 11..</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-5_4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $11 ECU
Reply from ECU should follow this description.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-5_4_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(1) DiagnosticSession (Service $11 DiagnosticSession ECU )
DiagnosticSession analysis (valid for ECU, which has a certain diagnosticSession without supported Service
$11.)
a. DiagnosticSession Service $11 ECU NRC = $7F (SNSIAS)
5.4.3
When current diagnosticSession doesn't support service $11, ECU should prepare negative response with
NRC = $7F (SNSIAS) and execute reply response message specified at section 5.4.3.
(2) ( 4)
Check length of request message (check longer than minimum length 4))
a. 2 ECU NRC = $13 (IMLOIF)
5.4.3
When received request message is shorter than 2bytes, ECU should prepare negative response message
with NRC = $13 (IMLOIF) and execute reply response message specified at section 5.4.3.
(3) resetType
resetType analysis
a. resetType ECU NRC = $12 (SFNS)
5.4.3
When resetType in received request message is not supported, ECU should prepare negative response
message with NRC = $12 (SFNS) and execute reply response message specified at section 5.4.3.
(4) (1) (3) resetType
When message doesn't match the above (1) to (3), request message check, which is specified in below
subsection, should be done.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The integrator should configure the UDS
  -  sub service (reset type)
  - supporter session
  - length
.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-5_4_1_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(5)
Check length of request message
a. 2 ECU NRC = $13 (IMLOIF)
5.4.3
When received request message is NOT 2bytes, ECU should prepare negative response message with
NRC = $13 (IMLOIF) and execute reply response message specified at section 5.4.3.
(6)
Security check
a. Type I ( ) ECU NRC = $33
(SAD) 5.4.3
When type I security is not released or failed to released, ECU should prepare negative response message
with NRC = $33 (SAD) and execute reply response message specified at section 5.4.3.
ECU ECU DiagnosticSession programmingSession
(programmingSession Type I )
In addition, in ECU which implements a reprogramming function, when DiagnosticSession of ECU is
programmingSession, this check is unnecessary. (Because it cannot change to programmingSession
unless it releases Type I security).
(7) (hardReset ECU )
Vehicle condition check (ECU which has limitation for hardReset)
a. hardReset ( ) ECU NRC = $22 (CNC)
5.4.3
When vehicle condition doesn't allow hardReset of the system. e.g. engine-run, ECU should prepare
negative response message with NRC = $22 (CNC) and execute reply response message specified at
section 5.4.3.
Vehicle condition should be defined by the every system.
(8) (5) (7) ECU ECUReset service
ECU 5.4.3
5.4.2
If (5) , (6) or (7) are not true, ECU should judge ECUReset service is possible to execute. ECU should prepare
positive message execute task specified in 5.4.2, then prepare positive response message and execute reply
response message specified at section 5.4.3. Then execute task specified in 5.4.2.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The integrator shall configure the UDS requests messages lenghts.

The customer shall configure the SecurityAccess protection for each service/routine. 

Vehicle conditions check is not supported.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-5_4_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
When ECU judges ECUReset service is possible based on 5.4.1 criteria, ECU should execute task written after.
- Service $11 5.4.3
Caution - task requested by Service $11 should be done after response message transmission.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-5_4_2_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Reset as the same as battery cut.
Detail e.g. reset of back up RAM should be defined by the system.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">System requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-5_4_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Reply response message
3
( or ) suppressPosRspMsgIndicationBit
As described in section 3, not only by request message analysis results but also addressing type (physical or function
address), or suppressPosRspMsgIndicationBit have influence on response message.
Table 5.5 5.4.1
Table 5.5 shows response message definition.
Table 5.5 Service $11
Service $11 Reply to request message
Request message check result suppressPosRs
pMsgIndication Response message
No 1) Description addressing Bit
type
(2)a Physical 0 (False) (NRC $13)
(5)a Wrong message length 1 (True) Negative response
Function
resetType 0 (False) (NRC $12)
(3)a Physical 1 (True) Negative response
Requested resetType is not 0 (False)
supported Function 1 (True) No response
DiagnosticSession
(1)a Service $11 Physical 0 (False) (NRC $7F)
Current Diagnostic Session doesn't 1 (True) Negative response
support Service $11. Function
(6)a Physical 0 (False) (NRC $33)
Security not released 1 (True) Negative response
Function
(7)a Physical 0 (False) (NRC $22)
Vehicle condition doesn't allow 1 (True) Negative response
requested service to execute Function
ECUReset service 0 (False) Positive response
(8) Physical
Requested ECUReset service 1 (True)
executable Function No response
1) 5.4.1 No.
No. is corresponding to No. in section 5.4.1.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The integrator shall configure the UDS requests messages lenghts.

The customer shall configure the SecurityAccess protection for each service/routine. 

Vehicle conditions check is not supported.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-5_5</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
ECU resetType = hardReset ($01) Service $11 5
Reprogrammable ECU should support Service $11 with resetType = hardReset ($01).5)
ECU DiagnosticSession programmingSession resetType = hardReset ($01) Service $11
ECU
22.7 Tc8 ECU DiagnosticSession defaultSession
When ECU is in programmingSession and receives Service $11 request message with resetType = hardReset ($01),
and judges it is possible to do ECU reset, ECU should do reset, transfer to defaultSession, and ready to communicate
with offboard tester within Tc8 after completing positive response transmission.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The integrator shall configure the UDS requests messages lenghts.

The customer shall configure the SecurityAccess protection for each service/routine. 

Vehicle conditions check is not supported.

Board initialization time depend on the integration. Customer shall verify that Tc8 is respected.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-6_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Service $27 (SecurityAccess service) ECU
Service $27 (SecurityAccess service) is to release the security of ECU.
ECU (
) Service $27 ECU
Due to security or system protection, or safety reason, some diagnostic function such as reprogramming function has
restriction. Service $27 offers access method to such restricted diagnostic functions. ECU releases security only when
security access control is normal finished with the offboard tester and allows to access to protected diagnostic function.
Processes are shown below.
(1) requestSeed Service $27 ECU securitySeed
securityKey
Process 1: The offboard tester sends Service $27 request message to request securitySeed.
(2) requestSeed Service $27 ECU ON DTIGON
requestSeed Service $27
securitySeed securitySeed securityKey
Process 2: When ECU receives service $27 request message and time after IG-ON is longer than DTIGON,
ECU should send securitySeed using Service $27 positive response message to the offboard tester,
calculate securityKey from securitySeed and store it to internal temporary memory.
(3) (2) ECU securitySeed securityKey sendKey
Service $27 ECU
Process 3: The offboard tester calculates securityKey using securitySeed received in the Process 2 and
sends ECU securityKey with Service $27 request message.
(4) sendKey Service $27 ECU securityKey
(2) securityKey sendKey Service $27
Process 4: ECU compares securityKey of stored value at process 2 to received value from offboard tester.
When they match, ECU should release security and send the offboard tester Service $27 positive response
message on sendKey.
Fig. 6-1
Fig. 6-1 shows the procedure.
Service $27 ECU DiagnosticSession extendedDiagnosticSession engineeringSession
DiagnosticSession
DiagnosticSession 4. Service $10 (DiagnosticSessionControl service)
Service $27 is available only at extendedDiagnosticSession or engineeringSession. Before security access control,
DiagnosticSession must be changed. The service is shown in 4. Service $10 (DiagnosticSessionControl service).
HDC_CAN
Several security types define by HDC_CAN. The diagnostic functions protected by security differ for every security type.
HDC-CAN (ISO14229 )
And, by HDC-CAN, the security condition of each security type is managed independently as a general rule. (Different
operation from regulation of ISO 14229.)
/ /
Thus, even if security condition (un-released / released / unauthorized access) changes by a certain security type,
other security type security condition does not change.)
( 1 2
)
(Example 1: Even if unauthorized access occurs by a certain security type, other security type security condition does
not change. Example 2: even if lock release occurs by a certain security type, other security type security condition
does not change. )
However, when there are special directions by the definition for every security type, follow the directions.
Which security type should be released for each diagnostic Service should be defined by the system.
HDC_CAN SAE J2186
HDC_CAN uses security access control based on SAE J2186.
Seed / Key (securitySeed / securityKey)
ECU 1 securityAccessType securityAccessType securitySeed / securityKey
(securitySeed securityKey )
ECU has one or more securityAccessTypes. The data length of securitySeed /securityKey and the security function
(formula which calculates securitySeed to securityKey) is defined for each securityAccessType.
NFAA (Number of False Access Attempt: )
NFAA 1 ECU 1 OFF/ON
securitySeed (Seed ) 6
NFAA is defined as one. Meaning if one failure results in unauthorized access and before next IG OFF/On, next
securitySeed request message should not be accepted. 6 Failure trial is defined as unauthorized access in the text.
DT (Delay Time)
DT 2
Following two are defined as Delay Time.
DTFAA ;
DTFAA ; delay time after failed attempt
DTIGON; ON
DTIGON; delay time after IG-ON
DTFAA DTIGON securityAccessType
DTFAA is infinite DTIGON is different by securityAccessType.
In SAE J2186, it is supposed that a Seed demand request is not received until DT passes, after NFAA reaches a
rated value.
HDC_CAN DTFAA =
By defining DTFAA as infinite by HDC_CAN, if NFAA exceeds a rated value, a Seed demand request will not be
received.
The flow of processing ECU The flow of processing
by off-board tester by ECU
ON
extendedDiagnosticSession DTIGON
changes procedure It is a security access
extendedDiagnosticSession DTIGON receptionist delay timer DTIGON
start by the ignition switch ON.
Service $27 (requestSeed) DTIGON progress
DTIGON
Request message
Service $27 (requestSeed) securitySeed is generated.
Response message securitySeed
securityKey is Seed securityKey is generated from
generated from generated securitySeed.
securitySeed which Seed securitySeed
received. Seed f
Service $27 (sendKey) securityKey
securitySeed f Request message Generated securityKey is compared
securityKey key with securityKey which received.
key key securityKey
key securityKey
Service $27 (sendKey)
Response message
The propriety of security
release is returned.
Fig. 6-1
The outline of the communication process of security access control</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">Seed and key calculation shall be implemented by customer in callbacks provided by the bootloader.

delay time after IG-ON is not managed by the EB bootloader. Should be managed by the customer during integration.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-6_2_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
securityAccessType (sub-function bit 0-6) requestSeed (ECU securitySeed
) sendKey (securityKey ECU ) 7
securityAccessType value "ODD" means requestSeed. (The reply of securitySeed is required from ECU.) "EVEN"
means sendKey. (securityKey is sent and security release is required of ECU.) 7
securityAccessType
Offboard tester uses securityAccessType value to specify security type.
securityAccessType securitySeed / securityKey (securitySeed
securityKey )
Data length of securitySeed / securityKey and calculation formula should be different by securityAccessType.
7 $01 - $42 ($00, $43 - $7F ) Table 6.5
$01 - $42 is valid. ($00, $43 - $7F are reserved) Refert to Table 6.5</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">Seed and key calculation shall be implemented by customer in callbacks provided by the bootloader.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-6_2_1_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 6.1 requestSeed Service $27 requestSeed Service $27
1 SID 1 sub-function (1 suppressPosRspMsgIndicationBit
suppressPosRspMsgIndicationBit bit 0-6 securityAccessType (requestSeed)
suppressPosRspMsgIndicationBit 2.1.2
Table 6.1 shows requestSeed Service $27 request message format, which consists of SID and sub-function.
Sub-function has 1 bit of suppressPosRspMsgIndicationBit and 7 bit of securityAccessType (requestSeed). Detail of
suppressPosRspMsgIndicationBit should refer to section 2.1.2.
Table 6.1 requestSeed Service $27
Service $27 Request message definition of requestSeed
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $27 SID M 27
Service $27 Request SID
#2 sub-function = [suppressPosRspMsgIndicationBit + M 00-FF 1)
securityAccessType = requestSeed]
1) Data Byte #2
Data Byte #2 is odd number.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-6_2_1_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 6.2 sendKey Service $27 sendKey Service $27
1 SID 1 sub-function (1 suppressPosRspMsgIndicationBit 7
securityAccessType (sendKey)) securityKey ( securityAccessType )
sub-function bit 7 suppressPosRspMsgIndicationBit bit 0-6 securityAccessType (sendKey)
suppressPosRspMsgIndicationBit 2.1.2
Table 6.2 shows sendKey Service $27 request message format, which consists of SID and sub-function. Sub-function
has 1 bit of suppressPosRspMsgIndicationBit , 7 bit of securityAccessType (sendKey) and securityKey. Detail of
suppressPosRspMsgIndicationBit should refer to section 2.1.2
Table 6.2 sendKey Service $27
Service $27 Request message definition of sendKey
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $27 SID M 27
Service $27 Request SID
#2 sub-function = [suppressPosRspMsgIndicationBit + M 00-FF 1)
securityAccessType = sendKey]
#3 securityKey [ ] = [ key #1 (high byte) M 00-FF
: : : :
#m+2 key #m (low byte)] C 00-FF
C: securityAccessType securityKey
securityKey length based on securityAccessType.
1) Data Byte #2
Data Byte #2 is even number.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-6_2_2_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
format of requestSeed
Table 6.3 requestSeed Service $27 requestSeed Service
$27 1 SID 1 securityAccessType
securitySeed ( securityAccessType ) securityAccessType
securityAccessType
Table 6.3 shows requestSeed Service $27 positive response message format. Positive message should have 1 byte
of SID and 1 byte of securityAccessType and securitySeed. The same value as securityAccessType which received by
the request message is included in securityAccessType of response message.
ECU securityAccessType securitySeed
securitySeed securityKey
ECU after receiving the message should create securitySeed and send positive message with it and calculate
securityKey then store it to memory.
Table 6.3 requestSeed Service $27
Service $27 Positive response message definition of requestSeed
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $27 SID M 67
Service $27 Positive response SID
#2 securityAccessType M 00-7F 1)
#3 securitySeed [ ] = [ seed #1 (high byte) M 00-FF
: : : :
#m+2 seed #m (low byte)] C 00-FF
C: securityAccessType securityKey
securityKey length based on securityAccessType.
1) Data Byte #2
Data Byte #2 is odd number.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">Seed and key calculation shall be implemented by customer in callbacks provided by the bootloader.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-6_2_2_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
sendKey
Table 6.4 sendKey Service $27 sendKey Service $27
1 SID 1 securityAccessType
securityAccessType securityAccessType
Table 6.4 shows sendKey Service $27 positive response message format. Positive message should have 1 byte of SID
and 1 byte of securityAccessType. The same value as securityAccessType which received by the request message is
included in securityAccessType of response message.
ECU securityAccessType
ECU after receiving the message should released security and send positive message.
Table 6.4 sendKey Service $27
Service $27 Positive response message definition of sendKey
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $27 SID M 67
Service $27 Positive response SID
#2 securityAccessType M 00-7F 1)
1) Data Byte #2
Data Byte #2 is even number.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">Seed and key calculation shall be implemented by customer in callbacks provided by the bootloader.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-6_2_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
2.2.2
Negative response message should follow section 2.2.2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">Seed and key calculation shall be implemented by customer in callbacks provided by the bootloader.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-6_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $27
The section defines parameter for Service $27 message.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-6_3_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
securityAccessType (sub-function bit 0-6) Service $27 7
securityAccessType is 7bits of information in request message.
Seed (requestSeed) ( sendKey)
request message indicates either Seed request (requestSeed) or security release request (sendKey).
Followings are for security type
1)
The diagnostic function by which security protection is carried out with this securityType.
2)
The sub-function used by this securityType, and its security function
3) securitySeed securityKey
data length of securitySeed and securityKey
4) DTIGON
DTIGON value
securityAccessType
The same value as securityAccessType which received by the request message is included in securityAccessType of
positive response message.
Table 6.5
Table 6.5 shows definition of securityAccessType.
Security type and diagnostic function should be defined by the system.
securitySeed / securityKey DTIGON
Security type function, data length of securitySeed / sendKey, and DTIGON will be defined separately.
Table 6.5 Service $27 securityAccessType
Service $27 securityAccessType definition
Security Description
AccessType (HEX)
00 (ISO 14229-1 )
not used (reserved by ISO 14229-1)
01,03,05 requestSeed ( )
07 - 41 requestSeed (This range of values is reserved for
vehicle-manufacturer-specific use.)
02,04,06 sendKey ( )
08 - 42 sendKey (This range of values is reserved for
vehicle-manufacturer-specific use.)
43 - 5E (ISO 14229-1 )
not used (reserved by ISO 14229-1)
5F - 60 (ISO 14229-1 )
not used (reserved by ISO 14229-1)
( 1))
61 - 7E not used (This range of values is reserved for
system-supplier-specific use. 1))
7F (ISO 14229-1 )
not used (reserved by ISO 14229-1)
1) HGT
System-supplier area must be agreed by HGT.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The integrator should configure the UDS request's:
  -  sub service (reset type)
  - supporter session
  - length
.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-6_3_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
securitySeed securityAccessType = requestSeed Service $27
securitySeed is information in Service $27 positive response message of securityAccessType = requestSeed. That is
defined by SecurityType
securityAccessType securitySeed
(0)
If the same SecurityType has been released, securitySeed should be all zero.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">Seed and key calculation shall be implemented by customer in callbacks provided by the bootloader.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-6_3_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
securityKey securityAccessType = sendKey Service $27
securityKey is information in Service $27 request message of securityAccessType = sendKey and value is defined by
SecurityType.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">Seed and key calculation shall be implemented by customer in callbacks provided by the bootloader.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-6_3_4</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 6.6 Service $27 NRC 6.4
Table 6.6 shows Service $27 NRC. When to reply with negative response message should refer to section 6.4.
Table 6.6 Service $27
Service $27 Negative response code definition
NRC (Hex) Description
subFunctionNotSupported (SFNS)
12 sub-function
Requested sub-function is not supported..
incorrectMessageLengthOrInvalidFormat (IMLOIF)
13
Received message length or message structure doesn't suit Spec. .
requestSequenceError (RSE)
24 (1) requestSeed sendKey
Without requestSeed is calculated, sendKey request message is received.
(2) sendKey
SendKey received through security has been released.
invalidKey (IK)
35 securityKey ECU securityKey
Received security Key doesn't match with ECU calculated security Key.
exceedNumberOfAttempts (ENOA)
36 ON 1
requiredTimeDelayNotExpired (RTDNE)
37 ON DTIGON requestSeed
This response code indicates that requestSeed message received before time DTIGON had
elapsed.
serviceNotSupportedInActiveSession (SNSIAS)
7F DiagnosticSession Service $27
Current diagnostic Session doesn't support Service $27.
- Service $27 NRC = $78 (RCRRP)
Caution NRC=$78 (RCRRP) is not allowed in Service 27.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-6_4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $27 ECU
Reply from ECU should follow this description.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-6_4_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(1) DiagnosticSession
DiagnosticSession check
a. ECU DiagnosticSession defaultSession programmingSession ECU NRC = $7F
(SNSIAS) 6.4.3
When diagnosticSession is defaultSession or programmingSession, ECU should prepare negative response
message with NRC = $7F (SNSIAS) and execute reply response message specified at section 6.4.3.
(2) ( 8)
Check length of request message (check longer than minimum length 8))
a. 2 ECU NRC = $13 (IMLOIF)
6.4.3
When received request message is shorter than 2bytes, ECU should prepare negative response message
with NRC = $13 (IMLOIF) and execute reply response message specified at section 6.4.3.
(3) securityAccessType
securityAccessType check
a. securityAccessType ECU NRC = $12
(SFNS) 6.4.3
When securityAccessType in received request message is not supported, ECU should prepare negative
response message with NRC = $12 (SFNS) and execute reply response message specified at section 6.4.3.
(4) (1) (3) securityAccessType
When message doesn't match the above (1) to (3), request message check, which is specified in below
subsection, should be done.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The integrator shall configure the UDS requests messages lenghts.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-6_4_1_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(5)
Check length of request message
a. 2 ECU NRC = $13 (IMLOIF)
6.4.3
securitySeed
When received request message is NOT 2bytes, ECU should prepare negative response message with
NRC = $13 (IMLOIF) and execute reply response message specified at section 6.4.3.
(6)
Check of an unauthorized access history
a. ON 1 securityAccessType
ECU NRC = $36 (ENOA)
6.4.3 securitySeed
After IG_ON if unauthorized access was observed for the same securityAccessType, ECU should prepare
negative response message with NRC = $36 (ENOA) and execute reply response message specified at
section 6.4.3. No preparation of securitySeed.
- securityAccessType
Caution - Unauthorized access for different securityAccessType is not considered.
(7)
Security release check
a. securityAccessType ECU
securitySeed $00 6.4.3
securityAccessType
If requested securityAccessType has been released, ECU should set securitySeed with all $00 and execute
reply response message specified at section 6.4.3. Security release condition should be kept.
(8) DTIGON
DTIGON progress check
a. ON 9 securityAccessType DTIGON
ECU NRC = $37 (RTDNE) 6.4.3
securitySeed
After IG ON, DTIGON defined by securityAccessType is not passed, ECU should prepare negative response
message with NRC = $37 (RTDNE) and reply based on section 6.4.3.
(9) (5) (8) ECU securityAccessType
requestSeed SecurityAccess service ECU 6.4.2
6.4.3
When message doesn't match the above (5) to (8), ECU should judge it is possible to execute SecurityAccess
service. ECU should execute task defined in 6.4.2 and prepare positive message and reply as defined in 6.4.3.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The integrater should configure Antiscanning for SecurityAccess.

EB tresos Bootloader calls the callback to notify the result of unlocking. The customer shall implement the callback and shall reject further SecurityAccess requests, by implementing it's own UDS callback for sercurityAccess.

The DIGON time is not managed by the EB bootloader.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-6_4_1_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(10)
Check length of request message
a. securityAccessType
ECU NRC = $13 (IMLOIF)
6.4.3
When received request message is NOT 2bytes, ECU should prepare negative response message with
NRC = $13 (IMLOIF) and execute reply response message specified at section 6.4.3.
(11)
Check of an unauthorized access history
a. ON 1 securityAccessType
ECU NRC = $36 (ENOA)
6.4.3
After IG_ON if unauthorized access was observed for the same securityAccessType, ECU should prepare
negative response message with NRC = $36 (ENOA) and execute reply response message specified at
section 6.4.3.
- securityAccessType
Caution - Unauthorized access for different securityAccessType is not considered.
(12) Seed
The execution check of requestSeed
a. securityAccessType 6.4.2.1 requestSeed
ECU NRC = $24 (RSE)
6.4.3
If requestSeed task defined in 6.4.2.1 was not finished, ECU should prepare negative response message
with NRC =$24 (RSE) and reply it according to6.4.3.
(13)
Security release check
a. securityAccessType ECU NRC
= $24 (RSE) 6.4.3
securityAccessType
If requested securityAccessType has been released, ECU should prepare negative response message with
NRC =$24 (RSE) and reply it according to6.4.3. Security release condition should be kept.
(14) (10) (13) ECU securityAccessType
sendKey SecurityAccess service ECU 6.4.2
When message doesn't match the above (10) to (13), ECU should judge SecurityType sendKey SecurityAccess
service defined by securityAccessType. Then ECU should first perform task defined by 6.4.2 and following tasks
should be done.
a. ECU NRC = $35 (IK)
6.4.3
If unauthorized access is judged, ECU should prepare negative response message with NRC =$35 (IK) and
reply it according to 6.4.3.
b. ECU 6.4.3
When security is released, ECU should prepare positive response message, and then reply response
message as specified in 6.4.3.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The integrator shall configure the UDS requests messages lenghts.

The IG_ON event is not managed by the EB bootloader.

The customer is in charge of the configuration of the security level for each service/routine. The unlock of a security level doesn't imply the unlock of lower levels.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-6_4_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
securityAccessType
When ECU judges SecurityAccess service is possible based on 6.4.1 criteria, ECU should execute task written after.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-6_4_2_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
securityAccessType securitySeed securitySeed
SecuritySeed requested by securityAccessType should be prepared. Detail should be defined separately.
securitySeed securityKey
Using separately defined security function, securityKey should be calculated and stored in temporary memory.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">Seed and key calculation shall be implemented by customer in callbacks provided by the bootloader.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-6_4_2_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
6.4.1.2 (14) securityKey 6.4.2.1 securitySeed securityKey
Received securityKey and self securityKey calculated should be compared and do following process depending on
comparison results.
a. ECU securityAccessType
Not match: ECU should judge unauthorized access has performed.
b. ECU securityAccessType
Matched: ECU should release requested SecurityType.
</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">Seed and key calculation shall be implemented by customer in callbacks provided by the bootloader.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-6_4_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
6.4.3 Reply response message
3
( or ) suppressPosRspMsgIndicationBit
As described in section 3, not only by request message check results but also addressing type (physical or function
address), or suppressPosRspMsgIndicationBit have influence on response message.
Table 6.7 6.4.1
Table 6.7 shows response message definition.
Table 6.7 Service $27
Service $27 Reply to request message
Request message check result suppressPosRs
pMsgIndication Response message
No 1) Description addressing Bit
type
(2)a Physical 0 (False) (NRC $13)
(5)a Wrong message length 1 (True) Negative response
(10)a Function
securityAccessType 0 (False) (NRC $12)
(3)a Physical 1 (True) Negative response
Requested SecurityType is not 0 (False)
supported. Function 1 (True) No response
DiagnosticSession
(1)a Service $27 Physical 0 (False) (NRC $7F)
Current Diagnostic Session doesn't 1 (True) Negative response
support Service $27. Function
(6)a Physical 0 (False) (NRC $36)
(11)a Unauthorized history exists. 1 (True) Negative response
Function
0 (False) Positive response
(7)a requestSeed Physical
requestSeed received when security
has been released. Function 1 (True)
No response
(8)a DTIGON Physical 0 (False) (NRC $37)
DTIGON has not yet passed. 1 (True) Negative response
Function
securityAccessType
(12)a requestSeed Physical 0 (False) (NRC $24)
SecuritySeed for requested 1 (True) Negative response
SecurityAccess type not done yet. Function
securityAccessType
(13)a Physical 0 (False) (NRC $24)
Requested securityAccessType has 1 (True) Negative response
been released. Function
(14) securityKey Physical 0 (False) (NRC $35)
Received securityKey incorrect. 1 (True) Negative response
Function
SecurityAccess service 0 (False)
securitySeed Positive response
(9) Physical
(14) Requested SecurityAccess service
execution. SecuritySeed preparation Function 1 (True)
or security release. No response
1) 6.4.1 No.
No. is corresponding to No. in section 6.4.1.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">Seed and key calculation shall be implemented by customer in callbacks provided by the bootloader.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-6_5</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
securityKey ECU securitySeed securityKey
Unauthorized access is defined as the case where the value of securityKey from offboard tester differs from the value
of securityKey which ECU calculated from securitySeed.
ECU
( DTIGON )
When ECU judges unauthorized access, ECU rejects SecurityAccess release request until unauthorized history is
erased. Other abnormal condition such as communication procedure error, short DTIGON) should not be considered
as unauthorized access.
Below are the conditions to erase history of unauthorized access.
(1) OFF
IG OFF.
(2)
battery cut.
(3) Service $11 " OFF" " "
ECU
ECU reset by Service $11.
ECU
In addition to these conditions, reprogrammable ECU erases history of unauthorized access also on condition of the
following.
(1) programmingSession defaultSession
DefaultSession transfer from programmingSession.
programmingSession defaultSession 4.1" "
Refer to section 4.1 for the details about the changes to defaultSession from programmingSession.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EB tresos Bootloader implements unauthorized access with AntiScanning mechanism as defined in ISO14229: after a fail attempt, a new request will be accepted only after the end of the Anti scanning timeout. 

EB tresos Bootloader calls the callback to notify the result of unlocking. The customer shall implement the callback and shall reject further SecurityAccess requests, by implementing it's own UDS callback for sercurityAccess.

IG OFF/ battery cut/ ECU reset have no impact on the AntiScanning behaviour</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-6_6</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
( )
Security released condition should be ended when it becomes one of the following conditions.
(1) ECU DiagnosticSession defaultSession
In case, DiagnosticSession transfers to defaultSession.
a. Service $10 defaultSession
By Service $10 request.
b. (S3Server) defaultSession
Session timer (S3Server) time out.
(2) OFF
IG OFF.
(3)
battery cut.
(4) Service $11 " OFF" " "
ECU
ECU reset by Service $11.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The "IG_OFF" and "battery cut" are not managed by the bootloader EB.

Security level is reset at Bootloader startup.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-6_7</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Executed Condition
requestSeed (requestSeed
)
requestSeed request processing executed condition is ended when one of the following conditions is satisfied. (It
returns to the condition of not executing requestSeed.)
(1) ECU DiagnosticSession defaultSession
In case, DiagnosticSession transfers to defaultSession.
a. Service $10 defaultSession
By Service $10 request.
b. (S3Server) defaultSession
Session timer (S3Server) time out.
(2) OFF
IG OFF.
(3)
battery cut.
(4) Service $11 " OFF" " "
ECU
ECU reset by Service $11.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The "IG_OFF" and "battery cut" are not managed by the bootloader EB.

Security level is reset at Bootloader startup.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-6_8</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
DTIGON
DTIGON is initialized when it becomes one of the following conditions.
(1) OFF
IG OFF
(2)
battery cut
(3) Service$ 11 " OFF" " "
ECU
ECU reset by Service $11 request.
ECU DTIGON
In addition to these conditions, reprogrammable ECU initializes DTIGON also on condition of the following.
(1) (S3Server) programmingSession defaultSession
DefaultSession transfer from programmingSession by Session timer (S3server) time out.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">DTIGON is not managed by the EB bootloader</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-6_9</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
securitySeed securityKey
Security function is a formula to calculate securityKey from Seed.
Each security type has different formula. Sometimes one security type has more than one formula.
The security function should be defined by every system.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">Seed and key calculation shall be implemented by customer in callbacks provided by the bootloader.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-7_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $28 (CommunicationControl service) HDC_CAN CAN
Service $28 (CommunicationControl service) is used to control CAN send/receive for HDC_CAN communication.
controlType communicationType Service $28 ECU
CAN ECU controlType communicationType CAN
The offboard tester requests ECU to perform CAN send/receive control by Service $28 request message with
integrated controlType and communicationType. Or ECU returns the message that ECU will not follow request.
ECU CAN CAN
In case there are multiple CAN line for one ECU, ECU should control only on requested line.
CAN
About the other CAN-Line it should be defined by every system.
- HDC_CAN ECU Service $28
Caution - ECU which supported HDC-CAN, must support Service $28.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x28 CommunicationControl service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-7_2_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 7.1 Service $28 Service $28 1
SID 1 sub-function (1 suppressPosRspMsgIndicationBit 7 controlType) 1
communicationType sub-function bit 7 suppressPosRspMsgIndicationBit bit 0-6
controlType suppressPosRspMsgIndicationBit 2.1.2
Table 7.1 shows Service $28 request message format, which consists of SID and sub-function. Sub-function has 1 bit
of suppressPosRspMsgIndicationBit and resetType. Detail of suppressPosRspMsgIndicationBit should refer to section
2.1.2.
Table 7.1 Service $28
Service $28 Request message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $28 SID M 28
Service $28 Request SID
#2 sub-function = [suppressPosRspMsgIndicationBit + M 00-FF
controlType
#3 communicationType M 00-FF</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x28 CommunicationControl service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-7_2_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 7.2 Service $28 Service $28
1 SID 1 controlType controlType
controlType
Table 7.2 shows Service $28 positive response message format, which consists of SID and controlType. controlType in
reply should be same value controlType in request message.
ECU CAN
After task execution, positive message should be sent.
Table 7.2 Service $28
Service $28 Positive response message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $28 SID M 68
Service $28 Positive response SID
#2 controlType M 00-7F</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x28 CommunicationControl service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-7_2_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
2.2.2
Negative response message should follow section 2.2.2.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x28 CommunicationControl service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-7_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $28
The section defines parameter for Service $28 message.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x28 CommunicationControl service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-7_3_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
controlType (sub-function bit 0-6) Service $28 7 ECU
CAN ( )
controlType (bit 0-6 of sub-function) is 7 bits information in Service $28 request message to ECU to send/receive
control of CAN bus.
controlType
Positive response message includes the same value as received controlType value.
Table 7.3 controlType
Table 7.3 shows definition of controlType.
Table 7.3 Service $28 controlType
Service $28 definition of controlType
controlType Description
(Hex)
00-02 (ISO 14229-1 )
not used (reserved by ISO 14229-1)
disableRxAndTx (DRXTX)
03 CAN
This value indicates that the reception and transmission of messages shall be
disabled for the specified communicationType.
04-3F (ISO 14229-1 )
not used (reserved by ISO 14229-1)
40-5F ( )
not used (This range of values is reserved for vehicle-manufacturer-specific use.)
60-7E ( 1))
not used (This range of values is reserved for system-supplier-specific use. 1))
7F (ISO 14229-1 )
not used (reserved by ISO 14229-1)
1) HGT
System-supplier area must be agreed by HGT.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x28 CommunicationControl service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-7_3_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
communicationType Service $28 1 ECU CAN
communicationType is one byte information in Service $28 request message to ECU to send/receive control of CAN
bus.
Table 7.4 communicationType
Table 7.4 shows definition of communicationType.
Table 7.4 Service $28 communicationType
Service $28 definition of communicationType
communicationType
(Hex)
Description
bit Hex
bit position Hex value
0 (ISO 14229-1 )
not used (reserved by ISO 14229-1)
1 (ISO 14229-1 )
not used (reserved by ISO 14229-1)
0-1 2 (ISO 14229-1 )
not used (reserved by ISO 14229-1)
NormalCommunicationMessages and
3 networkManagementCommunicationMessages (NWMCM and NCM)
CAN CAN
All CAN message except diagnostic CAN message.
2-3 0-3 (ISO 14229-1 1))
not used (reserved by ISO 14229-1 1))
4-7 0-F (ISO 14229-1 1))
not used (reserved by ISO 14229-1 1))
1) HDC_CAN 0
"0" in case of HDC_CAN.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x28 CommunicationControl service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-7_3_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 7.5 Service $28 NRC 7.4
Table 7.5 shows Service $10 NRC. When to reply with negative response message should refer to section 7.4.
Table 7.5 Service $28
Service $28 Negative response code definition
NRC (Hex) Description
subFunctionNotSupported (SFNS)
12 sub-function
Requested sub-function is not supported..
incorrectMessageLengthOrInvalidFormat (IMLOIF)
13
Received message length or message structure doesn't suit Spec. .
requestOutOfRange (ROOR)
31 communicationType
Requested communicationType is not supported.
serviceNotSupportedInActiveSession (SNSIAS)
7F DiagnosticSession Service $28
Current diagnostic Session doesn't support Service $28.
- Service $28 NRC = $78 (RCRRP)
Caution NRC=$78 (RCRRP) is not allowed in Service 28.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x28 CommunicationControl service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-7_4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $28 ECU
Reply from ECU should follow this description.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x28 CommunicationControl service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-7_4_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
(1) DiagnosticSession
DiagnosticSession check
a. ECU DiagnosticSession defaultSession programmingSession ECU NRC = $7F
(SNSIAS) 7.4.3
When diagnosticSession is defaultSession or programmingSession, ECU should prepare negative response
message with NRC = $7F (SNSIAS) and execute reply response message specified at section 7.4.3.
(2) ( 10)
Check length of request message (check longer than minimum length 10))
a. 2 ECU NRC = $13 (IMLOIF)
7.4.3
When received request message is shorter than 2bytes, ECU should prepare negative response message
with NRC = $13 (IMLOIF) and execute reply response message specified at section 7.4.3.
(3) controlType
controlType analysis check
a. controlType ECU NRC = $12 (SFNS)
7.4.3
When controlType in received request message is not supported, ECU should prepare negative response
message with NRC = $12 (SFNS) and execute reply response message specified at section 7.4.3.
(4)
Check length of request message
a. 3 ECU NRC = $13 (IMLOIF)
7.4.3
When received request message is NOT 3bytes, ECU should prepare negative response message with
NRC = $13 (IMLOIF) and execute reply response message specified at section 7.4.3.
(5) (1) (4) controlType
When message doesn't match the above (1) to (4), request message check, which is specified in below
subsection, should be done.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x28 CommunicationControl service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-7_4_1_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
(6) communicationType
communicationType check
a. communicationType NormalCommunicationMessages and networkManagementCommunicationMessages
($03) ECU NRC = $31 (ROOR)
7.4.3
When communicationType in received request message is not NormalCommunicationMessages and
networkManagementCommunicationMessages ($03), ECU should prepare negative response message with
NRC = $31 (ROOR) and execute reply response message specified at section 7.4.3.
(7) (6) ECU CommunicationControl service
ECU 7.4.2
7.4.3
If (6) is not true, ECU should judge requested CommunicationControl service is possible to execute. ECU
should execute task specified in 7.4.2, then prepare positive response message, and execute reply response
message specified at section 7.4.3.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x28 CommunicationControl service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-7_4_2_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
HDC_CAN CAN CAN
CAN used for HDC-CAN should stop CAN send/receive except diagnostic communication.
CAN
12
If the above situation is not recommended when vehicle drives. In this case, operating mode should be defined by the
system. 12

Generally speaking failsafe action should be possible but this document doesn't specify.
ECU CAN CAN (
CAN CAN ) 13
And, when ECU equips several CAN lines, it determines for handling of communication of the CAN line which is not
connected with an off-board tester for every model of vehicles, and system.13
7.4.3 Reply response message
3
( or ) suppressPosRspMsgIndicationBit
As described in section 3, not only by request message check results but also addressing type (physical or function
address), or suppressPosRspMsgIndicationBit have influence on response message.

CAN DTC
By reprograming which uses this message, it is Service $85 (ControlDTCSettingservice) before this message
transmission. It performs. The DTC set by the transceiver stop of the CAN line connected with an off-board tester
by it is prevented.
CAN CAN
ECU Service $85
CAN
However, ECU which has connected the CAN line which is not connected with offboard tester cannot receive a
Service $85 request message. Therefore, those ECUs may detect communication failure of a CAN line, when
transmission and reception of the communication line are stopped.
CAN
Generally it makes sense not to stop communication on CAN bus , which is not used for HDC-CAN. This will be
specified by the system.
Table 7.6 7.4.1
Table 7.6 shows response message definition.
Table 7.6 Service $28
Service $28 Reply to request message
Request message check result suppressPosRs
pMsgIndication Response message
No 1) Description addressing Bit
type
(2)a Physical 0 (False) (NRC $13)
(4)a Wrong message length 1 (True) Negative response
Function
controlType 0 (False) (NRC $12)
(3)a Physical 1 (True) Negative response
Requested controlType is not 0 (False)
supported Function 1 (True) No response
DiagnosticSession
(1)a Service $28 Physical 0 (False) (NRC $7F)
Current Diagnostic Session doesn't 1 (True) Negative response
support Service $28. Function
communicationType 0 (False) (NRC $31)
(6)a Physical 1 (True) Negative response
Requested communicationType is 0 (False)
not supported Function 1 (True) No response
CommunicationControl 0 (False) Positive response
(7) service Physical
Requested CommunicationControl 1 (True)
service executable Function No response
1) 7.4.1 No.
No. is corresponding to No. in section 7.4.1.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x28 CommunicationControl service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-7_4_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
CAN
CAN
ECU, which stops CAN communication by 7.4.2.1 should return to normal when one of following conditions is met.
(1) ECU DiagnosticSession defaultSession
DiagnosticSession transfers to defaultSession
a. Service $10 defaultSession
By Service $10 request message
b. (S3Server) defaultSession
Session timer(S3Server) time out
(2) OFF
IG OFF.
(3)
battery cut.
(4) Service $11 " OFF" " "
ECU
ECU reset by Service $11 request.
- programmingSession CAN
Caution - By transferring to programmingSession CAN communication should not return to normal.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x28 CommunicationControl service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-8_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Service $3E (TesterPresent service) ECU
ECU
Service $3E (TesterPresent service) is used to inform ECU that the offboard tester is connected. All ECU needs to do
is to send positive message.
Service $3E 1
The following is one of the examples of use of a Service $3E request.
ECU defaultSession ( ) DiagnosticSession
ECU defaultSession
ECU defaultSession DiagnosticSession
zeroSubFunction Service $3E ECU
If ECU is diagnostic mode other than defaultSession and no message reception from the tester, ECU transfers to
defaultSession automatically. This message is to keep ECU in current diagnosticSession. Then the offboard tester
sends ECU service request message with zeroSubFunction. The offboard tester requests ECU to perform CAN
send/receive control by Service $3E request.
- HDC_CAN ECU Service $3E
Caution - ECU which supported HDC-CAN, must support Service $3E.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-8_2_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 8.1 Service $3E Service $3E 1
SID 1 sub-function (1 suppressPosRspMsgIndicationBit 7 zeroSubFunction)
sub-function bit 7 suppressPosRspMsgIndicationBit bit 0-6 zeroSubFunction
suppressPosRspMsgIndicationBit 2.1.2
Table 8.1 shows Service $3E request message format, which consists of SID and sub-function. Sub-function has 1 bit
of suppressPosRspMsgIndicationBit and 7 bit of zero SubFunction. Detail of suppressPosRspMsgIndicationBit should
refer to section 2.1.2.
sub-function bit 0-6 zeroSubFunction ($00)
sub-function bits 0 -6 are set with zero ($00) as zeroSubFunction.
Table 8.1 Service $3E
Service $3E Request message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $3E SID M 3E
Service $3E Request SID
#2 sub-function = [suppressPosRspMsgIndicationBit + M 00 or 80
zeroSubFunction]</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-8_2_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 8.2 Service $3E Service $3E
1 SID 1 zeroSubFunction zeroSubFunction
zeroSubFunction
Table 8.2 shows Service $3E positive response message format. Service $3E positive response message contains 1
byte of SID + 1 byte zeroSubFunction. zeroSubFunction is received in requested message.
Table 8.2 Service $3E
Service $3E Positive response message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $3E SID M 7E
Service $3E Positive response SID
#2 zeroSubFunction M 00</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-8_2_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
2.2.2
Negative response message should follow section 2.2.2.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-8_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $3E
The section defines parameter for Service $3E message.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-8_3_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
zeroSubFunction (sub-function bit 0-6) Service $3E 7
zeroSubFunction = $00
zeroSubFunction (bit 0-6 of sub-function) is 7 bits information in Service $3E request message and it is always
zeroSubFunction = $00.
zeroSubFunction
Positive response message includes the same zeroSubFunction value as received value.
Table 8.3 zeroSubFunction
Table 8.3 shows definition of zeroSubFunction.
Table 8.3 Service $3E zeroSubFunction
Service $3E zeroSubFunction definition
zeroSubFunction Description
Hex
zeroSubFunction
00 sub-function suppressPosRspMsgIndicationBit
This parameter value is used to indicate that no sub-function value beside the
suppressPosRspMsgIndicationBit is supported by this service.
01-7F (ISO 14229-1 )
not used (reserved by ISO 14229-1)</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-8_3_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 8.4 Service $3E NRC 8.4
Table 8.4 shows Service $3E NRC. When to reply with negative response message should refer to section 8.4.
Table 8.4 Service $3E
Service $3E Negative response code definition
NRC (Hex) Description
subFunctionNotSupported (SFNS)
12 sub-function
Requested sub-function is not supported..
incorrectMessageLengthOrInvalidFormat (IMLOIF)
13
Received message length or message structure doesn't suit Spec. .
- Service $3E NRC = $78 (RCRRP)
Caution NRC=$78 (RCRRP) is not allowed in Service $3E.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-8_4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $3E ECU
This section defines reply processing of the response message which ECU which received the Service $3E request
message executes. Reply from ECU should follow this description.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-8_4_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(1) ( 14)
Check length of request message (check less than minimum length 14))
a. 2 ECU NRC = $13 (IMLOIF)
8.4.3
When received request message is shorter than 2bytes, ECU should prepare negative response message
with NRC = $13 (IMLOIF) and execute reply response message specified at section 8.4.3.
(2) zeroSubFunction
check of zeroSubFunction
a. zeroSubFunction (sub-function bit 0-6) $00 ECU
NRC = $12 (SFNS) 8.4.3
When zeroSubFunction in received request message is not $00, ECU should prepare negative response
message with NRC = $12 (SFNS) and execute reply response message specified at section 8.4.3.
Prior to check of zero sub-function, check if enough length of request message is received or not.
(3)
Check length of request message
a. 2 ECU NRC = $13 (IMLOIF)
8.4.3
When received request message is NOT 2bytes, ECU should prepare negative response message with
NRC = $13 (IMLOIF) and execute reply response message specified at section 8.4.3.
(4) (1) (3) ECU TesterPresent service
ECU 8.4.2
8.4.3
When message doesn't match the above (1) to (3), ECU should judge it is possible to execute TesterPresent
service. ECU should execute task defined in 8.4.2 and prepare positive message and reply as defined in 8.4.3.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-8_4_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Service $3E
Service $3E doesn't request task except positive response message.
</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-8_4_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
 Reply response message
3
( or ) suppressPosRspMsgIndicationBit
As described in section 3, not only by request message analysis results but also addressing type (physical or function
address), or suppressPosRspMsgIndicationBit have influence on response message.
Table 8.5 8.4.1
Table 8.5 shows response message definition.
Table 8.5 Service $3E
Service $3E Reply to request message
Request message check result suppressPosR
spMsgIndicatio Response message
No 1) Description addressing nBit
type
(1)a Physical 0 (False) (NRC $13)
(3)a Wrong message length 1 (True) Negative response
Function
zeroSubFunction 0 (False) (NRC $12)
(2)a (sub-function bit 0-6) $00 Physical 1 (True) Negative response
zeroSubFunction is not $00 0 (False)
Function 1 (True) No response
TesterPresent service 0 (False) Positive response
(4) Physical
Requested TesterPresent service 1 (True)
executable Function No response
1) 8.4.1 No.
No. is corresponding to No. in section 8.4.1.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-9_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $85 (ControlDTCSetting service) ECU DTC ( )
Service $85 (ControlDTCSetting service) is used to control ECU DTC setting.
DTCSettingType Service $85 ECU DTC
ECU DTCSettingType DTC
The offboard tester requests ECU to perform ECU DTC setting control by Service $85 request message with integrated
DTC settingType. Or ECU returns the message that ECU will not follow request.
- HDC_CAN ECU Service $85
Caution - ECU which supported HDC-CAN, must support Service $85.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 85 ControlDTCSetting service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-9_2_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 9.1 Service $85 Service $85 1
SID 1 sub-function (1 suppressPosRspMsgIndicationBit 7 DTCSettingType)
sub-function bit 7 suppressPosRspMsgIndicationBit bit 0-6 DTCSettingType
suppressPosRspMsgIndicationBit 2.1.2
Table 9.1 shows Service $85 request message format, which consists of SID and sub-function. Sub-function has 1 bit
of suppressPosRspMsgIndicationBit and resetType. Detail of suppressPosRspMsgIndicationBit should refer to section
2.1.2.
Table 9.1 Service $85
Service $85 Request message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $85 SID M 85
Service $85 Request SID
#2 sub-function = suppressPosRspMsgIndicationBit + M 00-FF
DTCSettingType</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 85 ControlDTCSetting service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-9_2_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 9.2 Service $85 Service $85
1 SID 1 DTCSettingType DTCSettingType
DTCSettingType
Table 9.2 shows Service $85 positive response message format. which consists of SID and 1 bytes of DTCSettingType.
DTCSettingType in reply should be DTCSettingType in request message.
ECU DTC
ECU after receiving the message should perform DTC setting control and then send the positive response.
Table 9.2 Service $85
Service $85 Positive response message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $85 SID M C5
Service $85 Positive response SID
#2 DTCSettingType M 00-7F</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 85 ControlDTCSetting service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-9_2_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
2.2.2
Negative response message should follow section 2.2.2.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 85 ControlDTCSetting service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-9_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $85
The section defines parameter for Service $85 message.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 85 ControlDTCSetting service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-9_3_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
DTCSettingType (sub-function bit 0-6) Service $85 7 DTC
DTCSettingType (bit 0-6 of sub-function) is 7 bits information in Service $85 request message to ECU to store DTC or
not.
DTCSettingType
Positive response message should includes received DTCSettingType value.
Table 9.3
Table 9.3 shows definition of DTCSettingType
Table 9.3 Service $85 DTCSettingType
Service $85 DTCSetting definition
DTCSettingType Description
(Hex)
00 (ISO 14229-1 )
not used (reserved by ISO 14229-1)
01 (ISO 14229-1 )
not used (reserved by ISO 14229-1)
off
02 DTC
Request DTC to stop storing
03-3F (ISO 14229-1 )
not used (reserved by ISO 14229-1)
( )
40-5F not used (This range of values is reserved for vehicle-manufacturer-specific
use.)
60-7E ( 1))
system-supplier-specific use. 1))
not used (This range of values is reserved for
7F (ISO 14229-1 )
not used (reserved by ISO 14229-1)
1) HGT
System-supplier area must be agreed by HGT.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 85 ControlDTCSetting service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-9_3_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 9.4 Service $85 NRC 9.4
Table 9.4 shows Service $85 NRC definition. Negative response should be refer to 9.4.
Table 9.4 Service $85
Service $85 Negative response code definition
NRC (Hex) Description
subFunctionNotSupported (SFNS)
12 sub-function
Requested sub-function is not supported..
incorrectMessageLengthOrInvalidFormat (IMLOIF)
13
Received message length or message structure doesn't suit Spec. .
serviceNotSupportedInActiveSession (SNSIAS)
7F DiagnosticSession Service $85
Current diagnostic Session doesn't support Service $85.
- Service 85 NRC = $78 (RCRRP)
Caution NRC=$78 (RCRRP) is not allowed in Service 85.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 85 ControlDTCSetting service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-9_4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $85 ECU
Reply from ECU should follow this description.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 85 ControlDTCSetting service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-9_4_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
(1) DiagnosticSession
DiagnosticSession analysis
a. ECU DiagnosticSession defaultSession programmingSession ECU NRC = $7F
(SNSIAS) 9.4.3
When diagnosticSession is defaultSession or programmingSession, ECU should prepare negative response
message with NRC = $7F (SNSIAS) and execute reply response message specified at section 9.4.3.
(2) ( 15)
Check length of request message (check longer than minimum length 15))
a. 2 ECU NRC = $13 (IMLOIF)
9.4.3
When received request message is shorter than 2bytes, ECU should prepare negative response message
with NRC = $13 (IMLOIF) and execute reply response message specified at section 9.4.3.
(3) DTCSettingType
DTCSettingType analysis
a. DTCSettingType ECU NRC = $12
(SFNS) 9.4.3
When DTCSettingType in received request message is not supported, ECU should prepare negative
response message with NRC = $12 (SFNS) and execute reply response message specified at section 9.4.3.
(4)
Check length of request message
a. 2 ECU NRC = $13 (IMLOIF)
9.4.3
When received request message is NOT 2bytes, ECU should prepare negative response message with
NRC = $13 (IMLOIF) and execute reply response message specified at section 9.4.3.
(5) (1) (4) ECU ControlDTCSetting service
ECU 9.4.2
9.4.3
When message doesn't match the above (1) to (4), ECU should judge it is possible to execute
ControlDTCSetting service. ECU should execute task defined in 9.4.2 and prepare positive message and reply
as defined in 9.4.3.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 85 ControlDTCSetting service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-9_4_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
DTCSettingType
When ECU judges ControlDTCSetting service is possible based on 9.4.1 criteria, ECU should execute task written
after.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 85 ControlDTCSetting service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-9_4_2_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
DTC ( )
ECU could stop storing DTC.
Prior to DTCSettingType, check if enough length of request message is received or not.
DTC ECU
16
If the above situation is not recommended when vehicle drives. In this case, operating mode should be defined by the
system. 16
9.4.3 Reply response message
3
( or ) suppressPosRspMsgIndicationBit
As described in section 3, not only by request message analysis results but also addressing type (physical or function
address), or suppressPosRspMsgIndicationBit have influence on response message.
Table 9.5 9.4.1
Table 9.5 shows response message definition.
Table 9.5 Service $85
Service $85 Reply to request message
Request message check result suppressPosRs
pMsgIndication Response message
No 1) Description addressing Bit
type
(2)a Physical 0 (False) (NRC $13)
(4)a Wrong message length 1 (True) Negative response
Function
DTCSettingType 0 (False) (NRC $12)
(3)a Physical 1 (True) Negative response
Requested DTCSettingType is not 0 (False)
supported Function 1 (True) No response
DiagnosticSession
(1)a Service $85 Physical 0 (False) (NRC $7F)
Current Diagnostic Session doesn't 1 (True) Negative response
support Service $85. Function
ControlDTCSetting 0 (False) Positive response
(5) service Physical
Requested ControlDTCSetting 1 (True)
service executable Function No response
1) 9.4.1 No.
No. is corresponding to No. in section 9.4.1.
Generally it makes sense not to stop self diagnosis though DTC is not stored. When failure is detected, failsafe
action should be taken but this should be defined by the system.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 85 ControlDTCSetting service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-9_4_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
DTC
ECU, which stops DTC storing by 9.4.2.1 should return to normal when one of following conditions is met.
(1) ECU DiagnosticSession defaultSession
DiagnosticSession transfers to defaultSession
a. Service $10 defaultSession
By Service $10 request message
b. (S3Server) defaultSession
Session timer(S3Server) time out
(2) OFF
IG OFF
(3)
battery cut
(4) Service $11 " OFF" " "
ECU
ECU reset by Service $11 request.
- programmingSession DTC
Caution - Don't return the set stop of DTC by the changes to programmingSession.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 85 ControlDTCSetting service is not supported by the EB Bootloader (should be managed by the customer).
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-10_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $22 (ReadDataByIdentifier service) dataRecord
Service $22 (ReadDataByIdentifier service) is used to read out dataRecord.
dataRecord ( )
dataRecord 2 dataIdentifier
DataRecord is defined as information packet for diagnostic parameter such as input/output signal and internal data and
for each dataRecord two bytes of dataIdentifier is specified.
dataIdentifier Service $22 ECU
dataIdentifier dataRecord ECU dataIdentifier
dataRecord
The offboard tester requests ECU using Service $22 request message, which has more than 1 dataIdentifier to reply
dataRecord parameter requested by data identifier. Then ECU should reply dataRecord parameter or response
message that dataRecord parameter will not be sent.
Service $22 dataIdentifier dataRecord
Serve $22 dataIdentifier and dataRecord should be defined by the system.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-10_2_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 10.1 Service $22 Service $22 1
SID 1 dataIdentifier 1 dataIdentifier
2 dataIdentifier 10.3.1
Table 10.1 shows Service $22 request message format, which consists of 1 byte of SID and one or more dataIdentifier.
Request message length is variable. 1 dataIdentifier has 2 bytes. Detail for dataIdentifier should refer to 10.3.1.
Table 10.1 Service $22
Service $22 Request message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $22 SID M 22
Service $22 Request SID
#2 dataIdentifier[ ] #1 = [ byte 1 (MSB) M 00-FF
#3 byte 2 ] M 00-FF
: : : :
#n-1 dataIdentifier[ ] #m = [ byte 1 (MSB) U 00-FF
#n byte 2 ] U 00-FF</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-10_2_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 10.2 Service $22 Service $22
1 SID dataIdentifier dataRecord dataIdentifier
dataIdentifier dataRecord dataIdentifier
dataRecord 10.3.2
Table 10.2 shows Service $22 positive response message format. The message contains 1 byte of positive response
message SID , dataIdentifier, and dataRecord. dataRecord is shown in 10.3.2.
ECU dataIdentifier dataRecord
dataIdentifier dataIdentifier
dataRecord dataIdentifier dataRecord
ECU which received the request message returns the positive response message included in order of requested
dataIdentifier and dataRecord defined to the dataIdentifier. When returning the information corresponding to several
dataIdentifiers, it carries out as follows. It includes in positive response message in order of specified dataIdentifier and
dataRecord defined by the dataIdentifier. Next, it includes after previous positive response message in order of
specified dataIdentifier and dataRecord defined by the dataIdentifier. If the information for dataIdentifier specified by the
request message is included, positive response message will be replied.
dataIdentifier dataIdentifier dataRecord
When more dataIdentifiers are requested, order of dataRecord is up to ECU. (no need to follow order of dataIdentifier)
Table 10.2 Service $22
Service $22 Positive response message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $22 SID M 62
Service $22 Positive response SID
#2 dataIdentifier[ ] #1 = [ byte 1 (MSB) M 00-FF
#3 byte 2 ] M 00-FF
#4 dataRecord[ ] #1 = [ data #1 M 00-FF
: : : :
#(k-1)+4 data #k ] U 00-FF
: : : :
#n-(o-1)-2 dataIdentifier[ ] #m = [ byte 1 (MSB) U 00-FF
#n-(o-1)-1 byte 2 ] U 00-FF
#n-(o-1) dataRecord[ ] #m = [data #1 U 00-FF
: : : :
#n data #o ] U 00-FF</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">ReadDataByIdentifier callbacks shall be implemented by customer to  provide the DID values. For CommunicationControl service, no action is performed by EB Bootloader, it only provides a positive response.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-10_2_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
2.2.2
Negative response message should follow section 2.2.2.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">ReadDataByIdentifier callbacks shall be implemented by customer to  provide the DID values. For CommunicationControl service, no action is performed by EB Bootloader, it only provides a positive response.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-10_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $22
The section defines parameter for Service $22 message.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-10_3_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
dataIdentifier Service $22 2 ECU dataRecord (
) dataIdentifier dataRecord (dataRecord )
dataIdentifier is two bytes information included in service $22 request message to indicate dataRecord read out from
ECU.
ECU
dataIdentifier
The offboard tester requests parameter packet to be read out. Then in the response message the same identifier
should be integrated.
dataIdentifier dataIdentifier ECU
Some dataIdentifier is protected by security. When such dataIdentifier is received, ECU should check security status.
dataIdentifier dataIdentifier
Maximum number of dataIdentifier should be defined by the system.
: Engine dataIdentifier 5
Information. PGM_FI system uses 5 as max.
dataIdentifier ( dataRecord dataIdentifier)
dataIdentifier and dataRecord should be defined by the system.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">ReadDataByIdentifier callbacks shall be implemented by customer to  provide the DID values. For CommunicationControl service, no action is performed by EB Bootloader, it only provides a positive response.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-10_3_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
dataRecord Service $22
dataIdentifier ( )
dataRecord is information included in Service $22 positive response message.
dataRecord 1 dataRecord PDR (Position in
DataRecord) dataRecord dataRecord (Table 10.2 data #1) PDR $00
PDR $01 $02...
dataRecord can be one or more data. To show position at dataRecord PDR (Position in DataRecord) is added to each
byte of dataRecord. e.g. head of dataRecord is PDR $00 (data #1 in table 10-2), then PDR $01, PDR $02....
dataRecord dataIdentifier 17
Length of dataRecord must be fixed but it can be different length by dataIdentifier. 17)
dataRecord
dataRecord should be defined by the system.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">ReadDataByIdentifier callbacks shall be implemented by customer to  provide the DID values. For CommunicationControl service, no action is performed by EB Bootloader, it only provides a positive response.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-10_3_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 10.3 Service $22 NRC 10.4
Table 10.3 shows Service $22 NRC definition. Negative response should be refer to 10.4.
dataIdentifier dataRecord
Offboard tester gets the data length of dataRecord from the value of dataIdentifier. When several dataIdentifier(s)
are required,offboard tester recognizes boundary of dataIdentifier and dataRecord in a positive response message
using those value.
Table 10.3 Service $22
Service $22 Negative response code definition
NRC (Hex) Description
generalReject (GR)
10 (NRC)
Although required processing cannot be performed, the negative response code suitable in
ISO14229 is not defined.
incorrectMessageLengthOrInvalidFormat (IMLOIF)
13
Received message length or message structure doesn't suit Spec. .
conditionsNotCorrect (CNC)
22
Vehicle condition is out of Spec. for the service.
requestOutOfRange (ROOR)
(1) dataIdentifier dataIdentifier
31 Number of requested dataIdentifier is more than allowed.
(2) dataIdentifier
No all of dataIdentifiers are supported.
(3) dataIdentifier DiagnosticSession
Requested dataIdentifier is not supported at this diagnosticSession.
securityAccessDenied (SAD)
33 dataIdentifier
More than 1 dataIdentifier have security issues. (not released)
requestCorrectlyReceived-ResponsePending (RCRRP)
( NRC
78 )
Due to execution of requested task it is not possible to respond positive response or negative
response with appropriate NRC. Extension of time to reply for response message is requested.
TS-DCC01
Detail should refer to TS-DCC01 .</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">ReadDataByIdentifier callbacks shall be implemented by customer to  provide the DID values and requests responses. For CommunicationControl service, no action is performed by EB Bootloader, it only provides a positive response.
</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-10_4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $22 ECU
Reply from ECU should follow this description.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-10_4_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(1) 18
Check length of request message 18
a. 3 19 ECU NRC = $13 (IMLOIF)
10.4.3
When received request message is shorter than 3bytes, ECU should prepare negative response message
with NRC = $13 (IMLOIF) and execute reply response message specified at section 10.4.3.
b. ECU NRC = $13 (IMLOIF)
10.4.3
When received request message is even bytes, ECU should prepare negative response message with NRC
= $13 (IMLOIF) and execute reply response message specified at section 10.4.3.
c. 20 ( )
ECU NRC = $31 (ROOR) 10.4.3
When received request message is longer than possible value, ECU should prepare NRC = $31 (ROOR),
and reply as specified in 10.4.3.
(2) dataIdentifier
Gathering dataIdentifier
a. dataIdentifier
dataIdentifier(s) are gathered and collected from the request message which received.
(3) dataIdentifier
The check for every dataIdentifier
a. dataIdentifier (4)
dataIdentifier (9)
Processing shown about each of gathered dataIdentifier(s) after (4) is performed. If all the dataIdentifier(s)
included in the request message are processed, processing shown in (9) will be performed.
(4) dataIdentifier
The support check of dataIdentifier
a. dataIdentifier (3) dataIdentifier
When not supporting dataIdentifier for processing, it returns to (3) and the remaining dataIdentifier is
inspected.
18 3.2 dataIdentifier
Service $22 dataIdentifier
In the inspection routine of the general request message indicated in section 3.2, dataIdentifier will be inspected
before message length. However, in the case of Service $22, because several dataIdentifier(s) are included in a
single request message, message length is inspected previously.
19 ( 1 dataIdentifier
)
Check of minimum request message length. (Minimum request message length = 3 bytes)
20 ( dataIdentifier ) 2+1 Engine 11 (5 2+ 1)
possible reception bytes = dataIdentifier *2 +1 . In case of PGM-Fi it is 11 (5*2 +1).
(5) DiagnosticSession (DiagnosticSession dataIdentifier )
DiagnosticSession analysis ( needed if supported dataIdentifier depend on diagnosticSession)
a. dataIdentifier DiagnosticSession ( DiagnosticSession
) (3) dataIdentifier
When not supporting dataIdentifier for processing by the current DiagnosticSession (It supports in other
DiagnosticSession(s)), it returns to (3) and the remaining dataIdentifier is inspected.
- dataIdentifier = $xxxx extendedDiagnosticSession defaultSession
defaultSession dataIdentifier ECU NRC = $31 (ROOR)
Caution - For example, although dataIdentifier = $xxxx is supported by extendedDiagnosticSession,
when it is not supported by defaultSession, when only this dataIdentifier is required by defaultSession,
ECU returns the negative response of NRC = $31 (ROOR).
dataIdentifier DiagnosticSession
dataIdentifier 1 DiagnosticSession dataIdentifier
dataRecord
However, dataIdentifier supported by the current DiagnosticSession to dataIdentifier included in the
request message which received, when it is also one, the positive response message included
[ dataIdentifier supported by the current DiagnosticSession and corresponding dataRecord ] is replied.
(6) ( dataIdentifier )
Security check ( if there is dataIdentifier, which is protected by security)
a. dataIdentifier
( ) ECU NRC = $33 (SAD)
10.4.3
When the security of the security type which dataIdentifier for processing is protected by security, and
corresponds is not released (or unauthorized security access), ECU should prepare negative response
message with NRC = $33 (SAD) and execute reply response message specified at section 10.4.3.
6 "Service $27 (SecurityAccess service)"
Detail of security access is described in section 6 "Service $27 (SecurityAccess service)".
dataIdentifier
Security protected dataIdentifier should be defined by the system.
- dataIdentifier dataIdentifier
Caution - Same processing is performed even if dataIdentifier (dataIdentifier currently supported and
dataIdentifier of which security was released) which can be normally replied in the request message
which received is contained.
(7) ( )
The check of vehicles operating condition It implements, when there are conditions which cannot perform an
information output.
a. dataIdentifier ECU
NRC = $22 (CNC) 10.4.3
When the information output which dataIdentifier included in the request message which received in the
current condition of ECU defines cannot be performed, ECU should prepare negative response message
with NRC = $22(CNC) and execute reply response message specified at section 10.4.3.
dataIdentifier NRC=$22 (CNC)
In addition, which dataIdentifier uses NRC=$22 by the ability not to perform an information output on what
kind of conditions directs for every system. (It does not define by this document.)
b. dataIdentifier ECU ECU
NRC = $10 (GR) 10.4.3
When dataIdentifier for processing has refusal conditions of an information output and ECU is in the
condition currently, ECU should prepare negative response message with NRC = $10 (GR) and execute
reply response message specified at section 10.4.3.
dataIdentifier NRC=$10 (GR)
In addition, which dataIdentifier uses NRC=$10 by the ability not to perform an information output on what
kind of conditions directs for every system. (It does not define by this document.)
(8)
Preparation of the information to reply
a. dataIdentifier (3) dataIdentifier
The information corresponding to dataIdentifier for processing is prepared, it returns to (3), and the remaining
dataIdentifier is inspected.
(9)
a. dataIdentifier DiagnosticSession 1
ECU NRC = $31 (ROOR) 10.4.3
When dataIdentifier in request message is not at all supported (by the current DiagnosticSession), ECU
should prepare NRC = $31(ROOR) and execute reply response message specified at section 10.4.3.
- dataIdentifier dataIdentifier 1
Caution - at least one dataIdentifier is supported, ECU should send positive message.
(10) (1) (9) ECU ReadDataByIdentifier service
ECU 10.4.2
10.4.3
When message doesn't match the above (1) to (9), ECU should judge it is possible to execute
ReadDataByIdentifier service. ECU should execute task defined in 10.4.2 and prepare positive message and
reply as defined in 10.4.3.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">ReadDataByIdentifier callbacks shall be implemented by customer to  provide the DID values. For CommunicationControl service, no action is performed by EB Bootloader, it only provides a positive response.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-10_4_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Service $22
Service $22 doesn't request task except positive response message.
When positive response message is sent, below items should be considered.
dataIdentifier 1 (
) dataIdentifier
dataRecord Table 10.2 dataRecord #n
dataIdentifier #n (n = 1 m)
dataIdentifier dataIdentifier
If at least one of the dataIdentifier(s) included in the request message is supported except for the case where a
negative response message is returned, a positive response message will be returned. In this case, the positive
response message included [ dataRecord corresponding to dataIdentifier to support ] is returned. The diagnostic
parameter corresponding to dataIdentifier #n is included in dataRecord #n in Table 10.2. (n = from 1 to m.) In addition,
an order of dataIdentifier returned by a response message may not be the same as an order of dataIdentifier specified
by a request message.
- ECU dataIdentifier
Caution -ECU should prepare enough transmitting buffer to be able to respond, when several dataIdentifiers are
required.
</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">ReadDataByIdentifier callbacks shall be implemented by customer to  provide the DID values. For CommunicationControl service, no action is performed by EB Bootloader, it only provides a positive response.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-10_4_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Reply response message
3
( or )
As described in section 3, not only by request message analysis results but also addressing type (physical or function
address) have influence on response message.
Table 10.4 10.4.1
Table 10.4shows response message definition.
(P2CAN) NRC = $78 (RCRRP)
When more time is needed to prepare information and it is not possible to respond positive response message within
P2CAN, ECU can request extension of positive response message by sending negative response message with NRC =
$78 (RCRRP).
P2CAN NRC = $78 (RCRRP) TS-DCC01
Detail of negative response message of P2CAN, negative response message with NRC = $78 (RCRRP) should refer to
TS-DCC01 .
Table 10.4 Service $22
Service $22 Reply to request message
Request message check result
No 1) addressing Response message
Description type
(1)a Physical (NRC $13)
(1)b Wrong message length Negative response
Function
dataIdentifier (NRC $31)
(1)c Physical Negative response
The required dataIdentifier number
exceeded the acceptable value. Function No response
dataIdentifier (NRC $31)
DiagnosticSession Physical Negative response
(9)a No required dataIdentifier(s) are
supported ( by the current Function No response
DiagnosticSession ).
dataIdentifier
(6)a Physical (NRC $33)
Required dataIdentifier has security Negative response
one or more unreleased things. Function
dataIdentifier
(7)a The current vehicles operating Physical (NRC $22)
condition has been the information Negative response
output refusal conditions which Function
dataIdentifier defined
ECU dataIdentifier
(7)b The current condition of ECU has Physical (NRC $10)
been the information output refusal Negative response
conditions which dataIdentifier Function
defines.
ReadDataByIdentifier
(10) service Physical
Requested ReadDataByIdentifier Positive response
service executable Function
1) 10.4.1 No.
No. is corresponding to No. in section 10.4.1.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">ReadDataByIdentifier callbacks shall be implemented by customer to  provide the DID values. For CommunicationControl service, no action is performed by EB Bootloader, it only provides a positive response.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-10_5_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
dataIdentifier is specified
dataIdentifier = $ F190
Read-out of dataIdentifier = $ F190.
dataIdentifier = $ F190 dataRecord ( ) 1 VIN 20 VIN
dataIdentifier = $ F190, 1 byte of VIN active length and 20 bytes of VIN information are defined as dataRecord.
Table 10.5 1 : Service $22
example 1 : Service $22 Request Message
Data byte Description Hex
Hex value
#1 Service $22 SID 22
Service $22 Request SID
#2 dataIdentifier [byte 1] (MSB) F1
#3 dataIdentifier [byte 2] 90
Table 10.6 1 : Service $22
example 1 : Service $22 Positive Response Message
Data byte Description Hex
Hex value
#1 Service $22 SID 62
Service $22 Positive repose SID
#2 dataIdentifier [byte 1] (MSB) F1
#3 dataIdentifier [byte 2] 90
#4 dataRecord [data #1] = VIN = 17 PDR $00 11
Length of VIN = 17 bytes
#5 dataRecord [data #2] = VIN = "W" PDR $01 57
#6 dataRecord [data #3] = VIN = "0" PDR $02 30
#7 dataRecord [data #4] = VIN = "L" PDR $03 4C
#8 dataRecord [data #5] = VIN = "0" PDR $04 30
#9 dataRecord [data #6] = VIN = "0" PDR $05 30
#10 dataRecord [data #7] = VIN = "0" PDR $06 30
#11 dataRecord [data #8] = VIN = "0" PDR $07 30
#12 dataRecord [data #9] = VIN = "4" PDR $08 34
#13 dataRecord [data #10] = VIN = "3" PDR $09 33
#14 dataRecord [data #11] = VIN = "M" PDR $0A 4D
#15 dataRecord [data #12] = VIN = "B" PDR $0B 42
#16 dataRecord [data #13] = VIN = "5" PDR $0C 35
#17 dataRecord [data #14] = VIN = "4" PDR $0D 34
#18 dataRecord [data #15] = VIN = "1" PDR $0E 31
#19 dataRecord [data #16] = VIN = "3" PDR $0F 33
#20 dataRecord [data #17] = VIN = "2" PDR $10 32
#21 dataRecord [data #18] = VIN = "6" PDR $11 36
#22 dataRecord [data #19] = VIN = "" (NULL ) PDR $12 00
(NULL Character)
#23 dataRecord [data #20] = VIN = "" (NULL ) PDR $13 00
(NULL Character)
#24 dataRecord [data #21] = VIN = "" (NULL ) PDR $14 00
(NULL Character)</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-10_5_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
several dataIdentifiers are specified
dataIdentifier = $ 010A dataIdentifier = $ 0110
Read-out of dataIdentifier = $ 010A and $0110.
dataIdentifier = $ 010A dataRecord ( ) 1 ECT 1 TP 2 RPM 1
MAP 1 MAF 1 VSS 1 BARO 1 LOAD 1 IAC 1 APP
dataIdentifier = $ 010A , 1 byte of ECT, 1 byte of TP, 2 bytes of RPM, 1 byte of MAP, 1 byte of MAF, 1 byte of VSS, 1
byte of BARO, 1 byte of LOAD, 1 byte of IAC, and 1 byte of APP are defined as dataRecord.
dataIdentifier = $ 0110 dataRecord ( ) 1 +B
dataIdentifier = $ 0110, 1 byte +B is defined as dataRecord.
Table 10.7 2 : Service $22
example 2 : Service $22 Request Message
Data byte Description Hex
Hex value
#1 Service $22 SID 22
Service $22 Request SID
#2 dataIdentifier [byte 1] (MSB) 01
#3 dataIdentifier [byte 2] 0A
#4 dataIdentifier [byte 1] (MSB) 01
#5 dataIdentifier [byte 2] 10
Table 10.8 2 : Service $22
example 2 : Service 22 Positive Response Message
Data byte Description Hex
Hex value
#1 Service $22 SID 62
Service $22 Positive repose SID
#2 dataIdentifier [byte 1] (MSB) 01
#3 dataIdentifier [byte 2] 0A
#4 dataRecord [data #1] = ECT PDR $00 A6
#5 dataRecord [data #2] = TP PDR $01 66
#6 dataRecord [data #3] = RPM PDR $02 07
#7 dataRecord [data #4] = RPM PDR $03 50
#8 dataRecord [data #5] = MAP PDR $04 20
#9 dataRecord [data #6] = MAF PDR $05 1A
#10 dataRecord [data #7] = VSS PDR $06 00
#11 dataRecord [data #8] = BARO PDR $07 63
#12 dataRecord [data #9] = LOAD PDR $08 4A
#13 dataRecord [data #10] = IAC PDR $09 82
#14 dataRecord [data #11] = APP PDR $0A 7E
#15 dataIdentifier [byte 1] (MSB) 01
#16 dataIdentifier [byte 2] 10
#17 dataRecord [data #1] = +B PDR $00 8C</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-10_5_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Example 3 : (dataIdentifier which is not supported is included) Read out in case several
dataIdentifiers are specified
dataIdentifier = $ F190 dataIdentifier = $ 0110 ECU dataIdentifier = $ 0110
dataIdentifier = $ F190
Read out of dataIdentifier = $F190 and $0110. However, although dataIdentifier = $0110 support ECU, dataIdentifier =
$F190 do not support.
dataIdentifier = $ F190 dataRecord ( ) 1 VIN 20 VIN
dataIdentifier = $ F190, 1 byte of VIN active length and 20 bytes of VIN information are defined as dataRecord.
dataIdentifier = $ 0110 dataRecord ( ) 1 +B
dataIdentifier = $ 0110, 1 byte +B is defined as dataRecord.
Table 10.9 3 : Service $22
example 3 : Service $22 Request Message
Data byte Description Hex
Hex value
#1 Service $22 SID 22
Service $22 Request SID
#2 dataIdentifier [byte 1] (MSB) F1
#3 dataIdentifier [byte 2] 90
#4 dataIdentifier [byte 1] (MSB) 01
#5 dataIdentifier [byte 2] 10
Table 10.10 3 : Service $22
example 3 : Service $22 Positive Response Message
Data byte Description Hex
Hex value
#1 Service $22 SID 62
Service $22 Positive repose SID
#2 dataIdentifier [byte 1] (MSB) 01
#3 dataIdentifier [byte 2] 10
#4 dataRecord [data #1] = +B PDR $00 8C</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-10_6</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
ECU Service $22
This section defines parameter for reprogrammable ECU.
" B.3 (3) " Service $22
Appendix B3 reprogramming communication procedure 3) vehicle condition reading parameter should be defined by
the system.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-10_6_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 10.11 dataIdentifier
Table 10.11 shows dataIdentifier for reprogramming.
Table 10.11 Service $22 dataIdentifier The definition of Service $22
dataIdentifier used by reprogramming
DiagnosticSession
dataIdentifier Support by DiagnosticSession
(Hex Requested information default extendedDiag engineering programming Securit
Session nosticSession Session Session y
E600 battery voltage None
F100 Reprogramming history None
F181 ID
Program ID None
Support
No Support
Table 10.11 dataIdentifier Service $22 NRC = $78 (RCRRP)
Caution - NRC=$78 (RCRRP) must not use dataIdentifier specified to Table 10.11 by the reply of Service $22.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EB Bootloader call a callback to get the values associated to these DIDs. The storage of the DIDs value, their configuration and the implementation of the callbacks shall be ensured by customer.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-10_6_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
10.6.2.1 (dataIdentifier = $ E600) battery voltage
Table 10.12 dataIdentifier = $ E600 dataRecord dataRecord 2
Table 10.12 shows dataRecord definition of dataIdentifier = $E600. dataRecord is two bytes battery voltage.
dataIdentifier = $ E600 Service $22 ECU dataRecord
ECU which received the Service $22 request message of dataIdentifier = $ E600 includes battery voltage in
dataRecord.
(10v
)
Off-board tester judges from battery voltage if reprogramming is done or not.
Table 10.12 dataIdentifier = $ E600 dataRecord
dataIdentifier PDR Min Max
(Hex) Information Bytes Minimum Maximum resolution
$00 (MSB)
battery voltage (MSB) 2 0V 65.535 V 0.001 V/bit
E600 $01 2 Bytes
battery voltage
ECU 0.001V/bit 2 PDR $00 $01
ECU converts to unsigned two bytes by resolution 0.001 V/bit for PDR $00 and $01.
Table 10.13 12.5V
Table 10.13 shows message example when battery voltage is 12.5V.
Table 10.13 dataIdentifier = $ E600
dataIdentifier = $ E600 positive response message example
Data byte Description Hex
Hex value
#1 Service $22 SID 62
Service $22 Positive repose SID
#2 dataIdentifier [byte 1] (MSB) E6
#3 dataIdentifier [byte 2] 00
#4 dataRecord [data #1] = (MSB) PDR $00 30
battery voltage (MSB)
#5 dataRecord [data #2] = PDR $01 D4
battery voltage
10.6.2.2 (dataIdentifier = $ F100) reprogramming history
Table 10.14 dataIdentifier = $ F100 dataRecord dataRecord 4
Table 10.14 shows dataRecord definition of dataIdentifier = $F100. dataRecord is four bytes of reprogramming history.
dataIdentifier = $ F100 Service $22 ECU dataRecord
ECU which received the Service $22 request message of dataIdentifier = $ F100 includes reprogramming history in
dataRecord.
In addition, off-board tester does not use this information for reprogramming.
Table 10.14 dataIdentifier = $ F100 dataRecord
dataIdentifier = $ F100 positive response message example
dataIdentifier PDR Description
(Hex) Information Bytes
$00 1 1
reprogramming history 1 1 byte Non official tester used history
$01 2 1
reprogramming history 2 1 byte current tester history
F100 $02 3 1
reprogramming history 3 1 byte number of reprogramming event
$03 4 1
reprogramming history 4 1 byte Number of software erase.
ECU 15.5.2.7 1 PDR $00 2 PDR
$01 3 PDR $02 4 PDR $03
Table 10.15 1 = $FF 2 = $00 3 = $10
Table 10.15 dataIdentifier = $ F100
dataIdentifier = $ F100 positive response message example
Data byte Description Hex
Hex value
#1 Service $22 SID 62
Service $22 Positive repose SID
#2 dataIdentifier [byte 1] (MSB) F1
#3 dataIdentifier [byte 2] 00
#4 dataRecord [data #1] = 1 PDR $00 FF
reprogramming history 1
#5 dataRecord [data #2] = 2 PDR $01 00
reprogramming history 2
#6 dataRecord [data #3] = 3 PDR $02 10
reprogramming history 3
#7 dataRecord [data #4] = 4 PDR $03 17
reprogramming history 4</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EB Bootloader call a callback to get the values associated to these DIDs. The storage of the DIDs value, their configuration and the implementation of the callbacks shall be ensured by customer.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-10_6_2_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 10.16 dataIdentifier = $ F181 dataRecord dataRecord 16 ID
dataIdentifier = $ F181 Service $22 ECU ID dataRecord PDR $00
Table 10.16 shows dataRecord of dataIdentifier = $F181. dataRecord is 16 bytes program ID. Program ID should start
from PDR $00.
ECU 22.4 " " ECU ID
When ECU is in "application mode", program ID can be changed by reprogramming.
ECU 22.4 "BOOT " ECU ID
But if ECU is in "BOOT mode", program ID must not be changed by reprogramming.
22.4 " " ID
22.4 "BOOT " (FLASH ROM
EEPROM ) ID
Meaning when ECU is in "application mode", program ID should be one from flash area and if ECU is in "BOOT mode",
ECU should reply program ID, which is stored in non flash area.
The off board tester uses those information to decide program version and normal complete judgment.
Table 10.16 dataIdentifier = $ F181 dataRecord dataIdentifier = $ F181 dataRecord definition
dataIdentifier PDR Description
(Hex) Bytes Resolution
$00-$0F ID 16 ASCII
Program ID 16 bytes ASCII
ECU 16 ASCII ID PDR $00
F181 ID 14 ( No.
) 2 (PDR $0E $0F) $00
ECU should read 16 bytes ASCII code program ID from 1st byte and assign to PDR $00.
Program ID should be 14 bigger numbers from SW part number on the Honda drawing and $00
for remaining 2 bytes.
Table 10.17 "12345-ABC -6789-XZ"
Table 10.17 shows example with SW number "12345-ABC-6789-XZ".
Table 10.17 dataIdentifier = $ F181
dataIdentifier = $ F181 positive response message example.
Data byte Description Hex
Hex value
#1 Service $22 SID 62
Service $22 Positive repose SID
#2 dataIdentifier [byte 1] (MSB) F1
#3 dataIdentifier [byte 2] 81
#4 dataRecord [data #1] = ID = "1" PDR $00 31
Program ID
#5 dataRecord [data #2] = ID = "2" PDR $01 32
Program ID
#6 dataRecord [data #3] = ID = "3" PDR $02 33
Program ID
#7 dataRecord [data #4] = ID = "4" PDR $03 34
Program ID
#8 dataRecord [data #5] = ID = "5" PDR $04 35
Program ID
#9 dataRecord [data #6] = ID = "-" PDR $05 2D
Program ID
#10 dataRecord [data #7] = ID = "A" PDR $06 41
Program ID
#11 dataRecord [data #8] = ID = "B" PDR $07 42
Program ID
#12 dataRecord [data #9] = ID = "C" PDR $08 43
Program ID
#13 dataRecord [data #10] = ID = "-" PDR $09 2D
Program ID
#14 dataRecord [data #11] = ID = "6" PDR $0A 36
Program ID
#15 dataRecord [data #12] = ID = "7" PDR $0B 37
Program ID
#16 dataRecord [data #13] = ID = "8" PDR $0C 38
Program ID
#17 dataRecord [data #14] = ID = "9" PDR $0D 39
Program ID
#18 dataRecord [data #15] = = "" PDR $0E 00
#19 dataRecord [data #16] = = "" PDR $0F 00</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EB Bootloader call a callback to get the values associated to these DIDs. The storage of the DIDs value, their configuration and the implementation of the callbacks shall be ensured by customer.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-11_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $2E (WriteDataByIdentifier service) ECU
Service $2E (WriteDataByIdentifier service) is used to write information to ECU or EEPROM initialization.
ECU dataIdentifier
dataRecord Service $2E ECU ECU
dataIdentifier dataRecord ( )
( )
The offboard tester requests ECU using Service $2E request message, which has dataIdentifier, which defines
memory area and with dataRecord, which are data to be written. Then ECU should write (or initialize) received
dataRecord Parameter into area shown by dataIdentifier and then reply results that were executed or negative
response message in response message.
Service $2E
( )
In addition, you may protect with security the diagnostic function defined by Service $2E if needed.
And, it is under a specific condition (for example, during an engine run) at safety or the reason for a design, you may
refuse execution of the specified processing.
Service $2E dataIdentifier dataIdentifier ( )
Service $2E dataIdentifier and security protection dataIdentifier and condition to enable writing (initialization) should be
defined by the system.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-11_2_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 11.1 Service $2E Service $2E 1
SID 2 dataIdentifier dataRecord
Table 11.1 shows Service $2E request message format. Which consists of 1 byte of SID and 2 bytes dataIdentifier and
dataRecord. Data length is variable.
Table 11.1 Service $2E
Service $2E Request message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service$2E SID M 2E
Service $2E Request SID
#2 dataIdentifier[ ] = [ byte #1 (MSB) M 00-FF
#3 byte #2 ] M 00-FF
#4 dataRecord[ ] = [ data#1 M 00-FF
: : : :
#m+3 data#m ] U 00-FF</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">WriteDataByIdentifier callbacks shall be implemented by customer to provide the DID writting. No action is performed by EB Bootloader, it only provides a positive response.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-11_2_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 11.2 Service $2E Service $2E 1
SID 2 dataIdentifier dataIdentifier
dataIdentifier
Table 11.2 shows Service $2E positive response message format. The message contains 1 byte of positive response
message SID and 2 bytes dataIdentifier. dataIdentifier should use received dataIdentifier.
ECU ( )
After task execution, positive message should be sent.
Table 11.2 Service $2E
Service $2E Positive response message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service$2E SID M 6E
Service $2E Positive response SID
#2 dataIdentifier[ ] = [ byte #1 (MSB) M 00-FF
#3 byte #2 ] M 00-FF</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">WriteDataByIdentifier callbacks shall be implemented by customer to provide the DID writting. No action is performed by EB Bootloader, it only provides a positive response.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-11_2_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
2.2.2
Negative response message should follow section 2.2.2.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">WriteDataByIdentifier callbacks shall be implemented by customer to provide the DID writting. No action is performed by EB Bootloader, it only provides a positive response.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-11_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Service $2E
The section defines parameter included in Service $2E message.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">WriteDataByIdentifier callbacks shall be implemented by customer to provide the DID writting. No action is performed by EB Bootloader, it only provides a positive response.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-11_3_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
dataIdentifier Service $2E 2 dataRecord
ECU
dataIdentifier is two bytes information included in service $2E request message, and it indicates memory area to write
dataRecord in ECU.
dataIdentifier
In positive message, ECU should use same value as dataIdentifer value which is received message.
Service $2E dataIdentifier Service $22 dataIdentifier
Service $22 Service $2E
The dataIdentifier which included in Service $2E is assigned same as Service $22 dataIdentifier and that Service $22
use same value as Service $2E. In that case, it is same meaning.
( Engine dataIdentifier = $F190 VIN: Vehicle Identification Number
dataIdentifier Service $2E Service $22 )
(e.g. $F190 means VIN, and the dataIdentifer is used writing Service $2E and reading Service $22.)
dataIdentifier ( dataRecord dataIdentifier )
detail of dataIdentifier (definition and security protection) will be defined by the system.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">WriteDataByIdentifier callbacks shall be implemented by customer to provide the DID writting. No action is performed by EB Bootloader, it only provides a positive response.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-11_3_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
dataRecord dataIdentifier
dataRecord is information included in Service $2E request message and it specifies data to be written where
dataIdentifier indicates.
dataRecord dataIdentifier
dataRecord length is defined fixing length by each dataIdentifier.
dataRecord 1 dataRecord 1 PDR (Position
in DataRecord) dataRecord dataRecord (Table 11.1 data #1) PDR $00
PDR $01 $02...
dataRecord is constituted by one or more data. To show position inside of dataRecord, 1 byte PDR (Position in
DataRecord) is added to each byte of dataRecord. e.g. head of dataRecord is PDR $00 (data #1 in Table 11.1), then
PDR $01, PDR $02....
ECU dataIdentifier dataRecord
ECU writes the value required as dataRecord in the memory area which dataIdentifier indicates.
dataRecord
detail for dataRecord is defined by the system.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">WriteDataByIdentifier callbacks shall be implemented by customer to provide the DID writting. No action is performed by EB Bootloader, it only provides a positive response.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-11_3_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 11.3 Service $2E NRC 11.4
Table 11.3 shows Service $2E NRC definition. Negative response should be refer to 11.4.
Table 11.3 Service $2E
Service $2E Negative response code definition
NRC (Hex) Description
incorrectMessageLengthOrInvalidFormat (IMLOIF)
13
Received message length or message structure doesn't suit Spec. .
conditionsNotCorrect (CNC)
22 ( )
Vehicle condition doesn't allow writing. (or initialization.)
requestOutOfRange (ROOR)
(1) dataIdentifier
dataIdentifier which requested is not supported.
31 (2) dataRecord
dataRecord which requested is out of Spec.
(3) dataIdentifier DiagnosticSession
dataIdentifier which requested is not supported in current diagnosticSession.
securityAccessDenied (SAD)
33 dataIdentifier
Security which requested dataIdentifer is not released.
generalProgrammingFailure (GPF)
72
Due to memory error it is not possible to write.
requestCorrectlyReceived-ResponsePending (RCRRP)
( NRC
78 )
Due to execution of requested task it is not possible to respond positive response or negative
response with appropriate NRC. Extension of time to reply for response message is requested.
TS-DCC01
Detail should refer to TS-DCC01 .</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">WriteDataByIdentifier callbacks shall be implemented by customer to provide the DID writting. No action is performed by EB Bootloader, it only provides a positive response.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-11_4</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Service $2E ECU
Reply from ECU should follow this description.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">WriteDataByIdentifier callbacks shall be implemented by customer to provide the DID writting. No action is performed by EB Bootloader, it only provides a positive response.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-11_4_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(1) ( 21)
Check length of request message (check longer than minimum length 21))
a. 3 ECU NRC = $13 (IMLOIF)
11.4.3
When received request message is shorter than 3bytes, ECU should prepare negative response message
with NRC = $13 (IMLOIF) and execute reply response message specified at section 11.4.3.
(2) dataIdentifier
Check dataIdentifier
a. dataIdentifier ECU NRC = $31 (ROOR)
11.4.3
When dataIdentifier in received request message is not supported, ECU should prepare negative response
message with NRC = $31(ROOR) and execute reply response message specified at section 11.4.3.
(3)
Check length of request message
a. dataIdentifier ECU NRC = $13
(IMLOIF) 11.4.3
When received request message length doesn't match to the length defined by dataIdentifier, ECU should
prepare negative response message with NRC = $13 (IMLOIF) and execute reply response message
specified at section 11.4.3.
(4) DiagnosticSession (DiagnosticSession dataIdentifier )
DiagnosticSession analysis ( needed if supported dataIdentifier depend on diagnosticSession)
a. dataIdentifier DiagnosticSession
ECU NRC = $31 (ROOR) 11.4.3
When dataIdentifiers in request message is not supported at current diagnosticSession (but supported at
other diagnosticSession), ECU should prepare negative response message with NRC = $31(ROOR) and
execute reply response message specified at section 11.4.3.
(5) ( dataIdentifier )
Security check ( if there is dataIdentifier, which is protected by security)
a. dataIdentifier
( ) ECU NRC =
$33 (SAD) 11.4.3
When dataIdentifiers in request message has security protection and that security of security type is not
released (or fail to release), ECU should prepare negative response message with NRC = $33 (SAD) and
execute reply response message specified at section 11.4.3.
6 "Service $27 (SecurityAccess service)"
Detail of security access is described in section 6 "Service $27 (SecurityAccess service)".
dataIdentifier
Security protected dataIdentifier should be defined by the system.
Prior to dataIdentifier, check if enough length of request message is received or not.
(6) ( dataIdentifier )
Vehicle driving condition check (if there is dataIdentifier , which requires special vehicle condition.)
a. dataIdentifier
ECU NRC = $22 (CNC)
11.4.3
When received dataIdentifier as limitation on vehicle condition and current vehicle condition is out of
possible area, ECU should prepare negative response message with NRC = $22 (CNC) and execute reply
response message specified at section 11.4.3.
Vehicle condition should be defined by the system.
(7) dataRecord ( )
dataRecord check (It implements if needed)
a. dataRecord dataIdentifier
ECU NRC = $31 (ROOR) 11.4.3
When dataRecord is out of Spec, ECU should prepare NRC = $31(ROOR) and execute reply response
message specified at section 11.4.3.
dataRecord
Detail should be defined by the system.
(8) ( )
Store area memory check (It implements if needed)
a. dataIdentifier
ECU NRC = $72 (GPF) 11.4.3
When store area memory indicates abnormality, ECU should prepare NRC = $72(GPF) and execute reply
response message specified at section 11.4.3.
dataIdentifier
Detail should be defined by the system.
(9) (1) (8) ECU WriteDataByIdentifier service
ECU 11.4.2
When message doesn't match the above (1) to (8), ECU should judge it is possible to execute
WriteDataByIdentifier service. ECU should execute task defined in 11.4.2 and, prepare positive/negative
response message and execute reply response message specified in 11.4.3.
a. WriteDataByIdentifier service
ECU NRC = $72 (GPF) 11.4.3
When writing which is WriteDataByIdentifierService couldn't finish normal due to memory problem, ECU
should prepare NRC = $72(GPF) and execute reply response message specified at section 11.4.3.
b. WriteDataByIdentifier service ECU
11.4.3
When writing which is WriteDataByIdentifierService finished normal, ECU should reply positive message.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">WriteDataByIdentifier callbacks shall be implemented by customer to provide the DID writting. No action is performed by EB Bootloader, it only provides a positive response.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-11_4_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
dataIdentifier dataRecord ( )
When ECU judges to perform the requested task which is WriteDataByIdentifierService, ECU should write dataRecord
into memory specified by dataIdentifier. (or, initialize specified area of memory by dataIdentifer.)
11.4.3 Reply response message
3
( or )
As described in section 3, not only by request message analysis results but also addressing type (physical or function
address) have influence on response message.
Table 11.4 11.4.1
Table 11.4 shows response message definition.
11.4.2 (P2CAN)
NRC = $78 (RCRRP)
When more time is needed to prepare information and it is not possible to respond positive response message within
P2CAN, ECU can request extension of positive response message by sending negative response message with NRC =
$78 (RCRRP).
P2CAN NRC = $78 (RCRRP) TS-DCC01
Detail of negative response message of P2CAN, negative response message with NRC = $78 (RCRRP) should refer to
TS-DCC01 .
Table 11.4 Service $2E
Service $2E Reply to response message
Request message check result
No 1) addressing Response message
Description type
(1)a Physical (NRC $13)
(3)a Wrong message length Negative response
Function
dataIdentifier (NRC $31)
(2)a Physical Negative response
requested dataIdentifier not
supported. Function No response
DiagnosticSession (NRC $31)
dataIdentifier Physical Negative response
(4)a requested dataIdentifier not
supported in current Function No response
diagnosticSession.
dataIdentifier
(5)a Physical (NRC $33)
Security of dataIdentifier is not Negative response
released. Function
(6)a Physical (NRC $22)
Vehicle condition doesn't allow Negative response
requested service to execute Function
(NRC $31)
(7)a dataRecord Physical Negative response
Incorrect dataRecord value.
Function No response
(8)a Physical (NRC $72)
(9)a Memory error Negative response
Function
WriteDataByIdentifier
(9)b service Physical
Requested WriteDataByIdentifier Positive response
service executable Function
1) 11.4.1 No.
No. is corresponding to No. in section 11.4.1.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">WriteDataByIdentifier callbacks shall be implemented by customer to provide the DID writting. No action is performed by EB Bootloader, it only provides a positive response.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-11_5</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
ECU Service $2E
This section defines the parameter included in the Service $2E message of ECU which implements a reprogramming
function.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">WriteDataByIdentifier callbacks shall be implemented by customer to provide the DID writting. No action is performed by EB Bootloader, it only provides a positive response.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-11_5_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 11.5 dataIdentifier
Table 11.5 shows dataIdentifier for reprogramming.
Table 11.5 Service $2E dataIdentifier
DiagnosticSession
dataIdentifier Support by DiagnosticSession
(Hex Information default extendedDiag engineering programmin Securit
Session nosticSession Session gSession y
F100 Reprogramming history none
F101 Program information none
Support
No Support
- Table 11.5 dataIdentifier Service $2E NRC = $78 (RCRRP)
Caution dataIdentifier in Table 11.5 should not be used Service $2E with NRC = $78 (RCRRP).</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EB Bootloader call a callback to set the values associated to these DIDs. The storage of the DIDs value, their configuration and the implementation of the callbacks shall be ensured by customer.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-11_5_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
11.5.2.1 (dataIdentifier = $ F100) reprogramming history
Table 11.6 dataIdentifier = $ F100 dataRecord dataRecord 2
Table 11.6 shows dataRecord for dataIdentifier = $F100. dataRecord have two bytes offboard tester information.
dataIdentifier = $ F100 Service $2E ECU
When ECU judges possible to execute, ECU should do followings.
(1) 1 (PDR $00)
Offboard tester information (PDR $00) check
a. 1 (PDR $00) $01 ECU $FF
When offboard tester information 1 is not $01, ECU should store $FF as reprogramming tester info.
Service $31
15.5.2.7
The information to EEPROM should be done after service $31 program memory erase. Detail should refer to
15.5.2.7.
b. 1 (PDR $00) $01 ECU
2 (PDR $01)
When offboard tester information 1 is $01, ECU should store offboard tester information 2 (PDR $01) as
reprogramming tester info.
Service $31
15.5.2.7
The information to EEPROM should be done after service $31 program memory erase. Detail should refer to
15.5.2.7.
Table 11.6 dataIdentifier = $ F100 dataRecord
dataRecord definition dataIdentifier = $F100
dataIdentifier PDR Description Hex
(Hex) Hex value
$00 1 00-FF
F100 Off-board tester information 1
$01 2 00-FF
Off-board tester information 2
- dataRecord Service $22 Service $2E
Caution dataRecord contents are different between Service $22 and Service $2E.
11.5.2.2 (dataIdentifier = $ F101) Program information (dataIdentifier = $F101)
Table 11.7 dataIdentifier = $ F101 dataRecord dataRecord 3
Table 11.7 shows dataRecord for dataIdentifier = $F101. 3 bytes of programming information is defined as dataRecord.
dataIdentifier = $ F101 Service $2E ECU
PDR $00 $02 1 3
When ECU judges possible to execute, and receive Service $2E request message in dataIdentifier=$F101, ECU
should store PDR $00 to PDR $02 as information 1 to 3.
ECU 22.5 " " ECU
22.5 " " ECU
22.5 " " ECU
When ECU reprogramming status is like "waiting for programming information" specified in 22.5, after getting this
information, ECU should transfer to "wait for download request". When ECU is not in "waiting for programming
information", no change should be done.
( 1 3) Service $36
Program information 1 to 3 should be used to decrypt program code sent with Service $36. Decrypt function should be
defined separately.
Table 11.7 dataIdentifier = $ F101 dataRecord
dataRecord definition dataIdentifier = $F101
dataIdentifier PDR Description Hex
(Hex) Hex value
$00 1 00-FF
Decrypt code 1
F101 $01 2 00-FF
Decrypt code 2
$02 3 00-FF
Decrypt code 3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EB Bootloader call a callback to set the values associated to these DIDs. The storage of the DIDs value, their configuration and the implementation of the callbacks shall be ensured by customer.

Reprogramming status shall be fully managed in integration code.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-12_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $14 (ClearDiagnosticInformation service) ECU
Service $14 (ClearDiagnosticInformation service) is used to initialize diagnostic information stored in ECU.
groupOfDtc Service $14 ECU
ECU groupOfDtc
Off-board tester requires initialization of the diagnostic related information stored in ECU by the Service $14 request
message included groupOfDtc. ECU returns whether initialization of diagnostic related information was performed.
groupOfDtc groupOfDtc
DTC
groupOfDtc defines data which should be initialized. groupOfDtc should take one of "specific unit group" and "specific
system DTC".
( )
ON
It is possible to reject under special condition such engine running. When IG-ON but motor is not running, this
command must be executed.
Service $14
Initialized items by Service $14 should be defined by the system.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x14 ClearDiagnosticInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-12_2_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 12.1 Service $14 Service $14 1
SID 3 groupOfDtc
Table 12.1 shows Service $14 request message format, which consists of SID and 3 bytes of groupOfDtc.
Table 12.1 Service $14
Service $14 Request message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $14 SID M 14
Service $14 Request SID
#2
#3 groupOfDtc [ ] M FFFFFF
#4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x14 ClearDiagnosticInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-12_2_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 12.2 Service $14 Service $14 1
SID ECU
Table 12.2 shows Service $14 positive response message format, which consists of 1 byte of SID only. After task
execution, positive message should be sent.
Table 12.2 Service $14
Service $14 Positive response message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $14 SID M 54
Service $14 Positive response SID</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x14 ClearDiagnosticInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-12_2_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
2.2.2
Negative response message should follow section 2.2.2.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x14 ClearDiagnosticInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-12_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $14
The section defines parameter for Service $14 message.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x14 ClearDiagnosticInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-12_3_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
groupOfDtc Service $14 3 ECU
groupOfDtc is 3 bytes information in Service $14 request message to ECU to define initialized area in diagnostic
Information.
ECU groupOfDtc All Groups(all DTCs)
Detail should be specified by the system. However, All Groups (all DTCs) must be supported by all the systems.
Table 12.3 groupOfDtc
Table 12.3 shows definition of groupOfDtc.
Table 12.3 Service $14 groupOfDtc
Service $14 Definition of groupOfDtc
groupOfDtc Description
(Hex)
Emissions-related systems
000000 (ISO 14229-1 )
Not used (reserved by ISO 14229-1)
000001 (HDC_CAN )
-FFFFFE Not used (reserved by HDC-CAN)
All Groups (all DTCs)
FFFFFF
Initialize all diagnostic related information.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x14 ClearDiagnosticInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-12_3_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 12.4 Service $14 NRC 12.4
Table 12.4 shows Service $11 NRC definition. Negative response should be refer to 12.4.
Table 12.4 Service $14
Service $14 Negative response code definition
NRC (Hex) Description
incorrectMessageLengthOrInvalidFormat (IMLOIF)
13
Received message length or message structure doesn't suit Spec. .
conditionsNotCorrect (CNC)
22 It is not in the vehicles condition that initialization of the required diagnostic information can be
executed..
requestOutOfRange (ROOR)
31 groupOfDtc
Requested groupOfDtc not supported.
requestCorrectlyReceived-ResponsePending (RCRRP)
( NRC
78 )
Due to execution of requested task it is not possible to respond positive response or negative
response with appropriate NRC. Extension of time to reply for response message is requested.
TS-DCC01
Detail should refer to TS-DCC01 .
serviceNotSupportedInActiveSession (SNSIAS)
7F DiagnosticSession Service $14
Current diagnostic Session doesn't support Service $14</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x14 ClearDiagnosticInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-12_4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $14 ECU
This section prescribes return processing of the response message which ECU which received the Service $14
request message performs. Reply from ECU should follow this description.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x14 ClearDiagnosticInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-12_4_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
(1) DiagnosticSession
DiagnosticSession analysis
a. ECU DiagnosticSession programmingSession ECU NRC = $7F (SNSIAS)
12.4.3
When diagnosticSession is programmingSession, ECU should prepare negative response message with
NRC = $7 (SNSIAS) and execute reply response message specified at section 12.4.3.
(2) ( 22)
Check length of request message (check longer than minimum length 22))
a. 4 ECU NRC = $13 (IMLOIF)
12.4.3
When received request message is shorter than 4bytes, ECU should prepare negative response message
with NRC = $13 (IMLOIF) and execute reply response message specified at section 12.4.3.
(3) groupOfDtc
groupOfDtc analysis
a. groupOfDtc ECU NRC = $31 (ROOR)
12.4.3
When groupOfDtc in received request message is not supported, ECU should prepare negative response
message with NRC = $31(ROOR) and execute reply response message specified at section 12.4.3.
(4)
Check length of request message
a. 4 ECU NRC = $13 (IMLOIF)
12.4.3
When received request message is NOT 4bytes, ECU should prepare negative response message with
NRC = $13 (IMLOIF) and execute reply response message specified at section 12.4.3.
(5) (ClearDiagnosticInformation service )
Vehicle condition check (In case of executing service should be limited by condition, ECU should equip this
checking logic.)
a. ClearDiagnosticInformation service
ECU NRC =$22 (CNC)
12.4.3
When ClearDiagnosticInformation service as limitation on vehicle condition and current vehicle condition is
out of Spec, ECU should prepare negative response message with NRC = $22 (CNC) and execute reply
response message specified at section 12.4.3.
Vehicle condition will be defined by the system.
(6) (1) (5) ECU ClearDiagnosticInformation service
ECU 12.4.2
12.4.3
When message doesn't match the above (1) to (5), ECU should judge it is possible to execute
ClearDiagnosticInformation service. ECU should execute task defined in12.4.2 and prepare positive message
and reply as defined in 12.4.3.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x14 ClearDiagnosticInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-12_4_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
When ECU judges to perform the requested task, ECU should initialization of diagnosis related information.
Prior to clearOption, check if enough length of request message is received or not.
12.4.3 Reply response message
3
( or )
As described in section 3, not only by request message analysis results but also addressing type (physical or function
address) have influence on response message.
Table 12.5 12.4.1
Table 12.5 shows response message definition.
12.4.2 (P2CAN)
NRC = $78 (RCRRP)
When more time is needed to required processing and it is not possible to respond positive response message within
P2CAN, ECU can request extension of positive response message by sending negative response message with NRC =
$78 (RCRRP).
P2CAN NRC = $78 (RCRRP) TS-DCC01
Detail of negative response message of P2CAN, negative response message with NRC = $78 (RCRRP) should refer to
TS-DCC01 .
Table 12.5 Service $14 Service $14 Reply to request message
Request message check result
No 1) addressing Response message
Description type
(2)a Physical (NRC $13)
(4)a Wrong message length Negative response
Function
groupOfDtc (NRC $31)
(3)a Physical Negative response
Requested groupOfDtc not
supported. Function No response
DiagnosticSession
(1)a Service $14 Physical (NRC $7F)
Current Diagnostic Session doesn't Negative response
support Service $14. Function
(5)a Physical (NRC $22)
Vehicle condition doesn't allow Negative response
requested service to execute Function
ClearDiagnosticInformation service
(6) Physical
Requested Positive response
ClearDiagnosticInformation service Function
executable
1) 12.4.1 No.
No. is corresponding to No. in section 12.4.1.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x14 ClearDiagnosticInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $19 (ReadDTCInformation service) ECU DTC
Service $19 (ReadDTCInformation service) is used to read out DTC and related information.
Service $19 sub-function ECU
Service $19 has different diagnostic Function by sub-function. And, the formats of a request message and a positive
response message also different for every sub-function.
HDC_CAN sub-function ( Table 13.7 )
HDC_CAN specifies the following sub-function (detail on Table 13.7)
sub-function = $01 ( reportNumberOfDTCByStatusMask ) DTC
Report number of DTC by StatusMask
sub-function = $02 ( reportDTCByStatusMask ) DTC
Report DTC by StatusMask.
sub-function = $0A ( reportSupportedDTC ) DTC
Report supported DTC and diagnostic status.
Service $19 "DTC Status" DTC Status DTC
1
The concept of "DTC Status" is applied in Service $19. DTC Status shows the execution situation of the diagnosis on
board corresponding to DTC, the performed result, etc. It is defined as communication data of 1 byte of bit map
information.
HDC_CAN DTC Status ( Table 13.8 )
HDC_CAN defines below DTC status (detail on Table 13.8)
testFailedThisMonitoringCycle = DTC
testFailedThisMonitoringCycle = self diagnosis results at this IG cycle for the requested DTC.
pendingDTC = DTC
pendingDTC = the last diagnosis results for the requested DTC.
confirmedDTC = DTC
confirmedDTC = the confirmed diagnosis results for the requested DTC..
testNotCompletedThisMonitoringCycle = DTC
testNotCompletedThisMonitoringCycle = not performed diagnosis at this IG cycle for the requested DTC.
warningIndicatorRequested ( DTC )
warningIndicatorRequested = warning lamp status for requested DTC.
Service $19 DTC DTC Status DTC Status
DTC Status DTC "DTC
Status Mask" ECU DTC "Status Of DTC"
At Service $19 by DTC and DTC status, diagnostic status and results are read. DTC is called "Status Mask" when the
off board tester requests and "Status of DTC" when ECU sends DTC.
Service $19 sub-function DTC Status
Service $19 sub- function and DTC status are defined by the system.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
DTC Status Mask DTC ECU
confirmedDTC pendingDTC ECU
This function requires of ECU to report number of DTC which matched DTC Status Mask specified by offboard tester.
For example, offboard tester uses this function, in order to check whether confirmedDTC or pendingDTC is stored in
ECU.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_2_1_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 13.1 DTC Service $19 DTC Service $19
1 SID 1 sub-function (1
suppressPosRspMsgIndicationBit 7 reportNumberOfDTCByStatusMask ) 1 DTCStatusMask
sub-function bit 7 suppressPosRspMsgIndicationBit bit 0-6
reportNumberOfDTCByStatusMask
Table 13.1 shows Service $19 request message format to request number of DTC. which consists of 1 byte of SID and
byte of DTCStatusMask. Bit 7 of sub-function is suppressPosRspMsgIndicationBit and bit 0 - 6 is
reportNumberOfDTCByStatusMask.
suppressPosRspMsgIndicationBit 2.1.2
Detail of suppressPosRspMsgIndicationBit should refer to section 2.1.2
ECU DTCStatusMask DTC ECU
The offboard tester requests ECU to send number of DTC indicated by DTCStatusMask.
Table 13.1 Service $19 (DTC )
Service $19 Request message definition (number of DTC)
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $19 SID M 19
Service $19 Request SID
#2 sub-function = suppressPosRspMsgIndicationBit + M 01 or 81
reportNumberOfDTCByStatusMask ]
#3 DTCStatusMask M 00-FF</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_2_1_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 13.2 DTC Service $19 DTC
Service $19 1 SID 1 reportType 1
DTCStatusAvailabilityMask 1 DTCFormatIdentifier 2 DTCCount
reportType reportNumberOfDTCByStatusMask
Table 13.2 shows Service $19 positive response message format to request number of DTC. The message contains 1
byte of positive response message SID, 1 byte of reportType, 1 byte of DTCStatusAvailabilityMask, 1 byte of
DTCFormatIdentifier, 2 bytes of DTCCount. reportType should be put received reportNumberOfDTCByStatusMask.
ECU reportType ECU
DTC Status (DTCStatusAvailabilityMask) DTC (DTCFormatIdentifier)
DTCStatusMask ECU DTC
ECU which received the request message counts DTC in the state of DTCStatusMask required by the request
message. ECU should reply the positive response included reportType, DTC Status which ECU supports
(DTCStatusAvailabilityMask), DTCFormatIdentifier and number of DTC counted previously.
Table 13.2 Service $19 (DTC )
Service $19 Positive response message definition (number of DTC)
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $19 SID M 59
Service $19 Positive response SID
#2 reportType = [ reportNumberOfDTCByStatusMask ] M 01
#3 DTCStatusAvailabilityMask M 00-FF
#4 DTCFormatIdentifier = [ ISO15031-6DTCFormat ] M 00
#5 DTCCount[] = [ DTCCountHighByte M 00-FF
#6 DTCCountLowByte ] M 00-FF</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
DTC Status Mask DTC ECU
ECU DTC (confirmedDTC pendingDTC)
DTC DTC
This function requires of ECU a DTC of reports which match DTC Status Mask specified by offboard tester. For
example, an off-board tester uses for the report of DTC (confirmedDTC or pendingDTC) currently stored in ECU. And,
it is used for the report of DTC by which diagnosis on board is not performed, or DTC which is making the warning light
turn on etc.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_3_1_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 13.3 DTC Service $19 DTC Service $19
1 SID 1 sub-function (1 suppressPosRspMsgIndicationBit
suppressPosRspMsgIndicationBit bit 0-6 reportDTCByStatusMask
Table 13.3 shows Service $19 request message format to request DTC. which consists of 1 byte of SID and 1 byte of
sub-function, 1 byte of DTCStatusMask. Bit 7 of sub-function is suppressPosRspMsgIndicationBit and bit 0-6 is
reportDTCByStatusMask.
suppressPosRspMsgIndicationBit 2.1.2
Detail of suppressPosRspMsgIndicationBit should refer to section 2.1.2
ECU DTCStatusMask DTC ECU
The offboard tester requests ECU to send DTC indicated by DTCStatusMask.
Table 13.3 Service $19 (DTC )
Service $19 Request message definition (reply DTC)
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $19 SID M 19
Service $19 Request SID
#2 sub-function = suppressPosRspMsgIndicationBit + M 02 or 82
reportDTCByStatusMask ]
#3 DTCStatusMask M 00-FF</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_3_1_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 13.4 DTC Service $19 DTC Service
$19 1 SID 1 reportType 1
DTCStatusAvailabilityMask DTCAndStatusRecord reportType
reportDTCByStatusMask
Table 13.4 shows Service $19 positive response message format to request DTC. The message contains 1 byte of
positive response message SID, 1 byte of reportType, 1 byte of DTCStatusAvailabilityMask, several byte of
DTCAndStatusRecord. reportType should be put received reportDTCByStatusMask.
ECU reportType ECU
DTC Status (DTCStatusAvailabilityMask) DTCStatusMask ECU
DTC DTC Status DTCAndStatusRecord
When a request message is received, ECU checks condition and result diagnostic, and includes in
DTCAndStatusRecord all the DTC(s) and DTC Status which are stored in ECU in the condition of according in
DTCStatusMask required by the request message. ECU replies reportType, DTC Status which ECU is supporting
(DTCStatusAvailabilityMask), and previous DTCAndStatusRecord by a positive response message.
Table 13.4 Service $19 (DTC )
Service $19 Positive response message definition (reply DTC)
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $19 SID M 59
Service $19 Positive response SID
#2 reportType = [ reportDTCByStatusMask ] M 02
#3 DTCStatusAvailabilityMask M 00-FF
#4 DTCAndStatusRecord[ ] = [ DTCHighByte#1 C1 00-FF
#5 DTCMiddleByte#1 C1 00-FF
#6 DTCLowByte#1 C1 00-FF
#7 statusOfDTC#1 C1 00-FF
#8 DTCHighByte#2 C2 00-FF
#9 DTCMiddleByte#2 C2 00-FF
#10 DTCLowByte#2 C2 00-FF
#11 statusOfDTC#2 C2 00-FF
: : : :
#n-3 DTCHighByte#m C2 00-FF
#n-2 DTCMiddleByte#m C2 00-FF
#n-1 DTCLowByte#m C2 00-FF
#n statusOfDTC#m ] C2 00-FF
C1: ECU DTCStatusMask DTC
When ECU detected set of DTC information fit for the conditions specified by
DTCStatusMask, ECU should send.
C2: ECU DTCStatusMask DTC 2
When ECU detected more than one set of DTC information fit for the conditions specified by
DTCStatusMask, ECU should send.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
ECU DTC DTC Status ECU
This function requires of ECU the output of DTC of all the on-board diagnosis .</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_4_1_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 13.5 DTC Service $19
DTC Service $19 1 SID 1 sub-function (1
suppressPosRspMsgIndicationBit 7 reportSupportedDTC ) sub-function bit 7
suppressPosRspMsgIndicationBit bit 0-6 reportSupportedDTC
Table 13.5 shows Service $19 request message format to request all supported DTC. which consists of 1 byte of SID
and 1 byte of sub-function. Bit 7 of sub-function is suppressPosRspMsgIndicationBit and bit 0 - 6 is
reportSupportedDTC.
suppressPosRspMsgIndicationBit 2.1.2
Detail of suppressPosRspMsgIndicationBit should refer to section 2.1.2
ECU DTC DTC Status ECU
The off board tester requests ECU to send all supported DTC and DTC Status.
Table 13.5 Service $19 ( DTC )
Service $19 Request message definition (supported DTC)
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $19 SID M 19
Service $19 Request SID
#2 sub-function = suppressPosRspMsgIndicationBit + M 0A or 8A
reportSupportedDTC ]</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_4_1_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 13.6 DTC Service $19
DTC Service $19 1
SID 1 reportType 1 DTCStatusAvailabilityMask DTCAndStatusRecord
reportType reportSupportedDTC
Table 13.6 shows Service $19 positive response message format to request all supported DTC. The message
contains 1 byte of positive response message SID , 1 byte of reportType, 1 byte of DTCStatusAvailabilityMask, plural
bytes of DTCAndStatusRecord. reportType should be put received reportSupportedDTC.
ECU reportType ECU
DTC Status (DTCStatusAvailabilityMask) ECU DTC DTC Status
DTCAndStatusRecord
ECU should check self diagnosis results and response message with reportType, DTCStatus, all supported DTC and
DTCStatus into DTCAndStatusRecord.
Table 13.6 Service $19 ( DTC
)
Service $19 Positive response message definition (supported DTC)
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $19 SID M 59
Service $19 Positive response SID
#2 reportType = [ reportSupportedDTC ] M 0A
#3 DTCStatusAvailabilityMask M 00-FF
#4 DTCAndStatusRecord[ ] = [ DTCHighByte#1 M 00-FF
#5 DTCMiddleByte#1 M 00-FF
#6 DTCLowByte#1 M 00-FF
#7 statusOfDTC#1 M 00-FF
#8 DTCHighByte#2 C 00-FF
#9 DTCMiddleByte#2 C 00-FF
#10 DTCLowByte#2 C 00-FF
#11 statusOfDTC#2 C 00-FF
: : : :
#n-3 DTCHighByte#m C 00-FF
#n-2 DTCMiddleByte#m C 00-FF
#n-1 DTCLowByte#m C 00-FF
#n statusOfDTC#m ] C 00-FF
C: ECU
C: The length of a response message changes depending on the diagnostic function on
board which ECU supports.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_4_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service$ 19 2.2.2
Negative response message should follow section 2.2.2.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_5</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $19
The section defines parameter for Service $19 message.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_5_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
sub-function bit 0-6 Service $19 7 ECU
sub-function bit 7 suppressPosRspMsgIndicationBit
sub-function bit 0-6 reportType
sub-function 0 - 6 bits are 7 bits information integrated in Service $19 request message. It shows types of failure
information. bit 7 of sub-function is suppressPosRspMsgIndicationBit. Into positive response message the received
sub-function bit 0- 6 should be put.
ECU sub-function bit 0-6
Sub-function is defined by the system.
Table 13.7 sub-function bit 0-6 (reportType)
Table 13.7 shows sub-function bit 0-6 (reportType).
Table 13.7 Service $19 sub-function bit 0-6 (reportType) Definition of Service $19 reportType
sub-function Description
bit 0-6 (Hex)
00 (ISO 14229-1 )
not used (reserved by ISO 14229-1)
reportNumberOfDTCByStatusMask
01 DTCStatusMask DTC
Request number of DTC, which fits to DTCStatusMask.
reportDTCByStatusMask
02 DTCStatusMask DTC DTC Status
Request DTC and DTCStatus, which fits to DTCStatusMask.
03 - 09 (ISO 14229-1 )
not used (reserved by ISO 14229-1)
reportSupportedDTC
0A ECU DTC DTC Status
Request all DTC and DTCStatus, supported by ECU.
0B - 15 (ISO 14229-1 )
not used (reserved by ISO 14229-1)
16 - 7F (ISO 14229-1 )
not used (reserved by ISO 14229-1)</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_5_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
DTC Status Service $19 1
DTC Service $19 DTCStatusMask
DTCStatusAvailabilityMask statusOfDTC
DTC Status is 1 byte of information included in Service $19 request message and positive response message, and
shows the diagnostic situation and execution result corresponding to DTC. DTC Status is used as DTCStatusMask for
request message and as DTCStatusAvailabilityMask, statusOfDTC for positive response message. In addition, name
changes with differences in the meaning of the parameter.
ECU DTC Status (DTCStatusMask, DTCStatusAvailabilityMask, statusOfDTC)
DTCStatusMask, DTCStatusAvailabilityMask, and statusOfDTC are defined by the system.
Table 13.8 DTC Status
Table 13.8 shows DTCStatus definition.
Table 13.8 DTC Status Definition of DTCStatus
Bit Pos. Description
testFailed
bit 0 ( )
(Not used)
testFailedThisMonitoringCycle
"1"
"1" 1)
2) "0" (
bit 1 "1" )
Into this driving cycle, when malfunctions are detected by on-board diagnostic, "1" is set. Once this
information is set to "1", it will not be set to "0" until the following driving cycle is started or
initialization of diagnostic information is performed. (Thus, even if a normal judging is performed
after detecting malfunctions in the same driving cycle, this value is held with "1".)
pendingDTC
"1" "1"
3) "0"
bit 2 ( )
"1" is outputted when malfunction is detected by on board diagnostic. Once this information is set
to "1", it becomes normal by on board-diagnostic, or it will not be set to "0" until initialization of
diagnostic information is performed. (Thus, the diagnostic result executed last is outputted after
initialization of diagnostic information.)
confirmedDTC
"1" "1"
3) (
40 ) "0" ( 1
bit 3 "1" )
"1" is set when malfunctions are decided by on-board diagnostic. Once this information is set to "1",
don't make it "0" to initialization condition formation of the diagnostic information which initialization
of diagnostic information is performed or is specified by each system. (Thus, if malfunctions are
detected even once, this value will be held with "1" until initialization of diagnostic information is
performed or the initialization conditions of the diagnostic information specified by each system are
satisfied) .
testNotCompletedSinceLastClear
bit 4 ( )
(Not used)
testFailedSinceLastClear
bit 5 ( )
(Not used)
testNotCompletedThisMonitoringCycle
"1"
bit 6 ( ) "0"
1) 2) "1"
When self diagnostic is not yet completed for this DTC,"1" is set. Once self diagnostic is
completed,"0" is set. And this should be kept until next IG-on 1) or DTC clear 2).
warningIndicatorRequested
bit 7 DTC "1"
When corresponding DTC requests warning lamp on,"1" should be set. Warning lamp notifies the
malfunction of the system to a user.
Table 13.8 DTC Status Definition of DTCStatus
Bit Pos. Description
1) Service $11 " OFF"
" " ECU
The recovery from cut off of battery power supply or the ECU reset by a Service $11 request message are
included.
2) Service $14
Service $14 DTC clear.
3) Service $14
Service $14 DTC clear.
Service $11 " " ECU
How to cope with battery cut, Service $11 request should be defined by the system.
- DTC Status ON (
) OBD II
Caution - Driving cycle defined by DTCStatus is time when IG is on. This is different from OBD II definition.
- OFF Table 13.8
HDC_CAN OFF OFF
DTC 'testFailedThisMonitoringCycle' "0 (False)"
'testNotCompletedThisMonitoringCycle' "1 (True)"
Caution - On-board Diagnosis at IG-OFF should follow table 13-8, but HDC_CAN doesn't allow CAN
communication during IG-OFF. As a result, testFailedThisMonitoringCycle is "0" and
testNotCompletedThisMonitoringCycle is "1" (true).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_5_2_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
DTCStatusMask Service $19 sub-function = $01 ( reportNumberOfDTCByStatusMask ) sub-function =
$02 ( reportDTCByStatusMask ) 1 ECU DTC
DTC Status ECU DTCStatusMask DTC
(DTC DTC DTC Status) DTCStatusMask DTC Status (Table
13.8 )
DTCStatusMask is 1 byte of information included in the request message of sub-function =
$01( reportNumberOfDTCByStatusMask ) of Service $19, and sub-function = $02 ( reportDTCByStatusMask ).
ECU extracts DTC which is the situation of on board diagnostic specified by DTCStatusMask, and returns the required
information (DTC number or DTC and DTC Status). DTCStatusMask definition is the same as DTCStatus shown in
Table 13.8.
DTCStatusMask bit2 (pendingDTC) '1' sub-function = $01
(reportNumberOfDTCByStatusMask ) Service $19 ECU pendingDTC
For example, the Service $19 request message of sub-function = $01(reportNumberOfDTCByStatusMask) which
specified '1' as bit2 (pendingDTC) of DTCStatusMask requires the pendingDTC number stored in ECU.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_5_2_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
DTCStatusAvailabilityMask Service $19 sub-function = $01 ( reportNumberOfDTCByStatusMask ) sub-function
= $02 ( reportDTCByStatusMask ) sub-function = $0A ( reportSupportedDTC )
1 ECU DTC Status DTCStatusAvailabilityMask DTC
Status (Table 13.8 )
DTCStatusAvailabilityMask is 1 byte of information included in the positive response message of sub-function =
$01(reportNumberOfDTCByStatusMask) of Service $19, sub-function = $02(reportDTCByStatusMask) of Service $19
and sub-function = $0A. of Service $19(reportSupportedDTC )
DTCStatusAvailabilityMask shows DTC Status which ECU supports. The definition of DTCStatusAvailabilityMask is the
same as DTC Status. (Table 13.8 reference.)</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_5_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
DTCAndStatusRecord Service $19 sub-function = $02 ( reportDTCByStatusMask ) sub-function = $0A
( reportSupportedDTC ) DTC DTC
DTC Status
DTCAndStatusRecord is the information included in the positive response message of sub-function =
$02(reportDTCByStatusMask) of Service $19, and sub-function = $0A (reportSupportedDTC).
DTC (DTCRecord 13.5.3.1 ) DTC DTC Status (statusOfDTC 13.5.3.2
) 1
DTCAndStatusRecord is constituted considering DTC and DTC Status corresponding to it as 1 set. Refer to 13.5.3.1
for DTC (DTCRecord). Refer to 13.5.3.2 for DTC Status (statusOfDTC) corresponding to DTC.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_5_3_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
DTCRecord 3 DTC
DTCRecord shows DTC with 3 bytes of information.
DTCRecord 3 DTC
The information structure of 3 byte DTC included in DTCRecord is as follows.
DTCHighByte / DTCMiddleByte .........ISO15031-6 / SAE J2012 2 base DTC
............................................................2 bytes of baseDTC defined by ISO15031-6 / SAE J2012 standard
DTCLowByte ......................................ISO15031-6 / SAE J2012 1 Failure Type Byte(FTB)
............................................................1 byte of Failure Type Byte (FTB) defined by ISO15031-6 / SAE J2012
standard
DTCRecord DTCHighByte / DTCMiddleByte / DTCLowByte
System defines DTCHighByte /DTCMiddleByte/DTCLowByte of DTCRecord.
Fig. 13-1 Engine ( ) P0143-00 DTCRecord
The example of DTCRecord in case Engine system (gasoline engine) replies P0143-00 to Fig.13.1 is shown.
DTCHighByte DTCMiddleByte DTCLowByte
MSB LSB MSB LSB MSB LSB</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_5_3_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
statusOfDTC ECU DTCRecord DTC Status statusOfDTC
DTC Status (Table 13.8 )
statusOfDTC is DTCStatus replying to DTCRecord. (Table 13.8)
ECU statusOfDTC "0"
Not supported statusOfDTC bits must be always "0".
Service $19 sub-function = $02 ( reportDTCByStatusMask ) sub-function = $0A ( reportSupportedDTC )
statusOfDTC
Service $19 positive response message statusOfDTC is as follows:
DTCRecord DTC statusOfDTC
bit 1 `1'
When DTCRecord DTC detects failure during current IG cycle, statusOfDTC bit 1 must be set to "1".
DTCRecord DTC pendingDTC statusOfDTC bit 2 `1'
When DTCRecord DTC is kept as pendingDTC, statusOfDTC bit 2 must be set to "1".
DTCRecord DTC confirmedDTC statusOfDTC bit 3 '1'
When DTCRecord DTC is kept as confirmedDTC, statusOfDTC bit 3 must be set to "1".
DTCRecord DTC statusOfDTC bit 6
`1'
When DTCRecord DTC check is NOT finished during current IG cycle, statusOfDTC bit 6 must be set to "1".
DTCRecord DTC statusOfDTC bit 7 `1'
When DTCRecord DTC turns on warning lamp, statusOfDTC bit 7 must be set to "1".</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_5_4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
DTCFormatIdentifier Service $19 sub-function = $01 ( reportNumberOfDTCByStatusMask )
1 ECU DTC
DTCFormatIdentifier is 1 byte message in positive response message for sub function $01
(reportNumberOfDTCByStatusMask). It is 1 byte information showing the format of DTC which ECU is supporting.
HDC_CAN ISO15031-6 DTC $00
In HDC_CAN, $00 which shows the DTC format of ISO15031-6 standard is used.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_5_5</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
DTCCount Service $19 sub-function = $01 ( reportNumberOfDTCByStatusMask )
2 DTCStatusMask DTC
DTCCount is 2 bytes message in positive response message for sub function $01 (reportNumberOfDTCByStatusMask).
DTCCount provides a count of the number of DTCs that match the DTCStatusMask defined in the off board tester's
request.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_5_6</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 13.9 Service $19 NRC 13.6
Table 13.9 shows Service $19 NRC definition. Negative response should be refer to 13.6.
Table 13.9 Service $19
Service $19 Negative response code definition
NRC (Hex) Description
subFunctionNotSupported (SFNS)
12 sub-function
Requested sub-function is not supported..
incorrectMessageLengthOrInvalidFormat (IMLOIF)
13
Received message length or message structure doesn't suit Spec. .
requestCorrectlyReceived-ResponsePending (RCRRP)
( NRC
78 )
Due to execution of requested task it is not possible to respond positive response or negative
response with appropriate NRC. Extension of time to reply for response message is requested.
TS-DCC01
Detail should refer to TS-DCC01 .
serviceNotSupportedInActiveSession (SNSIAS)
7F DiagnosticSession Service $19
Current diagnostic Session doesn't support Service $19.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_6</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $19 ECU
Reply from ECU should follow this description.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_6_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
(1) DiagnosticSession
DiagnosticSession analysis
a. ECU DiagnosticSession programmingSession ECU NRC = $7F (SNSIAS)
13.6.3
When diagnosticSession is programmingSession, ECU should prepare negative response message with
NRC = $7F (SNSIAS) and execute reply response message specified at section 13.6.3.
(2) ( 23)
Check length of request message (check longer than minimum length 23))
a. 2 ECU NRC = $13 (IMLOIF)
13.6.3
When received request message is shorter than 2bytes, ECU should prepare negative response message
with NRC = $13 (IMLOIF) and execute reply response message specified at section 13.6.3.
Prior to sub-function, check if enough length of request message is received or not.
(3) sub-function (bit 0-6)
sub-function (bit 0-6) analysis
a. sub-function (bit 0-6) ECU NRC = $12
(SFNS) 13.6.3
When sub-function (bit 0-6) in received request message is not supported, ECU should prepare negative
response message with NRC = $12 (SFNS) and execute reply response message specified at section
13.6.3.
(4)
Check length of request message
a. sub-function (bit 0-6) ECU NRC
= $13 (IMLOIF) 13.6.3
When length of requested message doesn't match with calculated length from sub-function (bit 0 - 6), ECU
should prepare negative response message with NRC = $13 (IMLOIF) and execute reply response message
specified at section 13.6.3.
(5) (1) (4) ReadDTCInformation service
ECU 13.6.2
sub-function (bit 0-6) 13.6.3
When check result doesn't match the above 1) to 4), ECU should judge requested Service is executable, ECU
should perform task specified in 13.6.2., ECU should prepare positive message and execute reply response
message defined in 13.6.3.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_6_1_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
ECU reportType reportNumberOfDTCByStatusMask DTCAvailabilityMask
ECU DTC Status DTCFormatIdentifier $00 DTCCount DTCStatusMask
DTC Status DTC
ECU should prepare positive message with reportType = reportNumberOfDTCByStatusMask, DTCAvailabilityMask is
DTC Status supported by ECU, DTCFormatIdentifier is $00, DTCCount is taken as the number of DTC in the
DTCStatus specified by DTCStatusMask.
DTCStatusMask 1 DTC
DTCStatusMask ECU DTC Status `1' ECU
( "DTCStatusMask" AND "DTCAvailabilityMask" AND "statusOfDTC" ) 0 DTC
DTCCount
When DTCMask specifies more than 1 bit, if at least one bit fits to stored DTC, this should be included in DTCCount.
Even if '1' is set to DTCStatus which ECU does not support to DTCStatusMask at this time, ECU ignores it. The
number of DTC(s) whose ("DTCStatusMask" AND "DTCAvailabilityMask" AND "statusOfDTC") is not 0 is counted and it
is included as DTCCount.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_6_1_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
ECU reportType reportDTCByStatusMask DTCAvailabilityMask ECU
DTC Status DTCAndStatusRecord DTCStatusMask DTC Status DTC
DTC statusOfDTC
ECU should prepare positive message with reportType = reportOfDTCByStatusMask, DTCAvailabilityMask is DTC
Status supported by ECU, and DTCAndStatusRecord = DTC match with DTCStatus specified by DTCStatusMask and
its statusOfDTC of DTC.
DTCStatusMask DTC Status DTC Data Byte #1 #3
(DTCAndStatusRecord )
When there is no DTC match with DTCStatus specified by DTCStatusMask, ECU should prepare positive response
message constituted from Data Byte #1 to #3. (ECU should prepare positive response message without
DTCAndStatusRecord.)</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_6_1_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
ECU reportType reportSupportedDTC DTCAvailabilityMask ECU
DTC Status DTCAndStatusRecord DTC DTC statusOfDTC
ECU should prepare positive message with reportType = reportSupportedDTC, DTCAvailabilityMask is DTC Status
supported by ECU, and DTCAndStatusRecord = all of supportedDTC and its statusOfDTC of DTC.
- Service $19 sub-function = $0A DTC
DTC
ECU DTC
Caution - Service $19 sub-function ($0A) should not include DTC, which is not supported by the vehicle. This
means message has to be reconstructed depending on vehicle application.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_6_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $19
Service $19 doesn't request task except positive response message.
13.6.3 Reply response message
3
( or ) suppressPosRspMsgIndicationBit
As described in section 3, not only by request message analysis results but also addressing type (physical or function
address), or suppressPosRspMsgIndicationBit have influence on response message.
Table 13.10 13.6.1
Table 13.10 shows response message definition.
(P2CAN) NRC = $78 (RCRRP)
When more time is needed to prepare information and it is not possible to respond positive response message within
P2CAN, ECU can request extension of positive response message by sending negative response message with NRC =
$78 (RCRRP).
P2CAN NRC = $78 (RCRRP) TS-DCC01
Detail of negative response message of P2CAN, negative response message with NRC = $78 (RCRRP) should refer to
TS-DCC01 .
Table 13.10 Service $19
Service $19 Reply to request message
Request message check result suppressPosRs
pMsgIndication Response message
No 1) Description addressing Bit
type
(2)a Physical 0 (False) (NRC $13)
(4)a Wrong message length 1 (True) Negative response
Function
sub-function (bit 0-6) 0 (False) (NRC $12)
(3)a Physical 1 (True) Negative response
Requested sub-function (bit 0-6) is 0 (False)
not supported Function 1 (True) No response
DiagnosticSession
(1)a Service $19 Physical 0 (False) (NRC $7F)
Current Diagnostic Session doesn't 1 (True) Negative response
support Service $19. Function
ReadDTCInformation 0 (False) Positive response
(5) service Physical
Requested ReadDTCInformation 1 (True)
service executable Function No response
1) 13.6.1 No.
No. is corresponding to No. in section 13.6.1.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_7</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service$19 DTC
The example of read-out of "DTC and its related information" which uses Service$19 in order to assist an
understanding of a regulation matter with this section is shown.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_7_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
-PendingDTC(s)
pendingDTC confirmedDTC (DTCStatusAvailabilityMask = $0C = 0000 1100 B ) Engine (
) ECU (DTC) Table 13.11
Assumption
Engine (gasoline engine) ECU supports pendingDTC and confirmedDTC (DTCStatusAvailabilityMask = $0C = 0000
1100 B). The on-board diagnostic item (DTC) which the ECU supports to Table 13.11 is shown, and the diagnostic
situation is also shown.
Table 13.11 1 : ECU DTC
Example 1:The diagnostic condition of ECU
DTC statusOfDTC Description
P0253-00 $00 (0000 0000 B) DTC
No DTC is set
P0301-00 $08 (0000 1000 B) confirmedDTC
confirmedDTC is set.
P0420-00 $04 (0000 0100 B) pendingDTC
pendingDTC is set.
P0532-00 $0C (0000 1100 B) pendingDTC confirmedDTC
pendingDTC and confirmedDTC are set.
Table 13.12 DTCStatusMask = $04 Service$19
pendingDTC DTC
Off-board tester reads the DTC number of pendingDTC(s) using the Service$19 request message of DTCStatusMask =
$04 shown in Table 13.12.
Table 13.12 1 : pendingDTC
Example 1:The read-out request of the number of pendingDTC(s)
Data Byte Parameter Hex
Hex value
#1 Service $19 SID 19
Service $19 Request SID
#2 sub-function = suppressPosRspMsgIndicationBit + 01
reportNumberOfDTCByStatusMask ]
#3 DTCStatusMask 04
ECU Table 13.13 reportType = reportNumberOfDTCByStatusMask DTCStatusAvailabilityMask =
$0C DTCFormatIdentifier = $00 DTCCount pendingDTC
ECU replies positive response message that included reportType=reportNumberOfDTCByStatusMask,
DTCStatusAvailabilityMask=$0C, DTCFormatIdentifier=$00, and the number of all the pendingDTC(s) currently held to
DTCCount.
ECU pendingDTC 2 (P0420-00 P0532-00) DTCCount = 2
DTCCount=2 is returned because ECU holds two pendingDTCs (P0420-00 and P0532-00) in the case of this example.
Table 13.13 1 : pendingDTC
Example 1:Return of the number of pendingDTC(s)
Data Byte Parameter Hex
Hex value
#1 Service $19 SID 59
Service $19 Positive response SID
#2 reportType = reportNumberOfDTCByStatusMask 01
#3 DTCStatusAvailabilityMask 0C
#4 DTCFormatIdentifier = ISO15031-6DTCFormat 00
#5 DTCCount[ DTCCountHighByte ] 00
#6 DTCCount[ DTCCountLowByte ] 02</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_7_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
DTC Number of -PendingDTC(s) and confirmedDTC(s)
pendingDTC confirmedDTC (DTCStatusAvailabilityMask = $0C = 0000 1100 B ) Engine (
) ECU (DTC) Table 13.14
Assumption
Engine (gasoline engine) ECU supports pendingDTC and confirmedDTC (DTCStatusAvailabilityMask = $0C = 0000
1100 B). The on-board diagnostic item (DTC) which the ECU supports to Table 13.14 is shown, and the diagnostic
situation is also shown.
Table 13.14 2 : ECU DTC
Example 2:The diagnostic condition of ECU
DTC statusOfDTC Description
P0253-00 $00 (0000 0000 B) DTC
No DTC is set
P0301-00 $08 (0000 1000 B) confirmedDTC
confirmedDTC is set.
P0420-00 $04 (0000 0100 B) pendingDTC
pendingDTC is set.
P0532-00 $0C (0000 1100 B) pendingDTC confirmedDTC
pendingDTC and confirmedDTC are set.
Table 13.15 DTCStatusMask = $0C Service $19
pendingDTC confirmedDTC DTC
Off-board tester reads the number of DTC of pendingDTC(s) and confirmedDTC(s) using the Service$19 request
message of DTCStatusMask = $04 shown in Table 13.15.
Table 13.15 2 : pendingDTC confirmedDTC
Example 2:The read-out request of the number of pendingDTC(s) and
confirmedDTC(s)
Data Byte Parameter Hex
Hex value
#1 Service $19 SID 19
Service $19 Request SID
#2 sub-function = suppressPosRspMsgIndicationBit + 01
reportNumberOfDTCByStatusMask ]
#3 DTCStatusMask 0C
ECU Table 13.16 reportType = reportNumberOfDTCByStatusMask DTCStatusAvailabilityMask =
$0C DTCFormatIdentifier = $00 DTCCount pendingDTC confirmedDTC
ECU replies positive response message that included reportType=reportNumberOfDTCByStatusMask,
DTCStatusAvailabilityMask=$0C, DTCFormatIdentifier=$00, and the number of all the pendingDTC(s) or
confirmedDTC currently held to DTCCount.
ECU pendingDTC confirmedDTC DTC 3 (P0301 P0420 P0532)
DTCCount = 3
Because three DTC(s) (P0301 P0420 P0532) whose ECUs are pendingDTC or confirmedDTC in the case of this
example are held, DTCCount = 3 are replied.
- P0532 pendingDTC confirmedDTC DTC DTCCount '1'
Caution - P0532 holds pendingDTC and confirmedDTC, however this DTCCount of DTC is '1'.
Table 13.16 2 : pendingDTC confirmedDTC
Example 2:Return of the number of pendingDTC(s) and confirmedDTC(s)
Data Byte Parameter Hex
Hex value
#1 Service $19 SID 59
Service $19 Positive response SID
#2 reportType = reportNumberOfDTCByStatusMask 01
#3 DTCStatusAvailabilityMask 0C
#4 DTCFormatIdentifier = ISO15031-6DTCFormat 00
#5 DTCCount[ DTCCountHighByte ] 00
#6 DTCCount[ DTCCountLowByte ] 03</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_7_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
pendingDTC confirmedDTC (DTCStatusAvailabilityMask = $0C = 0000 1100 B ) Engine (
) ECU (DTC) Table 13.17
Assumption
Engine (gasoline engine) ECU supports pendingDTC and confirmedDTC (DTCStatusAvailabilityMask = $0C = 0000
1100 B). The on-board diagnostic item (DTC) which the ECU supports to Table 13.17 is shown, and the diagnostic
situation is also shown.
Table 13.17 3 : ECU DTC
Example 3:The diagnostic condition of ECU
DTC statusOfDTC Description
P0253-00 $00 (0000 0000 B) DTC
No DTC is set
P0301-00 $08 (0000 1000 B) confirmedDTC
confirmedDTC is set.
P0420-00 $04 (0000 0100 B) pendingDTC
pendingDTC is set.
P0532-00 $0C (0000 1100 B) pendingDTC confirmedDTC
pendingDTC and confirmedDTC are set.
Table 13.18 DTCStatusMask = $08 Service $19
confirmedDTC
Off-board tester reads confirmedDTC using the Service $19 request message of DTCStatusMask=$08 shown in Table
13.18.
Table 13.18 3 : confirmedDTC
Example 3: The read-out request of confirmedDTC(s)
Data Byte Parameter Hex
Hex value
#1 Service $19 SID 19
Service $19 Request SID
#2 sub-function = suppressPosRspMsgIndicationBit + 02
reportDTCByStatusMask ]
#3 DTCStatusMask 08
ECU Table 13.19 reportType = reportDTCByStatusMask DTCStatusAvailabilityMask = $0C
DTCAndStatusRecord confirmedDTC statusOfDTC
ECU replies the positive response message included reportType = reportDTCByStatusMask,
DTCStatusAvailabilityMask = $0C, and all the confirmedDTC(s) currently held to DTCAndStatusRecord and
statusOfDTC of those, as shown in Table 13.19.
ECU P0301-00 P0532-00
In the case of this example, ECU returns P0301-00 and P0532-00.
Table 13.19 3 : confirmedDTC
Example 3: Return of confirmedDTC
Data Byte Parameter Hex
Hex value
#1 Service $19 SID 59
Service $19 Positive response SID
#2 reportType = reportDTCByStatusMask 02
#3 DTCStatusAvailabilityMask 0C
#4 DTCAndStatusRecord#1 [ DTCHighByte ] 05
#5 DTCAndStatusRecord#1 [ DTCMiddleByte ] 32
#6 DTCAndStatusRecord#1 [ DTCLowByte ] 00
#7 DTCAndStatusRecord#1 [ statusOfDTC ] 0C
#8 DTCAndStatusRecord#2 [ DTCHighByte ] 03
#9 DTCAndStatusRecord#2 [ DTCMiddleByte ] 01
#10 DTCAndStatusRecord#2 [ DTCLowByte ] 00
#11 DTCAndStatusRecord#2 [ statusOfDTC ] 08</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_7_4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
and confirmedDTC
pendingDTC confirmedDTC (DTCStatusAvailabilityMask = $0C = 0000 1100 B ) Engine (
) ECU (DTC) Table 13.20
Assumption
Engine (gasoline engine) ECU supports pendingDTC and confirmedDTC (DTCStatusAvailabilityMask = $0C = 0000
1100 B). The on-board diagnostic item (DTC) which the ECU supports to Table 13.20 is shown, and the diagnostic
situation is also shown.
Table 13.20 4 : ECU DTC
Example 4:The diagnostic condition of ECU
DTC statusOfDTC Description
P0253-00 $00 (0000 0000 B) DTC
No DTC is set
P0301-00 $08 (0000 1000 B) confirmedDTC
confirmedDTC is set.
P0420-00 $04 (0000 0100 B) pendingDTC
pendingDTC is set.
P0532-00 $0C (0000 1100 B) pendingDTC confirmedDTC
pendingDTC and confirmedDTC are set.
Table 13.21 DTCStatusMask = $FF Service $19 DTC
Off-board tester reads all the DTC(s) using the Service $19 request message of DTCStatusMask=$FF shown in Table
13.21.
Table 13.21 4 : pendingDTC confirmedDTC
Example 4: The read-out request of pendingDTC and confirmedDTC
Hex
Data Byte Parameter Hex
value
#1 Service $19 SID 19
Service $19 Request SID
#2 sub-function = suppressPosRspMsgIndicationBit + 02
reportDTCByStatusMask ]
#3 DTCStatusMask FF
DTCStatusMask = $FF (1111 1111 B) ECU DTC status (DTCStatusAvailabilityMask)
$0C = 0000 1100 B Table 13.22 reportType = reportDTCByStatusMask
DTCStatusAvailabilityMask = $0C DTCAndStatusRecord DTC (pendingDTC
confirmedDTC) statusOfDTC
Although it is required DTCStatusMask=$FF (1111 1111 B), DTCStatus (DTCStatusAvailabilityMask) which ECU
supports is $0C=0000 1100 B. Therefore, as shown in Table 13.22,the positive response message included reportType
= reportDTCByStatusMask, DTCStatusAvailabilityMask = $0C and "all the DTC(s) (pendingDTC and confirmedDTC)
currently held to DTCAndStatusRecord and statusOfDTC of those" is returned.
ECU P0301-00 P0420-00 P0532-00
In the case of this example, ECU returns P0301-00, P0420-00, and P0532-00.
Table 13.22 4 : pendingDTC confirmedDTC
Example 4: Return of pendingDTC and confirmedDTC
Data Byte Parameter Hex
Hex value
#1 Service $19 SID 59
Service $19 Positive response SID
#2 reportType = reportDTCByStatusMask 02
#3 DTCStatusAvailabilityMask 0C
#4 DTCAndStatusRecord#1 [ DTCHighByte ] 04
#5 DTCAndStatusRecord#1 [ DTCMiddleByte ] 20
#6 DTCAndStatusRecord#1 [ DTCLowByte ] 00
#7 DTCAndStatusRecord#1 [ statusOfDTC ] 04
#8 DTCAndStatusRecord#2 [ DTCHighByte ] 05
#9 DTCAndStatusRecord#2 [ DTCMiddleByte ] 32
#10 DTCAndStatusRecord#2 [ DTCLowByte ] 00
#11 DTCAndStatusRecord#2 [ statusOfDTC ] 0C
#12 DTCAndStatusRecord#3 [ DTCHighByte ] 03
#13 DTCAndStatusRecord#3 [ DTCMiddleByte ] 01
#14 DTCAndStatusRecord#3 [ DTCLowByte ] 00
#15 DTCAndStatusRecord#3 [ statusOfDTC ] 08</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_7_5</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Example 5: DTC read-out of un-completing the failure diagnosis on board in this driving cycle
testFailedThisMonitoringCycle pendingDTC confirmedDTC testNotCompletedThisMonitoringCycle
(DTCStatusAvailabilityMask = $4E = 0100 1110 B ) Engine ( ) ECU
(DTC) Table 13.23
Assumption
Engine (gasoline engine) ECU supports testFailedThisMonitoringCycle, pendingDTC, confirmedDTC and
testNotCompletedThisMonitoringCycle (DTCStatusAvailabilityMask = $4E = 0100 1110 B). The on-board diagnostic
item (DTC) which the ECU supports to Table 13.23 is shown, and the diagnostic situation is also shown.
Table 13.23 5 : ECU DTC
Example 5:The diagnostic condition of ECU
DTC statusOfDTC Description
P0253-00 $40 (0100 0000 B) The failure diagnosis in a driving cycle is un-completing now.
DTC
pendingDTC and confirmedDTC are not set.
Complete the failure diagnosis in this driving cycle, and
P0301-00 $08 (0000 1000 B) result is normal.
confirmedDTC
confirmedDTC is set.
P0420-00 $44 (0100 0100 B) The failure diagnosis in a driving cycle is un-completing now.
pendingDTC
pendingDTC is set.
Completing the failure diagnosis in this driving cycle, and
P0532-00 $0E (0000 1110 B) result detects failure.
pendingDTC confirmedDTC
pendingDTC and confirmedDTC are set.
Table 13.24 DTCStatusMask = $40 Service $19
DTC
Off-board tester reads DTC of on board diagnostic that is un-completing in this driving cycle using the Service $19
request message of DTCStatusMask=$40 shown in Table 13.24.
Table 13.24 5: DTC
Example 5: The read-out request of DTC of on board diagnostic that is
un-completing in this driving cycle
Hex
Data Byte Parameter Hex
value
#1 Service $19 SID 19
Service $19 Request SID
#2 sub-function = suppressPosRspMsgIndicationBit + 02
reportDTCByStatusMask ]
#3 DTCStatusMask 40
ECU Table 13.25 reportType = reportDTCByStatusMask DTCStatusAvailabilityMask = $4E
DTCAndStatusRecord DTC statusOfDTC
ECU replies the positive response message which included reportType=reportDTCByStatusMask,
DTCStatusAvailabilityMask=$4E, and DTCAndStatusRecord included DTC which diagnostic in this driving cycle has
not completed and statusOfDTC as shown in Table 13.25.
ECU P0253-00 P0420-00
In the case of this example, ECU replies P0253-00 and P0420-00.
Table 13.25 5: DTC
Example 5: Return of DTC of on board diagnostic that is un-completing in this
driving cycle
Data Byte Parameter Hex
Hex value
#1 Service $19 SID 59
Service $19 Positive response SID
#2 reportType = reportDTCByStatusMask 02
#3 DTCStatusAvailabilityMask 4E
#4 DTCAndStatusRecord#1 [ DTCHighByte ] 02
#5 DTCAndStatusRecord#1 [ DTCMiddleByte ] 53
#6 DTCAndStatusRecord#1 [ DTCLowByte ] 00
#7 DTCAndStatusRecord#1 [ statusOfDTC ] 40
#8 DTCAndStatusRecord#3 [ DTCHighByte ] 04
#9 DTCAndStatusRecord#3 [ DTCMiddleByte ] 20
#10 DTCAndStatusRecord#3 [ DTCLowByte ] 00
#11 DTCAndStatusRecord#3 [ statusOfDTC ] 44</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_7_6</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
DTC(s) and diagnostic conditions
pendingDTC confirmedDTC (DTCStatusAvailabilityMask = $0C = 0000 1100 B ) Engine (
) ECU (DTC) Table 13.26
Assumption
Engine (gasoline engine) ECU supports pendingDTC and confirmedDTC (DTCStatusAvailabilityMask = $0C = 0000
1100 B). The on-board diagnostic item (DTC) which the ECU supports to Table 13.26 is shown, and the diagnostic
situation is also shown.
Table 13.26 6 : ECU DTC
Example 6:The diagnostic condition of ECU
DTC statusOfDTC Description
P0253 $00 (0000 0000 B) DTC
No DTC is set
P0301 $08 (0000 1000 B) confirmedDTC
confirmedDTC is set.
P0420 $04 (0000 0100 B) pendingDTC
pendingDTC is set.
P0532 $0C (0000 1100 B) pendingDTC confirmedDTC
pendingDTC and confirmedDTC are set.
Table 13.27 Service $19 DTC
Off-board tester performs read-out of all supported DTC(s) and the diagnostic condition of those using the Service $19
request message shown in Table 13.27.
Table 13.27 6: DTC
Example 6: the read-out request of all supported DTC(s) and diagnostic conditions
Hex
Data Byte Parameter Hex
value
#1 Service $19 SID 19
Service $19 Request SID
#2 sub-function = suppressPosRspMsgIndicationBit + 0A
reportSupportedDTC ]
ECU Table 13.28 reportType = reportSupportedDTC DTCStatusAvailabilityMask = $0C
DTCAndStatusRecord DTC statusOfDTC
ECU replies positive response message included reportType = reportSupportedDTC, DTCStatusAvailabilityMask = $0C,
and all the DTC(s) supported to DTCAndStatusRecord and statusOfDTC of those, as shown in Table 13.28.
ECU P0253-00 P0301-00 P0420-00 P0532-00
In the case of this example, ECU returns P0253-00, P0301-00, P0420-00, and P0532-00.
Table 13.28 6: DTC
Example 6: Return of all supported DTC(s) and diagnostic conditions
Data Byte Parameter Hex
Hex value
#1 Service $19 SID 59
Service $19 Positive response SID
#2 reportType = reportSupportedDTC 0A
#3 DTCStatusAvailabilityMask 0C
#4 DTCAndStatusRecord#1 [ DTCHighByte ] 04
#5 DTCAndStatusRecord#1 [ DTCMiddleByte ] 20
#6 DTCAndStatusRecord#1 [ DTCLowByte ] 00
#7 DTCAndStatusRecord#1 [ statusOfDTC ] 04
#8 DTCAndStatusRecord#2 [ DTCHighByte ] 05
#9 DTCAndStatusRecord#2 [ DTCMiddleByte ] 32
#10 DTCAndStatusRecord#2 [ DTCLowByte ] 00
#11 DTCAndStatusRecord#2 [ statusOfDTC ] 0C
#12 DTCAndStatusRecord#3 [ DTCHighByte ] 03
#13 DTCAndStatusRecord#3 [ DTCMiddleByte ] 01
#14 DTCAndStatusRecord#3 [ DTCLowByte ] 00
#15 DTCAndStatusRecord#3 [ statusOfDTC ] 08
#16 DTCAndStatusRecord#4 [ DTCHighByte ] 02
#17 DTCAndStatusRecord#4 [ DTCMiddleByte ] 53
#18 DTCAndStatusRecord#4 [ DTCLowByte ] 00
#19 DTCAndStatusRecord#4 [ statusOfDTC ] 00</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-13_7_7</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
DTCStatusMask which ECU does not support
pendingDTC confirmedDTC (DTCStatusAvailabilityMask = $0C = 0000 1100 B ) Engine (
) ECU (DTC) Table 13.29
Assumption
Engine (gasoline engine) ECU supports pendingDTC and confirmedDTC (DTCStatusAvailabilityMask = $0C = 0000
1100 B). The on-board diagnostic item (DTC) which the ECU supports to Table 13.29 is shown, and the diagnostic
situation is also shown.
Table 13.29 7 : ECU DTC
Example 7:The diagnostic condition of ECU
DTC statusOfDTC Description
P0253-00 $00 (0000 0000 B) DTC
No DTC is set
P0301-00 $08 (0000 1000 B) confirmedDTC
confirmedDTC is set.
P0420-00 $04 (0000 0100 B) pendingDTC
pendingDTC is set.
P0532-00 $0C (0000 1100 B) pendingDTC confirmedDTC
pendingDTC and confirmedDTC are set.
Table 13.30 DTCStatusMask = $80 Service $19 DTC
Off-board tester reads the number of DTC of DTCStatusMask = $80 using the Service$19 request message of
DTCStatusMask = $04 shown in Table 13.30.
Table 13.30 7 : ECU DTCStatusMask DTC
Example 7: the read-out request of the number of DTC(s) by DTCStatusMask which
ECU does not support
Data Byte Parameter Hex
Hex value
#1 Service $19 SID 19
Service $19 Request SID
#2 sub-function = suppressPosRspMsgIndicationBit + 01
reportNumberOfDTCByStatusMask ]
#3 DTCStatusMask 80
DTCStatusMask = $80 (1000 0000 B) ECU DTC status
(DTCStatusAvailabilityMask) $0C = 0000 1100 B Table 13.31 reportType =
reportNumberOfDTCByStatusMask DTCStatusAvailabilityMask = $0C DTCCount = 0
Although it is DTCStatusMask=$80 (1000 0000B) required, DTCStatus (DTCStatusAvailabilityMask) which ECU
supports is $0C = 0000 1100B. Therefore, as shown in Table 13.31, the positive response message included
reportType=reportNumberOfDTCByStatusMask, DTCStatusAvailabilityMask=$0C and DTCCount=0 is replied.
- DTCStatusMask ECU DTCCount = 0
Caution - When ECU does not support all the required DTCStatusMask(s), the positive response message
included DTCCount=0 is replied.
Table 13.31 7 : ECU DTCStatusMask DTC
Example 7: return of the number of DTC(s) to DTCStatusMask which ECU does not
support
Data Byte Parameter Hex
Hex value
#1 Service $19 SID 59
Service $19 Positive response SID
#2 reportType = reportNumberOfDTCByStatusMask 01
#3 DTCStatusAvailabilityMask 0C
#4 DTCFormatIdentifier = ISO15031-6DTCFormat 00
#5 DTCCount[ DTCCountHighByte ] 00
#6 DTCCount[ DTCCountLowByte ] 00
Table 13.32 DTCStatusOfMask = $80 Service $19
DTC
Similarly, Off-board tester reads DTC using the Service $19 request message of DTCStatusOfMask=$80 shown in
Table 13.32.
Table 13.32 7 : ECU DTCStatusMask DTC
Example 7: the read-out request of DTC by DTCStatusMask which ECU does not
support
Data Byte Parameter Hex
Hex value
#1 Service $19 SID 19
Service $19 Request SID
#2 sub-function = suppressPosRspMsgIndicationBit + 02
reportDTCByStatusMask ]
#3 DTCStatusMask 80
DTCStatusMask = $80 (1000 0000 B) ECU DTC status
(DTCStatusAvailabilityMask) $0C = 0000 1100 B Table 13.33 reportType =
reportDTCByStatusMask DTCStatusAvailabilityMask = $0C (DTCAndStatusRecord )
Although it is DTCStatusMask=$80 (1000 0000B) required, DTCStatus (DTCStatusAvailabilityMask) which ECU
supports is $0C = 0000 1100B. Therefore, As shown in Table 13.33, the positive response message included
reportType=reportDTCByStatusMask and DTCStatusAvailabilityMask=$0C is replied.
- DTCStatusMask ECU DTCAndStatusRecord
Caution - When ECU does not support all the required DTCStatusMask(s), a response message without
DTCAndStatusRecord is replied.
Table 13.33 7 : ECU DTCStatusMask DTC
Example 7: Return of DTC to DTCStatusMask which ECU does not support
Data Byte Parameter Hex
Hex value
#1 Service $19 SID 59
Service $19 Positive response SID
Table 13.33 7 : ECU DTCStatusMask DTC
Example 7: Return of DTC to DTCStatusMask which ECU does not support
Data Byte Parameter Hex
Hex value
#2 reportType = reportDTCByStatusMask 02
#3 DTCStatusAvailabilityMask 0C</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x19 ReadDTCInformation service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-14_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x2F InputOutputControlByIdentifier service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-14_2_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 14.1 Service $2F Service $2F 1
SID 2 dataIdentifier 1 inputOutputControlParameter controlState
controlEnableMask
Table 14.1 shows Service $2F request message format. Which consists of 1 byte of SID and 2 bytes dataIdentifier and
1 byte of inputOutputControlParameter and several byte of controlState and several byte of controlEnableMask.
Message length is variable.
controlState inputOutputControlParameter = shortTermAdjustment ($03)
In addition, controlState is supported only inputOutputControlParameter = shortTermAdjustment ($03).
controlEnableMask inputOutputControlParameter = shortTermAdjustment ($03) controlEnableMask
dataIdentifier
In dataIdentifier to which controlEnableMask is assigned, controlEnableMask is supported only at the time of
inputOutputControlParameter = shortTermAdjustment ($03).
Table 14.1 Service $2F
Service $2F Request message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $2F SID M 2F
Service $2F Request SID
#2 dataIdentifier [ ] = [ byte 1 (MSB) M 00-FF
#3 byte 2 ] M 00-FF
#4 controlOptionRecord [ inputOutputControlParameter ] M 00-FF
#5 controlOptionRecord [ controlState#1 ] C1 00-FF
#(4+n) [ controlState#n ] C1 00-FF
#(5+n) controlEnableMaskRecord [ controlEnableMask#1 ] C2 00-FF
#(5+n+m) [ controlEnableMask#m ] C2 00-FF
C1: inputOutputControlParameter = shortTermAdjustment ($03)
C1 is supported only at the time of inputOutputControlParameter = shortTermAdjustment
($03).
C2: inputOutputControlParameter = shortTermAdjustment ($03) controlEnableMask
dataIdentifier
In dataIdentifier to which controlEnableMask is assigned, C2 is supported only at the time of
inputOutputControlParameter = shortTermAdjustment ($03).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x2F InputOutputControlByIdentifier service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-14_2_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 14.2 Service $2F Service $2F 1
SID 2 dataIdentifier 1 inputOutputControlParameter
dataIdentifier dataIdentifier
Table 14.2 shows Service $2F response message format. Which consists of 1 byte of SID and 2 bytes dataIdentifier
and 1 byte of inputOutputControlParameter. dataIdentifier which received by the request message is included in
dataIdentifier of response message.
ECU
ECU which received the request message returns a positive response message after execution of the processing,
when required forced operation processing can be executed.
Table 14.2 Service $2F
Service $2F Positive response message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $2F SID M 6F
Service $2F Positive response SID
#2 dataIdentifier [ ] = [ byte 1 (MSB) M 00-FF
#3 byte 2 ] M 00-FF
#4 controlOptionRecord [ inputOutputControlParameter ] M 00-FF</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x2F InputOutputControlByIdentifier service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-14_2_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
2.2.2
Negative response message should follow section 2.2.2.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x2F InputOutputControlByIdentifier service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-14_3_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
dataIdentifier Service $2F 2
dataIdentifier is 2 bytes of information included in a Service $2F request message, and shows the device and the
forced operation mode which forced operation is required.
dataIdentifier
And, in a positive response message, dataIdentifier and this value which were received by the request message are
included.
dataIdentifier ( DiagnosticSession )
dataIdentifier (value, forced operation to require, DiagnosticSession which permits execution, and vehicles operating
condition) is defined by system.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x2F InputOutputControlByIdentifier service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-14_3_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
inputOutputControlParameter Service $2F 1
inputOutputControlParameter is 1 byte of information included in a Service $2F request message, and shows a request
and stop of forced operation.
inputOutputControlParameter
And, in a positive response message, the same value of inputOutputControlPatameter which were received by the
request message are set.
Table 14.3
The definition is shown in Table 14.3.
Service $2F dataIdentifier inputOutputControlParameter returnControlToECU($00)
shortTermAdjustment($03)
In addition, returnControlToECU ($00) and shortTermAdjustment ($03) of inputOutputControlParameter are certainly
supported by all the dataIdentifiers used by Service $2F.
Table 14.3 Service $2F inputOutputControlParameter
The definition of Service $2F inputOutputControlParameter
inputOutput
ControlParameter Description
(HEX)
returnControlToECU
: Request message
When off-board tester requires the stop of forced operation, this value is included in
request message.
00 : Positive response message
ECU
returnControlToECU
Not executing forced operation as which ECU was required is shown. This value is
included and returned to a positive response message when returnControlToECU is
required from off-board tester.
01 - 02 (ISO 14229-1 )
not used (reserved by ISO 14229-1)
shortTermAdjustment
: Request message
When off-board tester requires execution of forced operation, this value is included in
request message.
03 : Positive response message
ECU
It is shown that ECU executes required forced operation. This value is included and
returned to a positive response message when forced operation required by the
off-board tester is executed.
04-FF (ISO 14229-1 )
not used (reserved by ISO 14229-1)</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x2F InputOutputControlByIdentifier service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-14_3_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
controlState Service $2F (
DUTY ON/OFF ) controlState dataIdentifier
controlState is the information included in a Service $2F request message, and specifies the volume of operation of the
forced operation to require. The unit and scaling of controlState are defined for every dataIdentifier.
controlState inputOutputControlParameter = shortTermAdjustment ($03)
In addition, controlState is supported only the request message of inputOutputControlParameter =
shortTermAdjustment ($03).
controlState ( )
Detail for controlState is defined by the system.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x2F InputOutputControlByIdentifier service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-14_3_4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
controlEnableMask Service $2F
ControlEnableMask dataIdentifier
controlEnableMask is the information included in a Service $2F request message, and is a parameter currently
prepared for future expansion. The contents of ControlEnableMask are defined for every dataIdentifier.
controlEnableMask inputOutputControlParameter = shortTermAdjustment ($03)
In addition, controlEnableMask is supported only the request message of inputOutputControlParameter =
shortTermAdjustment ($03).
controlEnableMask
Detail for controlEnableMask is defined by the system.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x2F InputOutputControlByIdentifier service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-14_3_5</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 14.4 Service $2F NRC 14.4
Table 14.4 shows Service $2F NRC definition. Negative response should be refer to 14.4.
Table 14.4 Service $2F Service $2F Negative response code definition
NRC (Hex) Description
incorrectMessageLengthOrInvalidFormat (IMLOIF)
13
Received message length or message structure doesn't suit Spec. .
conditionsNotCorrect (CNC)
22
Vehicle condition doesn't allow execution.
requestOutOfRange (ROOR)
(1) dataIdentifier
dataIdentifier is not supported.
31 (2) inputOutputControlParameter
inputOutputControlParameter is out of Spec.
(3) controlState
controlState is out of Spec.
(4) DiagnosticSession dataIdentifier
dataIdentifier is not supported in current diagnosticSession.
securityAccessDenied (SAD)
33 dataIdentifier
Security is not released.
serviceNotSupportedInActiveSession (SNSIAS)
7F DiagnosticSession Service $2F
Current diagnostic Session doesn't support Service $2F.
- Service 2F NRC = $78 (RCRRP)
Caution NRC=$78 (RCRRP) is not allowed in Service 2F.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x2F InputOutputControlByIdentifier service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-14_4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $2F ECU
Reply from ECU should follow this description.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x2F InputOutputControlByIdentifier service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-14_4_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
(1) DiagnosticSession
DiagnosticSession analysis
a. ECU DiagnosticSession defaultSession programmingSession ECU NRC = $7F
(SNSIAS) 14.4.3
When diagnosticSession is defaultSession or programmingSession, ECU should prepare negative response
message with NRC = $7 (SNSIAS) and execute reply response message specified at section 14.4.3.
(2) ( 24)
Check length of request message (check longer than minimum length 24))
a. 4 ECU NRC = $13 (IMLOIF)
14.4.3
When received request message is shorter than 4bytes, ECU should prepare negative response message
with NRC = $13 (IMLOIF) and execute reply response message specified at section 14.4.3.
(3) dataIdentifier
Check dataIdentifier
a. dataIdentifier ECU NRC = $31 (ROOR)
14.4.3
When dataIdentifier in received request message is not supported, ECU should prepare negative response
message with NRC = $31(ROOR) and execute reply response message specified at section 14.4.3.
(4) inputOutputControlParameter 25
Check inputOutputControlParameter35
a. inputOutputControlParameter $00 $03
ECU NRC = $31 (ROOR) 14.4.3
Prior to dataIdentifier and inputOutputControlParameter, check if enough length of request message is received or
not.
25 3.2 inputOutputControlParameter
Service $2F inputOutputControlParameter
inputOutputControlParameter
In the inspection routine of the general request message indicated in section 3.2, message length is inspected
before the check of inputOutputControlParameter value.
However, because message length is different with an inputOutputControlParameter value in the case of Service
$2F, an inputOutputControlParameter value is inspected before.
(5)
Check length of request message
a. inputOutputControlParameter $00 (returnControlToECU)
4 ECU NRC = $13 (IMLOIF)
14.4.3
When inputOutputControlParameter included in the request message is $00(returnControlToECU) and
length of request message is NOT 4bytes, ECU should prepare negative response message with NRC =
$13 (IMLOIF) and execute reply response message specified at section 14.4.3.
b. inputOutputControlParameter $03 (shortTermAdjustment)
dataIdentifier ECU NRC = $13 (IMLOIF)
14.4.3
When inputOutputControlParameter included in the request message is $03 (shortTermAdjustment) and
length of request message is different from the length assigned as dataIdentifier, ECU should prepare
negative response message with NRC = $13 (IMLOIF) and execute reply response message specified at
section 14.4.3.
(6) (1) (5) dataIdentifier
When message doesn't match the above (1) to (5), the following request messages are inspected for every
dataIdentifier.
(7) dataIdentifier DiagnosticSession (DiagnosticSession dataIdentifier
)
check of current DiagnosticSession by dataIdentifier (It implements if needed)
a. dataIdentifier DiagnosticSession
ECU NRC = $31 (ROOR) 14.4.3
When dataIdentifier included in the request message which received does not support by the current
DiagnosticSession, ECU should prepare negative response message with NRC = $31 (ROOR) and execute
reply response message specified at section 14.4.3.
(8) ( dataIdentifier )
The check of security release (It implements if needed)
a. dataIdentifier
( ) ECU NRC =
$33 (SAD) 14.4.3
It inspects, only when dataIdentifier included in the request message which received is protected by security.
When the security of the security type assigned as this dataIdentifier is not released, ECU should prepare
negative response message with NRC = $33 (SAD) and execute reply response message specified at
section14.4.3.
6 "Service $27 (SecurityAccess service)"
In addition, refer to "Service $27 (SecurityAccess service)" of a section 6 for the details of security access.
routineIdentifier
routineIdentifier protected with security is defined by system.
(9) ( dataIdentifier )
Vehicle condition check (It implements if needed)
a. inputOutputControlParameter shortTermAdjustment ($03)
ECU NRC=$22 (CNC)
14.4.3
ECU
When inputOutputControlParameter receives the request message of shortTermAdjustment ($03) and
required forced operation cannot execute according to vehicles condition, ECU should prepare negative
response message with NRC = $22 (CNC) and execute reply response message specified at section 14.4.3.
At this time, ECU does not execute required forced operation.
In addition, vehicles operating condition is defined by system.
(10) controlState ( )
check of controlState value (It implements if needed)
a. controlState dataIdentifier
ECU NRC = $31 (ROOR) 14.4.3
When controlState value of request message is not allowable value defined by dataIdentifier, ECU should
prepare negative response message with NRC = $31 (ROOR) and execute reply response message
specified at section 14.4.3.
controlState
In addition, range of controlState value is defined by system.
(11) controlEnableMask ( )
check of controlEnableMask value (It implements if needed)
a. controlEnableMask dataIdentifier
ECU NRC = $31 (ROOR) 14.4.3
When controlEnableMask of request message is not allowable value defined by dataIdentifier, ECU should
prepare negative response message with NRC = $31 (ROOR) and execute reply response message
specified at section 14.4.3.
controlEnableMask
In addition, checking controlEnableMask is defined by system.
(12) (7) (11) ECU InputOutputControlByIdentifier service
ECU 14.4.2
When message doesn't match the above (7) to (11), ECU should judge it is possible to execute
InputOutputControlByIdentifier service. ECU should execute task defined in 14.4.2. After that, return of the
following response messages is executed.
a. inputOutputControlParameter = returnControlToECU ($00) ECU inputOutputControlParameter
returnControlToECU ($00) 14.4.3
In the case of inputOutputControlParameter = returnControlToECU ($00),ECU makes transmitting
preparations of the positive response message which included returnControlToECU ($00) in
inputOutputControlParameter, and executes return processing of the response message specified to 14.4.3.
b. inputOutputControlParameter = shortTermAdjustment ($03) ECU inputOutputControlParameter
shortTermAdjustment ($03) 14.4.3
In the case of inputOutputControlParameter = shortTermAdjustment ($03),ECU makes transmitting
preparations of the positive response message which included shortTermAdjustment ($03) in
inputOutputControlParameter, and executes return processing of the response message specified to 14.4.3.
When inputOutputControlParameter included in the request message is except $00 or $03, ECU should
prepare negative response message with NRC = $31 (ROOR) and execute reply response message
specified at section 14.4.3.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x2F InputOutputControlByIdentifier service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-14_4_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
inputOutputControlParameter
When ECU judges InputOutputControlByIdentifier service is possible based on 14.4.1 criteria, ECU should execute
task written after.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x2F InputOutputControlByIdentifier service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-14_4_2_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
dataIdentifier
When forced operation specified by dataIdentifier is executing, the forced operation is stopped and it returns to normal
operation.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x2F InputOutputControlByIdentifier service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-14_4_2_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
dataIdentifier controlState
Forced operation processing specified by dataIdentifier and controlState is executed.
14.4.3 Reply response message
3
( or )
As described in section 3, not only by request message analysis results but also addressing type (physical or function
address) have influence on response message.
Table 14.5 14.4.1
Table 14.5 shows response message definition.
Table 14.5 Service $2F
Service $2F Reply to request message
Request message check result
No 1) addressing Response message
Description type
(2)a Physical (NRC $13)
(5)a Wrong message length Negative response
(5)b Function
dataIdentifier (NRC $31)
(3)a Physical Negative response
Requested dataIdentifier is not
supported Function No response
InputOutputControlParameter (NRC $31)
(4)a Physical Negative response
Incorrect
InputOutputControlParameter value. Function No response
DiagnosticSession
(1)a Service $2F Physical (NRC $7F)
Current Diagnostic Session doesn't Negative response
support Service $2F. Function
DiagnosticSession (NRC $31)
dataIdentifier Physical Negative response
(7)a Requested dataIdentifier is not
supported in current diagnostic Function No response
session
(8)a Physical (NRC $33)
Security not released Negative response
Function
(9)a Physical (NRC $22)
Vehicle condition doesn't allow Negative response
requested service to execute Function
(NRC $31)
(10)a controlState Physical Negative response
Incorrect controlState value.
Function No response
(NRC $31)
(11)a controlEnableMask Physical Negative response
Incorrect controlEnableMask value.
Function No response
InputOutputControlByIdentifier
(12)a service Physical
(12)b Requested Positive response
InputOutputControlByIdentifier Function
service executable
1) 14.4.1 No.
No. is corresponding to No. in section 14.4.1.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x2F InputOutputControlByIdentifier service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-14_5</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
14.4.2.2 ECU
1
ECU which performed forced control according to section 14.4.2.2should return to normal operation, when one of the
following conditions is satisfied. Thus, forced control is continued when all the following conditions are abortive.
(1) dataIdentifier inputOutputControlParameter = returnControlToECU Service $2F
When the Service $2F request message of inputOutputControlParameter = returnControlToECU to dataIdentifier
of the forced control under execution is received.
(2)
When it becomes impossible for the operating condition of vehicles to keep the execution condition of the forced
control under execution.
(3) Service$10 DiagnosticSession
When it changes by a Service$10 request message to diagnosticSession which cannot perform forced control
under execution.
(4) ECU DiagnosticSession defaultSession
DiagnosticSession transfers to defaultSession.
a. Service $10 defaultSession
By Service $10 request.
b. (S3Server) defaultSession
Session timer (S3Server) time out.
(5) OFF ECU
IG off.
(6)
battery cut.
(7) Service $11 " OFF" " "
ECU
ECU reset by Service $11.
When adding conditions other than the above to release of forced operation, it defines by a system.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x2F InputOutputControlByIdentifier service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-15_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $31 (RoutineControl service) ECU
Service $31 (RoutineControl service) is used to request to ECU to start, stop tasks, and report.
routineControlType routineIdentifier routineControlOption Service $31
ECU routineControlType
routineIdentifier routineControlOption
The offboard tester requests ECU using Service $31 request message, which has routineControlType, routineIdentifier,
and routineControlOption. Then ECU should perform tasks. ECU should replay positive or negative response message
in response message.
Service $31
( )
This Service can be used with security or under limited vehicle condition.
Service $31 DiagnosticSession
Service $31 available diagnosticSession and vehicle condition to enable this function should be defined by the system.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_2_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 15.1 Service $31 Service $31 1
SID sub-function (1 suppressPosRspMsgIndicationBit 7 routineControlType) 2
routineIdentifier routineControlOptionRecord sub-function bit 7
suppressPosRspMsgIndicationBit bit 0-6 routineControlType
Table 15.1 shows Service $31 request message format. which consists of SID and sub-function. Sub-function has 1 bit
of suppressPosRspMsgIndicationBit and 7bits of routineControlType, 2bytes of routineIdentifier, and
routineControlOptionRecord. Meaning variable length.
suppressPosRspMsgIndicationBit 2.1.2
Detail of suppressPosRspMsgIndicationBit should refer to section 2.1.2
Table 15.1 Service $31
Service $31 Request message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $31 SID M 31
Service $31 Request SID
#2 sub-function = suppressPosRspMsgIndicationBit + M 00-FF
routineControlType
#3 routineIdentifier [ ] = byte#1(MSB) M 00-FF
#4 byte#2 M 00-FF
#5 routineControlOptionRecord [ ] = routineControlOption #1 C 00-FF
: : : :
# (4+n) routineControlOption #n C 00-FF
C: routineIdentifier routineControlType
It is dependent on the value of routineIdentifier and routineControlType.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_2_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 15.2 Service $31 Service $31
1 SID 1 routineControlType 2 routineIdentifier
routineControlOptionRecord routineControlType routineIdentifier
routineControlType routineIdentifier
Table 15.2 shows Service $31 positive response message format. The message contains 1 byte of positive response
message SID and 1 byte of routineControlType, 2bytes of routineIdentifier, and routineControlOption.
routineControlType and routineIdentifier should be used received values.
ECU
After task execution, positive message should be sent.
Table 15.2 Service $31
Service $31 Positive response message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $31 SID M 71
Service $31 Positive response SID
#2 routineControlType M 00-7F
#3 routineIdentifier [ ] = byte#1(MSB) M 00-FF
#4 byte#2 M 00-FF
#5 routineStatusRecord [ ] = routineStatus #1 C 00-FF
: : : :
# (4+n) routineStatus #n C 00-FF
C: routineIdentifier
routineIdentifier depending.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_2_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
2.2.2
Negative response message should follow section 2.2.2.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-15_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $31
The section defines parameter for Service $31 message.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_3_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
routineControlType (sub-function bit 0-6) Service $31 7
routineControlType (0 - 6 bits of sub-function) is 7 bits information included in service $31 request message to request
to start, stop task or report results.
routineControlType
In positive message, ECU should use value from received message.
Table 15.3 routineControlType
Table 15.3 shows routineControlType/
routineControlType routineIdentifier
Table 15.3 Service $31 routineControlType
Service $31 routineControlType definition
routineControlType Description
(Hex)
00 (ISO 14229-1 )
not used (reserved by ISO 14229-1)
startRoutine
01 routineIdentifier
Execute task defined by routineIdentifier.
stopRoutine
02 routineIdentifier
Stop task defined by routineIdentifier.
requestRoutineResults
03 routineIdentifier ( )
Request results of task, which defined by routineIdentifier.
04-7F (ISO 14229-1 )
not used (reserved by ISO 14229-1)</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_3_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
routineIdentifier Service $31 2 ECU
routineIdentifier is 2 bytes information included in Service $31 request message to indicate request to ECU.
routineIdentifier
Each routineIdentifier defines:
ECU
Tasks to ECU
routineControlType
supported routineControlType
routineControlOptionRecord ( )
routineControlOptionRecord exists or not and contents (data length, contents)
routineStatusRecord ( )
routineControlOptionRecord should be included in positive response message
DiagnosticSession
DiagnosticSession which is allowed to perform.
Security protected or not. Which type of security.
Vehicle condition to allow operation.
routineIdentifier
In the positive response message received value as routineIdentifier should be used.
routineIdentifier
routineIdentifier detail should be defined by the system.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer has to configure the routines under Tresos Studio.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_3_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
routineControlOptionRecord Service $31 routineIdentifier
routineControlOptionRecord routineIdentifier
routineControlOptionRecord is information included in Service $31 request message and defines parameter, which is
defined by routineIdentifier.
Honda routineControlOptionRecord startRoutine
By Honda specification, routineControlOptionRecord can assign only at the time of startRoutine.
routineControlOptionRecord
routineControlOptionRecord should be defined by the system.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer has to configure the routines under Tresos Studio.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_3_4</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
routineStatusRecord Service $31 Service $31
routineStatusRecord is information included in Service $31 request message and informs the offboard tester status
information like current task execution status.
routineStatusRecord
routineStatusRecord should be defined by the system.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer has to configure the routines under Tresos Studio.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_3_5</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 15.4 Service $31 NRC 15.4
Table 15.4 shows Service $31 NRC definition. Negative response should be refer to 15.4.
Table 15.4 Service $31
Service $31 Negative response code definition
NRC (Hex) Description
generalReject (GR)
ECU
10 (eraseMemory)
In ECU which has temperature restrictions in reprogramming, erasing of a program code
(eraseMemory) under the temperature which reprogramming is impossible is used only if it is
required.
subFunctionNotSupported (SFNS)
12 sub-function
Requested sub-function is not supported..
incorrectMessageLengthOrInvalidFormat (IMLOIF)
13
Received message length or message structure doesn't suit Spec. .
conditionsNotCorrect (CNC)
22
Vehicle condition doesn't allow execution.
requestSequenceError (RSE)
(1) startRoutine stopRoutine
24 stopRoutine was required while not executing by startRoutine.
(2) Routine requestRoutineResults
requestRoutineResults was required when the result of required Routine was not able to
be outputted.
requestOutOfRange (ROOR)
(1) routineIdentifier
31 routineIdentifier is not supported.
(2) DiagnosticSession routineIdentifier
routineIdentifier is not supported in current diagnosticSession.
(3) routineControlOptionRecord
routineControlOptionRecord is out of Spec.
securityAccessDenied (SAD)
33 routineIdentifier
Security is not released.
generalProgrammingFailure (GPF)
72 Processing cannot be executed because ECU detected an error when writing or erasing
memories.
requestCorrectlyReceived-ResponsePending (RCRRP)
( NRC
78 )
Due to execution of requested task it is not possible to respond positive response or negative
response with appropriate NRC. Extension of time to reply for response message is requested.
TS-DCC01
Detail should refer to TS-DCC01 .
- NRC = $10 (GR) ECU ECU
15.5
caution -Only ECU which implements reprogramming function and has temperature restrictions in
reprogramming uses NRC=$10(GR). For details, refer to 15.5.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EB bootloader doesn't manage the NRC10. Should be managed by the customer. </Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-15_4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $31 ECU
Reply from ECU should follow this description.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_4_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(1) ( 26)
Check length of request message (check longer than minimum length 26))
a. 4 ECU NRC = $13 (IMLOIF)
15.4.3
(routineControlType, routineIdentifier )
When received request message is shorter than 4bytes, ECU should prepare negative response message
with NRC = $13 (IMLOIF) and execute reply response message specified at section 15.4.3.
(2) routineIdentifier 27
Check routineIdentifier 27
a. routineIdentifier ECU NRC = $31
(ROOR) 15.4.3
When routineIdentifier of request message is not supported, ECU should prepare negative response
message with NRC = $31 (ROOR) and execute reply response message specified at section 15.4.3.
(3) (1) (2) routineIdentifier
(4) routineControlType
Check routineControlType
a. routineControlType routineIdentifier
routineControlType ECU NRC = $12 (SFNS)

Prior to routineIdentifier and routineControlType, check if enough length of request message is received or not.
27 3.1 routineControlType
Service $31 routineIdentifier routineControlType
routineIdentifier
In the inspection routine of the general request message indicated to 3.1, routineControlType will be inspected
before routineIdentifier. However, in the case of Service $31, because routineControlType to support changes with
routineIdentifier values, a routineIdentifier value is inspected before.
(6) DiagnosticSession (DiagnosticSession routineIdentifier )
The check of DiagnosticSession (It implements if needed)
a. routineIdentifier DiagnosticSession
ECU NRC = $31 (ROOR)
15.4.3
When routineIdentifier included in the request message which received does not support in the current
DiagnosticSession, ECU should prepare negative response message with NRC = $31 (ROOR) and execute
reply response message specified at section 15.4.3.
routineIdentifier DiagnosticSession
DiagnosticSession which routineIdentifier supports is defined by system.
routineIdentifier DiagnosticSession routineControlType
And, DiagnosticSession which routineIdentifier supports is directed for every routineControlType.
(7) ( routineIdentifier )
The check of security release (It implements if needed)
a. routineIdentifier
( ) ECU NRC
= $33 (SAD) 15.4.3
It inspects, only when routineIdentifier included in the request message which received is protected by
security. When the security of the security type assigned as this routineIdentifier is not released, ECU should
prepare negative response message with NRC = $33 (SAD) and execute reply response message specified
at section 15.4.3.
6 "Service $27 (SecurityAccess service)"
In addition, refer to "Service $27 (SecurityAccess service)" of a section 6 for the details of security access.
routineIdentifier
routineIdentifier protected with security is defined by system.
routineIdentifier routineControlType
And, routineIdentifier protected with security is directed for every routineControlType.
(8) routineControlType (routineControlType )
The check of the execution sequence of routineControlType (It implements if needed)
a. routineControlType stopRoutine routine
startRoutine ECU NRC = $24 (RSE)
15.4.3
When routineControlType included in the request message which received is stopRoutine and routine
corresponding to it is not executed by startRoutine, ECU should prepare negative response message with
NRC = $24 (RSE) and execute reply response message specified at section 15.4.3.
routineControlType stopRoutine routineIdentifier
In addition, when routineControlType is stopRoutine, it inspects by all the routineIdentifiers.
routineControlType requestRoutineResults
routine ECU NRC = $24 (RSE)
15.4.3
And when routineControlType included in the request message which received is requestRoutineResults
and the execution result of routine corresponding to it cannot be outputted, ECU should prepare negative
response message with NRC = $24 (RSE) and execute reply response message specified at section 15.4.3.
routineControlType requestRoutineResults routineIdentifier
In addition, a system determines for every routineIdentifier whether to inspect, when routineControlType is
requestRoutineResults.
(9) ( routineIdentifier )
The check of a vehicles operating condition (It implements if needed)
a. routineIdentifier
ECU NRC = $22 (CNC)
15.4.3
This check is executed only when the vehicles operating condition which cannot execute processing
specified by routineIdentifier included in the request message is assigned. When the processing specified by
routineIdentifier cannot execute according to a vehicles operating condition, ECU should prepare negative
response message with NRC = $22 (CNC) and execute reply response message specified at section 15.4.3.
In addition, the inspection standard of vehicles operating condition is defined by system.
routineControlType
And, vehicles operating condition is directed for every routineControlType.
(10) routineControlOptionRecord ( )
The check of routineControlOptionRecord (It implements if needed)
a. routineControlOptionRecord routineIdentifier
ECU NRC = $31 (ROOR)
15.4.3
When the value of routineControlOptionRecord included in the request message is out of the range specified
for every routineIdentifier, ECU should prepare negative response message with NRC = $31 (ROOR) and
execute reply response message specified at section 15.4.3.
(11) ( )
The check of the memory which writes in information (It implements if needed)
a. routineIdentifier routineControlType
( ) ECU NRC =
$72 (GPF) 15.4.3
This check is executed only when the processing specified by routineIdentifier and routineControlType of
request message writes information in memory. When the memory which writes in the specified information
is failure, ECU should prepare negative response message with NRC = $72 (GPF) and execute reply
response message specified at section 15.4.3.
(12) (4) (11) ECU RoutineControl service
ECU 15.4.2
When message doesn't match the above (4) to (11), ECU should judge it is possible to execute RoutineControl
service. ECU should execute task defined in 15.4.2 and, prepare positive/negative response message and
execute reply response message specified in 15.4.3.
a. RoutineControl service
ECU NRC = $72 (GPF)
15.4.3
When writing couldn't finish normal due to memory problem, ECU should prepare NRC = $72(GPF) and
execute reply response message specified at section 15.4.3.
b. RoutineControl service ECU
15.4.3
When executing finished normal, ECU should reply positive message.
(routineStatusRecord ) routineIdentifier
In addition, the contents of the positive response message (existence and its contents of routineStatusRecord)
are specified for every routineIdentifier and system.
15.4.3
When the value of routineControlType of the request message is not routineControlType which can be used
by routineIdentifier, ECU should prepare negative response message with NRC = $12 (SFNS) and execute
reply response message specified at section 15.4.3.
(5)
Check length of request message
a. routineIdentifier routineControlType
ECU NRC = $13 (IMLOIF) 15.4.3
When received request message length doesn't match to the length defined by routineIdentifier and
routineControlType, ECU should prepare negative response message with NRC = $13 (IMLOIF) and
execute reply response message specified at section 15.4.3.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer has to configure the routines under Tresos Studio.

If special requirements, in the Tresos Studio configuration the customer can call his callback.

EB bootloader supports ISO14229:2006, and there is no NRC hierarchy defined in this version. </Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_4_2_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
routineIdentifier routineControlOptionRecord
Processing specified by routineIdentifier and routineControlOptionRecord is executed.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer has to configure the routines under Tresos Studio.

If special requirements, in the Tresos Studio configuration the customer can call his callback.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_4_2_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
routineIdentifier routineControlOptionRecord
When the processing specified by routineIdentifier and routineControlOptionRecord is executing, the processing is
suspended and it returns to normal operation.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer has to configure the routines under Tresos Studio.

If special requirements, in the Tresos Studio configuration the customer can call his callback.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_4_2_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
routineIdentifier routineControlOptionRecord ( )
The execution result of the processing specified by routineIdentifier and routineControlOptionRecord is replied.
</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer has to configure the routines under Tresos Studio.

If special requirements, in the Tresos Studio configuration the customer can call his callback.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_4_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Reply response message
3
( or ) suppressPosRspMsgIndicationBit
As described in section 3, not only by request message analysis results but also addressing type (physical or function
address), or suppressPosRspMsgIndicationBit have influence on response message.
Table 15.5 15.4.1
Table 15.5 shows response message definition.
15.4.2 (P2CAN)
NRC = $78 (RCRRP)
In addition, because processing required by 15.4.2 is executed, when a response message cannot be replied within
P2CAN, ECU can request extension of positive response message by sending negative response message with NRC =
$78 (RCRRP).
P2CAN NRC = $78 (RCRRP) TS-DCC01
Detail of negative response message of P2CAN, negative response message with NRC = $78 (RCRRP) should refer to
TS-DCC01 .
Table 15.5 Service $31
Service $31 Reply to request message
Request message check result suppressPosRs
pMsgIndication Response message
No 1) Description addressing Bit
type
(1)a Physical 0 (False) (NRC $13)
(5)a Wrong message length 1 (True) Negative response
Function
0 (False) (NRC $31)
routineIdentifier Physical 1 (True) Negative response
(2)a requested routineIdentifier not 0 (False)
supported. Function 1 (True) No response
routineControlType 0 (False) (NRC $12)
(4)a Physical 1 (True) Negative response
Requested routineControlType is 0 (False)
not supported Function 1 (True) No response
0 (False) (NRC $31)
DiagnosticSession Physical 1 (True) Negative response
routineIdentifier
(6)a requested routineIdentifier not 0 (False)
supported in current Function 1 (True) No response
diagnosticSession.
(7)a Physical 0 (False) (NRC $33)
Security not released 1 (True) Negative response
Function
routineControlType
(8)a Physical 0 (False) (NRC $24)
routineControlType was required in 1 (True) Negative response
the wrong order. Function
(9)a Physical 0 (False) (NRC $22)
Vehicle condition doesn't allow 1 (True) Negative response
requested service to execute Function
routineControlOptionRecord 0 (False) (NRC $31)
(10)a Physical 1 (True) Negative response
Incorrect 0 (False)
routineControlOptionRecord value. Function 1 (True) No response
(11)a Physical 0 (False) (NRC $72)
(12)a Memory error 1 (True) Negative response
Function
2) The ECU environment is in Physical 0 (False) (NRC $10)
reprogramming impossible 1 (True) Negative response
temperature. Function
Table 15.5 Service $31
Service $31 Reply to request message
Request message check result suppressPosRs
pMsgIndication Response message
No 1) Description addressing Bit
type
RoutineControl service 0 (False) Positive response
(12)b Physical
Requested RoutineControl service 1 (True)
executable Function No response
1) 15.4.1 No.
No. is corresponding to No. in section 15.4.1.
2) ECU 15.5
Only ECU which implements a reprogramming function uses it. For details, refer to 15.5.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer has to configure the routines under Tresos Studio.

If special requirements, in the Tresos Studio configuration the customer can call his callback.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-15_5</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
ECU Service $31
This section defines the parameter included in the request message of Service $31 about ECU which implements a
reprogramming function. And, reply of a response message is also defined.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_5_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 15.6 routineIdentifier
Table 15.6 shows routineIdentifier for reprogramming.
Table 15.6 Service $31 routineIdentifier
Service $31 routineIdentifier for reprogramming
routineIdentifier Description
(Hex)
eraseMemory
FF00
Memory erase request.
checkProgrammingDependencies
FF01
Failure detection of program code.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer has to configure the routines under Tresos Studio.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_5_2_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
ECU EEPROM
The flash EEPROM is generally used for the program memory of ECU which implements a reprogramming function.
EEPROM 2
When Reprogramming, at first memory area for reprogramming needs to be erased.
15.5.2.7
When memory erase is done, repro event history, specified in 15.5.2.7, should be stored.
Memory erase procedure shown as below.
(1) routineIdentifier = eraseMemory ($FF00) routineControlType = startRoutine ($01)
Service $31 ECU
Process 1: The offboard tester requests memory erase by Service $31 request message. routineIdentifier =
eraseMemory ($FF00), routineControlType = startRoutine ($01)
(2) (1) ECU
ECU NRC =
$78 (RCRRP)
Process 2: When message is received, ECU should check program memory erase condition. When that is
true, ECU should send negative response message with NRC = $78(RCRRP) to keep time for erase and
start erasing.
NRC = $78 (RCRRP) P2*CAN
NRC = $78 (RCRRP)
In addition, after replying the negative response message of NRC = $78, even if P2*CAN pass, when not
completing erasing processing, the negative response message of NRC = $78 (RCRRP) is again
transmitted to offboard Tester, and erasing processing is continued.
(3) ECU
Process 3: When erasing is completed, ECU should check results and send response.
22.7 Tc4 NRC = $78 (RCRRP)
( )
The offboard tester confirms error if ECU sends still NRC = $78 (RCRRP) after Tc4.
Fig. 15-1
Fig. 15-1 shows communication at memory erase process.
TesterPresent
check may come In during erasing processing execution of program memory,
Process (1) TesterPresent P2*CAN is re-extended using NegRsp (NRC = $78).
(1) NegRsp
Request (NRC = $78) P2*CAN
Off-board tester Process (2) Process (3)
(2) (3)
NegRsp NegRsp NegRsp PosRsp
NRC 78 NRC 78 NRC 78
The erasing Erasing processing of a program memory
processing P2*CAN
execution judging
of a program
memory
P2CAN
Tc4
Fig. 15-1 Program memory clear communication process
routineIdentifier = eraseMemory ($FF00) Service $31 2
routineIdentifier = eraseMemory ($FF00) has two type of request messages.
(1) reprogramming in the field
ECU
( B.2 )
All reprogramming area should be erased. except program area for power shut down recovery. Detail should
refer to B.2.
(2) reprogramming for the development
Only area specified by the offboard tester is erasable.
The program code of the memory area which is not erased by "reprogramming in the field" in "reprogramming
for the development" be also erasable.
Support this function or not should be defined by the system.
-
Caution - Reprogramming for the development should support only at the time of development, and
should not support at the time of mass production.
Table 15.7 routineIdentifier = eraseMemory ($FF00)
Table 15.7 shows definition of routineIdentifier = eraseMemory ($FF00)
Table 15.7 routineIdentifier = eraseMemory ($FF00)
Definition RoutineIdentifier = eraseMemory $FF00
DiagnosticSession routineControlType
Support in DiagnosticSession Support for routineC routineSt
routineControlType ontrolOp atusRec
Description tionReco ord Protectio
defaultSes extendedD engineerin programmi $01 1) $02 2) $03 3) rd n by
sion iagnosticS gSession ngSession security
ession
reprogramming None None None
in the field
reprogramming 8
for the 8 bytes None None
development
Support
No Support
1) startRoutine
2) stopRoutine
3) requestRoutineResults
</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer has to configure the routines under Tresos Studio.

The tester related requirements are not managed by the EB bootloader. </Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_5_2_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
routineControlType
routineControlType startRoutine ($01)
routineControlType supports only startRoutine ($01).
</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer has to configure the routines under Tresos Studio.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_5_2_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
routineControlOptionRecord
routineControlOptionRecord
routineControlOptionRecord is different by field reprogramming or development reprogramming.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer has to configure the routines under Tresos Studio.

The tester related requirements are not managed by the EB bootloader. 

If special requirements, in the Tresos Studio configuration the customer can call his callback.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_5_2_3_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
routineControlOptionRecord
At field reprogramming, routineControlOptionRecord should not be used.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer has to configure the routines under Tresos Studio.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_5_2_3_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
8 routineControlOptionRecord
At development reprogramming, 8 bytes routineControlOptionRecord is specified.
routineControlOptionRecord 4 (routineControlOption #1 #4)
routineControlOption #1 MSB
Higher 4 bytes of routineControlOptionRecord (#1 - #4) show start address of erased memory.
routineControlOptionRecord (#1) is MSB.
routineControlOptionRecord 4 (routineControlOption #5 #8)
routineControlOption #5 MSB
Lower 4 bytes of routineControlOptionRecord (#5 - #8) show number of erased bytes. routineControlOptionRecord (#5)
is MSB.
routineControlOption #1 #4 $00004000 routineControlOption #5 #8 $00008000
ECU $00004000 $0000BFFF
example
routineControlOptionRecord (#1 - #4) is $00004000 and (#5 - #8) = $00008000
erased address = $00004000 to $00008FFFF.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer has to configure the routines under Tresos Studio.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_5_2_4</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
routineStatusRecord
This routine has no routineStatusRecord.
routineIdentifier = eraseMemory ($FF00) Service $31 1
SID 1 routineControlType 2 routineIdentifier
Service $31 routineIdentifier = eraseMemory ($FF00) positive response message contains 1 byte positive message
SID + 1 byte routineControlType + 2 bytes routineIdentifier.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer has to configure the routines under Tresos Studio.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_5_2_5</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
15.4.1 (2)
After checking 15.4.1 (2) following check should be done.
(1) routineControlType
routineControlType analysis
a. routineControlType $01 (startRoutine) ECU
NRC = $12 (SFNS) 15.4.3
When routineControlType value is NOT $01 (startRoutine) by routineIdentifier, ECU should prepare negative
response message with NRC = $12 (SFNS) and reply response message specified at 15.4.3.
(2)
Check length of request message
a. 4 12 ECU NRC = $13 (IMLOIF)
15.4.3
When received request message is NOT 4 or 12bytes, ECU should prepare negative response message
with NRC = $13 (IMLOIF) and execute reply response message specified at section 15.4.3.
b. ECU 4 ECU NRC = $13 (IMLOIF)
15.4.3
When received request message in mass product is NOT 4bytes, ECU should prepare negative response
message with NRC = $13 (IMLOIF) and execute reply response message specified at section 15.4.3.
(3) DiagnosticSession
DiagnosticSession analysis
a. ECU DiagnosticSession programmingSession ECU NRC = $31 (ROOR)
15.4.3
When diagnosticSession is not programmingSession, ECU should prepare message with NRC = 31(ROOR)
and reply response message specified at section 15.4.3.
(4) ( ECU )
Reprogramming temperature check (when ECU has temperature limitation)
a. ECU ECU NRC = $10
(GR) 15.4.3
When ECU judges out of temperature range for reprogramming, ECU should prepare message with NRC =
$10(GR) and reply response message specified at section 15.4.3.
(5) routineControlOptionRecord ( 12 )
a. routineControlOptionRecord (routineControlOption #1 #8)
ECU NRC = $31 (ROOR) 15.4.3
When memory area defined by routineControlOptionRecord (routineControlOption #1 - #8 are all or partly
out of erasable area, ECU should prepare negative response message with NRC = $31(ROOR) and reply
response message specified at section 15.4.3.
The address range of erasable program memory area is determined by system.
b. routineControlOptionRecord (routineControlOption #1 #8)
BLOCK 28 ECU NRC = $31 (ROOR)
15.4.3
Erased area defined by routineControlOptionRecord (routineControlOption #1 - #8) doesn't match with
erasable block 28, ECU should prepare negative response message with NRC = $31(ROOR) and reply
response message specified at section 15.4.3.
BLOCK
Erasable block should be defined by the system.

kbyte) EEPROM $0000 $2800 ECU NRC = $31
(ROOR)
Generally, erasing of a flash EEPROM is performed not per 1-byte unit but per BLOCK. For example, erasing
BLOCK of a flash EEPROM receives 4 K bytes ($1000) of ECU. When memory erase which specified $0000 to
$2800 as address range is required, ECU replies the negative response message of NRC =$31 (ROOR), and does
not execute erasing.
(6) (1) (5) ECU
ECU 15.5.2.6
When message doesn't match the above (1) to (5), ECU should judge program area erase is possible, ECU
should execute task defined by 15.5.2.6 and following message should be sent.
a. 15.5.2.6 a ( ECU
) ECU NRC = $10 (GR)
15.4.3
At 15.5.2.6 a task case (ECU judges out of temperature Spec during memory erase, results checking), ECU
should prepare message with NRC = $10(GR) and reply response message specified at section 15.4.3.
b. 15.5.2.6 b ( ) ECU NRC = $72 (GPF)
15.4.3
At 15.5.2.6 b task case (erase results shows abnormal) ECU should prepare message with NRC =
$72(GPF) and reply response message specified at section 15.4.3.
c. 15.5.2.6 c ( ) ECU
routineControlType = startRoutine ($01)
15.4.3
At 15.5.2.6 c task case (erase task normal completed), ECU should prepare positive response message with
routineControlType = startRoutine ($01) and reply response message specified at section 15.4.3.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer has to configure the routines under Tresos Studio.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_5_2_6</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
15.5.2.5 ECU 15.5.2.7
ECU
According to regulation of 15.5.2.5, ECU recognized that execution of erasing processing of program memory is
possible performs reprogramming history storing processing specified to 15.5.2.7. After that, erasing processing of the
program memory of the specified area and check processing of erasing result are executed, and the reprogramming
status of ECU is made to change according to the following by processing result.
a. ECU
ECU ECU
22.5 " "
ECU to which reprogramming is restricted at temperature performs the following processing. When the
temperature of ECU comes out of the reprogramming permissive temperature range during erasing of
program memory, or the check of erasing result, ECU stops erasing of program memory, or erasing check
processing. After that, the reprogramming condition of ECU is changed into the "Over-temperature is
detected" of being specified 22.5.
b. ECU ECU 22.5 "
"
When malfunctions are detected by check processing of erasing result, ECU makes reprogramming status of
ECU the "memory error detected" to which it is specified 22.5.
c. ECU ECU 22.5
" "
When erasing of the required program memory is completed normally, ECU is changed into "waiting for
program information" to which the reprogramming status of ECU is specified 22.5.
Program code memory area should follow next section.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The EB will not check the preconditons(over-temperature) for the erase rootine.

Reprogramming status shall be fully managed in integration code</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_5_2_6_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(B.2 )
ECU (B.2 )
All reprogramming area should be erased. Except program area for power shut down recovery. Detail should refer to
B.2. After erase, those area should be checked if correctly erased.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_5_2_6_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
routineControlOptionRecord
Memory area defined by routineControlOptionRecord should be erased and checked.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_5_2_7</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
ECU recognized that execution of the processing required according to regulation of 15.5.2.5 is possible stores a
reprogramming history in nonvolatile memory before the erasing processing start of a program memory.
11.5.2.1
The reprogramming history is generated based on the reprogramming history memorized by 11.5.2.1.
Service $22
In addition, this information can be read by Service $22.
ECU
ECU
And, even if the ECU software does not operate, read this information. (It can answer, when the report of the
reprogramming history of ECU returned from the market is asked.)
The reprogramming history stored in nonvolatile memory is shown below. And, the initial value is written in nonvolatile
memory at the time of shipment.
1 Reprogramming history 1 Non official tester used history
11.5.2.1 $80 11.5.2.1
( dataIdentifier = $F100 ( ) Service $2E
) 1 "$FF"
"$00" 29
If Offboard tester value is received at least once greater equal $80 or dataIdentifier = $F100 of
Service $2E was not received (wrong process), $FF should be stored. 29
"$00"
default = $00.
2 Reprogramming history 2 current tester history
11.5.2.1
The value received by dataIdentifier = $F100 of Service $2E should be stored.
11.5.2.1
dataIdentifier = $F100 ( ) Service $2E
"$FF"
If dataIdentifier = $F100 of Service $2E was not received this time, $FF should be stored.
"$00"
default = $00.
3 Reprogramming history 3 number of reprogramming
event
programmingSession
programmingSession 1 30
"$FF"
After transferring to programmingSession and before first memory erase task add one to stored
counter. 30 Max number is $FF.
"$00"
default = $00.
4 Reprogramming history 4 Number of executed memory
erase task
1
"$FF"
Before memory erase task, add one to stored counter. Max number is $FF.
"$00"
default = $00.
Fig. 15-2 Fig. 15-3
Change of the reprogramming history when executing diagnostic service which has relation in Fig.15.2 and Fig.15.3 is
shown.
29 "$FF" "$FF"
If EEPROM stored value is $FF then keep $FF.
"$00"
(11.5.2.1 $80 11.5.2.1 )
"$FF" "$00"
When at one programmingSession more than 1 erase action is done, it is counted 1 memory erase.
Non-programming Non-programming Non-programming
Session Session Session
programming programming programming programming programming programming
DiagnosticSession Session Session Session Session Session Session
Diagnostic Diagnostic Diagnostic
Session Session Session
Service$2E $01-$01 $01-$80 $01-$00
(dataIdentifier = $F100)
Service$31
(routineIdentifier = $FF00)
Tester Information Unfixed $01 Unfixed $80 Unfixed $00
1 $00 $00 $00 $FF *1 $FF *2
2 $00 $01 $01 $80 $00
3 $00 $01 $02 $03
4
$00 $01 $02 $03 $04
*1 $80
When tester information is more than $80, it is considered as un-official tester.
*2 1 $FF
Once un-official tester is used, the reprogramming history 1 will be set to $FF.
Fig. 15-2 1 Example of changes of reprogramming history
Non-programming Non-programming Non-programming
Session Session Session
programming programming programming programming programming programming
DiagnosticSession Session Session Session Session Session Session
Diagnostic Diagnostic Diagnostic
Session Session Session
Service$2E $01-$01 $02-$00
(dataIdentifier = $F100)
Service$31
(routineIdentifier = $FF00)
Tester Information Unfixed $01 Unfixed Unfixed $FF *2
1 $00 $00 $00 $FF *1 $FF
Reprogramming history 1
2 $00 $01
Reprogramming history 2 $01 $FF *1 $FF
3 $00 $01 $02 $03
Reprogramming history 3
4
Reprogramming history 4 $00 $01 $02 $03 $04
*1
2 $FF
When memory erase is performed in the condition of not recording Tester information, it is
considered as un-official tester. In that case, $FF is stored in the reprogramming history 2.
*2 Service $2E dataIdentifier $F100 PDR $00 $01
$FF
When PDR $00 of Service $2E dataIdentifier $F100 is except $01, it is considered as an
un-official tester. In that case, $FF is stored in tester information.
Fig. 15-3 2 Example 2 of changes of reprogramming history</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">ReadDataByIdentifier and WriteDataByIdentifier (Fingerprint/History) shall be implemented by Bootloader customer.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-15_5_2_8</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
ECU 22.7 Tc4
NRC = $78 (RCRRP)
Following 15.4.3 and ECU requests time extension to send positive response message by NRC = $78 (RCRRP), ECU
should send withinTc4 positive or negative (except NRC = $78) message.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Tc4 is HW and integration dependent (memory size, CPU speed, memory tehnology...) so can not be garanteed by the EB bootloader alone.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_5_3_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
ECU
After writing all program codes, program code failure detection should be done. If error is detected, the offboard tester
will request memory erase and rewriting.
ECU (4.5.3 programmingSession
)
When program is correctly written, ECU will start the same initialization as battery reset, though battery is not
disconnected.
( EEPROM
)
If other actions are needed, those should be done here. e.g. protection function to avoid easy read out of EEPROM
contents.
Below is procedure for program code failure detection.
(1) routineIdentifier = checkProgrammingDependencies ($FF01) routineControlType =
startRoutine ($01) Service $31 ECU
Process 1: The offboard tester requests memory erase by Service $31 request message. routineIdentifier =
checkProgrammingDependencies ($FF01), routineControlType = startRoutine ($01).
(2) (1) ECU
ECU
NRC = $78 (RCRRP)
Process 2: When message is received, ECU should check program memory check detection condition.
When that is true, ECU should send negative response message with NRC = $78(RCRRP) to keep time for
checking and start checking.
NRC = $78 (RCRRP) P2*CAN
NRC = $78 (RCRRP)
In addition, after replying the negative response message of NRC = $78, even if P2*CAN pass, when not
completing checking memory processing, the negative response message of NRC = $78 (RCRRP) is again
transmitted to offboard Tester, and checking memory processing is continued.
(3) ECU
22.7 Tc6 NRC = $78 (RCRRP)
( )
Process 3: When error detection is completed, ECU should check results and send response. The offboard
tester confirms error if ECU sends still NRC = $78 (RCRRP) after Tc6.
Fig. 15-4
Fig. 15-4 shows communication at programming dependencies check process.
TesterPresent When dependance check is on going, NegRsp (NRC = $78)
check may come should be sent to extend P2*CAN again.
Process 1 TesterPresent NegRsp (NRC = $78) P2*CAN
(1) Next request
Request Process 2 Process 3
Offboard tester (2) (3)
NegRsp NegRsp NegRsp PosRsp
NRC 78 NRC 78 NRC 78
Programming programming dependencies check process.
dependencies P2*CAN
check execution
judgement
P2CAN
Tc6
Fig. 15-4
communication at checkProgrammingDependencies procedure
Table 15.8 routineIdentifier = $ FF01 (checkProgrammingDependencies)
Table 15.8 shows definition of routineIdentifier = $ FF01 (checkProgrammingDependencies)
Table 15.8 routineIdentifier = checkProgrammingDependencies ($FF01)
Definition RoutineIdentifier = checkProgrammingDependencies ($FF01)
DiagnosticSession routineControlType
Support in DiagnosticSession Support for Routine Routine
routineControlType Control Status Protection
Option Record by
Default Extended engineerin programmi $01 1) $02 2) $03 3) Record security
Session Diagnostic gSession ngSession
Session
Support
No Support
1) startRoutine
2) stopRoutine
3) requestRoutineResults</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer is responsible to implement the             "compatibility/consistency" check.

The customer should configure the routine in Tresos Studio.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_5_3_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
routineControlType startRoutine ($01)
routineControlType supports only startRoutine ($01).</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer is responsible to implement the             "compatibility/consistency" check.

The customer should configure the routine in Tresos Studio.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_5_3_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
routineControlOptionRecord
This routine has no routineControlOptionRecord.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer is responsible to implement the             "compatibility/consistency" check.

The customer should configure the routine in Tresos Studio.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_5_3_4</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
routineStatusRecord
This routine has no routineStatusRecord.
routineIdentifier = checkProgrammingDependencies ($FF01) Service $31
Service $31 routineIdentifier = checkProgrammingDependencies ($FF01) positive response message contains 1 byte
positive message SID + 1 byte routineControlType + 2 bytes routineIdentifier.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer is responsible to implement the             "compatibility/consistency" check.

The customer should configure the routine in Tresos Studio.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_5_3_5</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
15.4.1 (2)
After checking 15.4.1 (2) following check should be done.
(1) routineControlType
routineControlType analysis
a. routineControlType $01 (startRoutine) ECU
NRC = $12 (SFNS) 15.4.3
When routineControlType value is NOT $01 (startRoutine) by routineIdentifier, ECU should prepare negative
response message with NRC = $12 (SFNS) and reply response message specified at 15.4.3.
(2)
Check length of request message
a. 4 ECU NRC = $13 (IMLOIF)
15.4.3
When received request message is NOT 4bytes, ECU should prepare negative response message with
NRC = $13 (IMLOIF) and execute reply response message specified at section 15.4.3.
(3) DiagnosticSession
DiagnosticSession analysis
a. ECU DiagnosticSession programmingSession ECU NRC = $31 (ROOR)
15.4.3
When diagnosticSession is not programmingSession, ECU should prepare message with NRC =
$31(ROOR) and reply response message specified at section 15.4.3.
(4) The check of reprogramming status
a. ECU 22.5 " " "
" ECU NRC = $22 (CNC)
15.4.3
The reprogramming status of ECU is specified to 22.5. When reprogramming status is not which of " Waiting
for checkProgrammingDependencies " or " reprogramming normal complete ", either, ECU should prepare
negative response message with NRC = $22 (CNC) and execute reply response message specified at section
15.4.3.
b. ECU 22.5 " " ECU routineControlType
= startRoutine ($01) 15.4.3
ECU
In the case in the "reprogramming normal complete" that the reprogramming condition of ECU is specified to
22.5, ECU should prepare positive response message included routineControlType = startRoutine ($01) and
execute reply response message specified at section 15.4.3.
(5) (1) (4) ECU
ECU 15.5.3.6
When message doesn't match the above (1) to (4), ECU should judge reprogram failure detection is executable,
ECU should execute task defined by 15.5.3.6 and following message should be sent.
a. 15.5.3.6 a ( ) ECU
routineControlType = startRoutine ($01)
15.4.3
When processing of "15.5.3.6 a" is executed (When supporting reprogramming for development), ECU
should prepare positive response message included routineControlType = startRoutine ($01) and execute
reply response message specified at section 15.4.3.
b. 15.5.3.6 b ( ) ECU NRC = $72
(GPF) 15.4.3
When processing of 15.5.3.6 b is executed (Error was detected by checkProgrammingDependencies), ECU
should prepare negative response message with NRC = $72 (GPF) and execute reply response
message specified at section 15.4.3.
c. 15.5.3.6 c ( ) ECU
routineControlType = startRoutine ($01)
15.4.3
When processing of 15.5.3.6 c is executed (Error was not detected by checkProgrammingDependencies),
ECU should prepare positive response message included routineControlType = startRoutine ($01) and
execute reply response message specified at section 15.4.3.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer is responsible to implement the             "compatibility/consistency" check.

The customer should configure the routine in Tresos Studio.

Reprogramming status shall be fully managed in integration code</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_5_3_6</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
ECU
According to regulation of 15.5.3.5, ECU recognized that execution of "checkProgrammingDependencies" is possible,
Error detection processing of a program code is executed and the reprogramming state of ECU is made to change
according to the following by a processing result.
a. ECU ECU 22.5
" " (4.5.3 programmingSession )
ECU which supports reprogramming for development is changed into the " reprogramming normal complete"
of specifying the reprogramming condition of ECU to 22.5, and executes processing required for next starting
(see 4.5.3 Return from programmingSession).
( )
In addition, processing required at the time of next starting is defined for every system. (For example,
initialization of diagnostic information etc.)
b. ECU
ECU ECU 22.5 " "
When malfunctions are detected by "checkProgrammingDependencies" as for ECU which does not support
reprogramming for development, ECU is made to change to the "memory error detected" to which the
reprogramming status of ECU is specified 22.5.
c. ECU
ECU ECU 22.5 " "
(4.5.3 programmingSession )
When malfunctions are not detected by checkProgrammingDependencies as for ECU which does not support
reprogramming for development, ECU is changed into the "reprogramming normal complete" that the
reprogramming state of ECU is specified 22.5. And diagnostic information is initialized at the time of next
starting.
( )
31
In addition, processing other than initialization of diagnostic information required (for example, initialization of
a learning value etc.) at the time of next starting are defined by system.
ECU
Generally, ECU is performing error detection of the program code at the time of normal operation.
checkProgrammingDependencies is required during reprogramming processing so that error detection of program
code may not detect malfunctions by the normal operation after termination of reprogramming.
checkProgrammingDependencies within reprogramming processing should have error detection processing of the
program code at the time of normal operation, and an error detection function more than equivalent.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer is responsible to implement the             "compatibility/consistency" check.

The customer should configure the routine in Tresos Studio.

Reprogramming status shall be fully managed in integration code</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-15_5_3_7</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
ECU 22.7 Tc6
NRC = $78 (RCRRP)
Following 15.4.3 and ECU requests time extension to send positive response message by NRC = $78 (RCRRP), ECU
should send withinTc6 positive or negative (except NRC = $78) message.
31
As for the learning value which can use after reprogramming, not initializing is advisable. However, because
situations are different for every system, this document does not prescribe.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer is responsible to implement the             "compatibility/consistency" check.

The customer should configure the routine in Tresos Studio.

Reprogramming status shall be fully managed in integration code</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-16_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $34 (RequestDownload service) Service $36 ( )
ECU
Service $34 (RequestDownload service) is used to give information to ECU on start address and number of bytes
before sending program code by Service $36.
dataFormatIdentifier addressAndLengthFormatIdentifier memoryAddress memorySize
Service $36 ECU ( )
ECU ECU memoryAddress memorySize
The offboard tester informs ECU using Service $34 request message of dataFormatIdentifier,
addressAndLengthFormatIdentifier, memoryAddress, and memorySize. Then ECU should respond positive or
negative response.
memoryAddress memorySize ECU 1 Service $36
When ECU can receive requested program code, ECU should reply receivable data size by one Service $36 in positive
response.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-16_2_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 16.1 Service $34 Service $34 1
SID 1 dataFormatIdentifier 1 addressAndLengthFormatIdentifier 4
memoryAddress 4 memorySize
Table 16.1 shows Service $34 request message format, which consists of SID ,1 bytes of dataFormatIdentifier, 1 bytes
of addressAndLengthFormatIdentifier, 4 bytes of memoryAddress and 4 bytes of memorySize.
Table 16.1 Service $34
Service $34 Request message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $34 SID M 34
Service $34 Request SID
#2 dataFormatIdentifier M 00
#3 addressAndLengthFormatIdentifier M 44
#4 memoryAddress[] = [ byte#1 (MSB) M 00-FF
#5 byte#2 M 00-FF
#6 byte#3 M 00-FF
#7 byte#4] M 00-FF
#8 memorySize[] = [ byte#1 (MSB) M 00-FF
#9 byte#2 M 00-FF
#10 byte#3 M 00-FF
#11 byte#4] M 00-FF</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-16_2_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 16.2 Service $34 Service $34
1 SID 1 lengthFormatIdentifier 2
maxNumberOfBlockLength
Table 16.2 shows Service $34 positive response message format, which consists of SID and lengthFormatIdentifier
and maxNumberOfBlockLength.
ECU
After task execution, positive message should be sent.
Table 16.2 Service $34
Service $34 Positive response message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $34 SID M 74
Service $34 Positive response SID
#2 lengthFormatIdentifier M 20
#3 maxNumberOfBlockLength[] = [ byte#1 (MSB) M 00-0F
#4 byte#2] M 00-FF</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-16_2_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
2.2.2
Negative response message should follow section 2.2.2.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-16_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $34
The section defines parameter for Service $34 message.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-16_3_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
dataFormatIdentifier Service $34 1 4 bit 4
bit
dataFormatIdentifier is 1 byte information included in service $34 request message. 4bits from MSB show compression
method and the rest 4 bits show encrypt method.
HDC_CAN dataFormatIdentifier = $00
HDC_CAN uses dataFormatIdentifier = $00.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-16_3_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
addressAndLengthFormatIdentifier Service $34 1 4 bit
memorySize 4 bit memoryAddress
addressAndLengthFormatIdentifier is 1 byte information included in Service $34 request message. 4bits from MSB
show number of bytes of memorySize and the rest 4 bits show number of bytes of memoryAddress.
HDC_CAN addressAndLengthFormatIdentifier = $44
HDC_CAN uses addressAndLengthFormatIdentifier = $44.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-16_3_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
memoryAddress Service $34 4 Service $36
memoryAddress is 4 byte information included in service $34 request message. This indicates start address of
program code.
Table 16.1 memoryAddress byte#1 MSB byte#4 LSB
In byte#1 of memoryAddress of Table 16.1 shows MSB and byte#4 shows LSB.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-16_3_4</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
memorySize Service $34 4 Service $36
memorySize is 4 byte information included in service $34 request message. This indicates number of bytes of program
code
Table 16.1 memorySize byte#1 MSB byte#4 LSB
In byte#1 of memorySize of Table 16.1 shows MSB and byte#4 shows LSB.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-16_3_5</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
lengthFormatIdentifier Service $34 1 4 bit
maxNumberOfBlockLength 4 bit "ISO " 0
LengthFormatIdentifier is included in service $34 positive response message. 4bits from MSB show number of bytes of
maxNumberOfBlockLength and the rest 4 bits are "0".
HDC_CAN lengthFormatIdentifier = $20
HDC_CAN uses LengthFormatIdentifier = $20.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-16_3_6</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
maxNumberOfBlockLength Service $34 2 1
Service $36 ECU
maxNumberOfBlockLength is 2 bytes information included in service $34 positive response message to show
receivable data size by one Service $36.
ECU Service $36 1
SID 1 blockSequenceCounter ( 18.2.4.1 ) transferRequestParameterRecord (
) maxNumberOfBlockLength 1 Service $36 ECU
2
Service $36 request message contains 1 byte request message SID and 1 byte blockSequenceCounter(18.2.4.1) and
transferRequestParameterRecord (program code). maxNumberOfBlockLength should be program code + 2 bytes.
1 Service $36 512 ECU
maxNumberOfBlockLength = $202
For example, when the number of program codes received by 1 time of a Service $36 request message is 512 bytes,
ECU returns the positive response message included maxNumberOfBlockLength = $202.
maxNumberOfBlockLength ECU
22.7 Tc5 ( 18.2.7 )
maxNumberOfBlockLength is better if it is bigger to make programming time short but it depends on buffer area in the
ECU and Tc5 defined in 18.2.7.
maxNumberOfBlockLength $0FFF(10 4095)
In addition, notice the maximum of maxNumberOfBlockLength about it being $0FFF (Decimal number: 4095).</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-16_3_7</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 16.3 Service $34 NRC 16.4
Table 16.3 shows Service $34 NRC definition. Negative response should be refer to 16.4
Table 16.3 Service $34
Service $34 Negative response code definition
NRC (Hex) Description
incorrectMessageLengthOrInvalidFormat (IMLOIF)
13
Received message length or message structure doesn't suit Spec. .
conditionsNotCorrect (CNC)
22 ECU 22.5 " " "
" " "
ECU reprogramming status is either "during program code received" or "programming code
reception finish" or "Over-temperature is detected".
requestOutOfRange (ROOR)
(1) dataFormatIdentifier
dataFormatIdentifier out of Spec.
31 (2) addressAndLengthFormatIdentifier
addressAndLengthFormatIdentifier out of Spec.
(3) memoryAddress memorySize
Area defined by memoryAddress and memorySize is not correct.
uploadDownloadNotAccepted (UDNA)
ECU 22.5 " " "
70 " " " " " " "
ECU current status is "waiting for eraseMemory", "waiting for program information", "Waiting for
checkProgrammingDependencies", "reprogramming normal complete" or "memory error
detected".
serviceNotSupportedInActiveSession (SNSIAS)
7F DiagnosticSession Service $34
Current diagnostic Session doesn't support Service $34.
- Service $34 NRC = $78 (RCRRP)
Caution NRC=$78 (RCRRP) is not allowed in Service 34.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">Reprogramming status shall be fully managed in integration code</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-16_4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $34 ECU
Reply from ECU should follow this description.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-16_4_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(1) DiagnosticSession
DiagnosticSession analysis
a. ECU DiagnosticSession programmingSession ECU NRC = $7F (SNSIAS)
16.4.3
When diagnosticSession is not programmingSession, ECU should prepare negative response message with
NRC =$7F (SNSIAS) and execute reply response message specified at section 16.4.3.
(2)
Check length of request message
a. 11 ECU NRC = $13 (IMLOIF)
16.4.3
When received request message is NOT 11bytes, ECU should prepare negative response message with
NRC = $13 (IMLOIF) and execute reply response message specified at section 16.4.3.
(3) dataFormatIdentifier
dataFormatIdentifier analysis
a. dataFormatIdentifier $00 ECU NRC = $31
(ROOR) 16.4.3
When dataFormatIdentifier is NOT $00, ECU should prepare NRC = $31(ROOR) and execute reply
response message specified at section 16.4.3.
(4) addressAndLengthFormatIdentifier
addressAndLengthFormatIdentifier analysis
a. addressAndLengthFormatIdentifier $44 ECU
NRC = $31 (ROOR) 16.4.3
When addressAndLengthFormatIdentifier is NOT $44, ECU should prepare NRC = $31(ROOR) and execute
reply response message specified at section 16.4.3.
(5)
The check of reprogramming status
a. ECU 22.5 " " " " "
" " " " " ECU
NRC = $70 (UDNA) 16.4.3
The reprogramming status of ECU is specified to 22.5. When reprogramming status is "waiting for
eraseMemory" , "waiting for program information" , "Waiting for checkProgrammingDependencies" ,
"reprogramming normal complete" or "memory error detected", ECU should prepare negative response
message with NRC = $70 (UDNA) and execute reply response message specified at section 16.4.3.
b. ECU 22.5 " " " " "
" ECU NRC = $22 (CNC)
16.4.3
When reprogramming status is "during program code received" , "finish of program code received" or
"Over-temperature is detected", ECU should prepare negative response message with NRC = $22 (CNC)
and execute reply response message specified at section 16.4.3.
(6) memoryAddress memorySize
memoryAddress and memorySize check
a. memoryAddress memorySize ECU
NRC = $31 (ROOR) 16.4.3
When memoryAddress and memorySize is not appropriate values, ECU should prepare NRC = $31(ROOR)
and execute reply response message specified at section 16.4.3.
memoryAddress memorySize 16.5
Appropriate value is specified in 16.5.
(7) (1) (6) ECU RequestDownload service
ECU 16.4.2
16.4.3
When message doesn't match the above (1) to (6), ECU should judge it is possible to execute
RequestDownload service. ECU should execute task defined in 16.4.2 and prepare positive message and reply
as defined in 16.4.3.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EB bootloader doesn't manage the NRC70 and NRC22.

The dataFormatIdentifier(DFI) is passed to the custumer integration code using a callback. The DFI should be managed by the customer. 

The EB tresos Bootloader checks only that the coherency between the addressAndLengthFormatIdentifier and the request length.

Reprogramming status shall be fully managed in integration code.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-16_4_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Service $36 ECU (maxNumberOfBlockLength)
ECU 22.5 " "
According to regulation of 16.4.1, ECU recognized that execution of required RequestDownload service is possible
performs the next processing.
The request message length (maxNumberOfBlockLength) who can receive ECU by 1 time of a Service $36 request
message is prepared.
The "waiting for program code received" to which the reprogramming status of ECU is specified 22.5 is made to
change.
</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EB bootloader doesn't manage the NRC70 and NRC22.

Reprogramming status shall be fully managed in integration code</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-16_4_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Reply response message
3
( or )
As described in section 3, not only by request message analysis results but also addressing type (physical or function
address) have influence on response message.
Table 16.4 16.4.1
Table 16.4 shows response message definition.
Table 16.4 Service $34
Service $34 Reply to request message
Request message check result
No 1) addressing Response message
Description type
(2)a Physical (NRC $13)
Wrong message length Negative response
Function
DiagnosticSession
(1)a Service $34 Physical (NRC $7F)
Current Diagnostic Session doesn't Negative response
support Service $34. Function
dataFormatIdentifier (NRC $31)
(3)a Physical Negative response
dataFormatIdentifier out of Spec. Function No response
addressAndLengthFormatIdentifier (NRC $31)
(4)a Physical Negative response
addressAndLengthFormatIdentifier
out of Spec. Function No response
ECU
22.5 "
" " " "
" " " "
(5)a " Physical (NRC $70)
ECU reprogramming status is either Negative response
"waiting for eraseMemory" or "waiting Function
for program information" or "Waiting
for checkProgrammingDependencies"
or " "
or "memory error detected".
ECU
22.5 "
" " " "
" Physical (NRC $22)
(5)b Negative response
ECU reprogramming status is either Function
"during program code received" or
" "
or "Over-temperature is detected".
memoryAddress memorySize (NRC $31)
(6)a Physical Negative response
Area defined by memoryAddress
and memorySize is not correct. Function No response
RequestDownload
(7) service Physical
Requested RequestDownload Positive response
service executable Function
1) 16.4.1 No.
No. is corresponding to No. in section 16.4.1.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EB bootloader doesn't manage the NRC70 and NRC22.

Reprogramming status shall be fully managed in integration code</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-16_5</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
memorySize value
memoryAddress memorySize 15.5.2
( )
Value judgment of memoryAddress and memorySize is different in the address the program memory area erased by
15.5.2 was continuous of the address, or a discontinuous address.
HDC_CAN 15.5.2 Service $36
In HDC_CAN, all the program codes of the memory area erased by 15.5.2 are transmitted using Service $36.
EEPROM $FF $FF
HDC_CAN
Generally, when a flash EEPROM erases, data will be set to $FF. Using this, the newly written-in program code is $FF,
and when the area is unused, a program code cannot be transmitted, either. However, this technique is not used in
HDC_CAN.
( Service $36 )
(It transmits by Service $36 also about the program code of an unused area)</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-16_5_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
1 Service $34
When it is the address the erased program memory area was continuous of the address, the address and transmission
capacity of all the program codes of the erased program memory area are notified by 1 time of a Service $34 request
message.
(1) (2) memoryAddress memorySize
When satisfying all the following conditions of (1) to (2), memoryAddress and memorySize judge it as suitable value.
(1) memoryAddress
"memoryAddress" is the same value as "the head address of the erased memory area."
(2) memoryAddress + memorySize - 1
"memoryAddress+memorySize-1" is the same value as "the final address of the erased memory area."
memorySize memoryAddress + memorySize - 1
memorySize is transmission capacity. For this reason, the erased final address becomes
"memoryAddress+memorySize-1."
$10000 $4FFFF Service $34
memoryAddress memorySize
For example, if memoryAddress(es) and memorySize(s) which were included in the Service$34 request message are
the following values when the program code of the area of address $10000 - $4FFFF is erased, it will be judged as a
suitable value.
memoryAddress = $00010000
memorySize = $00040000</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer has to configure the memory usage under Tresos Studio. This way the checks for the RequestDownload requests can be done safe.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-16_5_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Service $34
When the erased program memory area is a discontinuous address, the address and transmission capacity of all the
program codes of the erased program memory area are notified by two or more times of Service $34 request
messages.
( ) Service $34
Service $34
The off-board tester notifies by Service $34 from the small address of an erasing block (continuous area in the erased
area). In addition, off-board tester divides the continuous address and does not notify by Service $34.
(1) (2) memoryAddress memorySize
When satisfying all the following conditions of (1) to (2), memoryAddress and memorySize judge it as a suitable value.
(1) memoryAddress Service $34
"memoryAddress" is the same value as "the head address of an erasing block" of the number of times of
received of Service $34.
(2) memoryAddress + memorySize -1 Service $34
"memoryAddress+memorySize-1" is the same value as "the final address of an erasing block" of the number of
times of received of Service $34.
memorySize memoryAddress + memorySize - 1
memorySize is transmission capacity. For this reason, the erased final address becomes
"memoryAddress+memorySize-1."
Service $34 1 ECU 22.5
" " 1
The number of times of received of Service $34 is initialized at the time of erasing of a program memory (the 1st time),
and is added one time for every changes execution in the " finish of download" that the reprogramming processing
state of ECU is specified to 22.5.
$10000 $4FFFF (1 ) $80000 $FFFFF (2 )
Service $34 memoryAddress memorySize
For example, when the program code of the area of address $10000 - $4FFFF (the 1st erasing block), and $80000 -
$FFFFF (the 2nd erasing block) is erased, If memoryAddress(es) and memorySize(s) which were included in the
Service $34 request message are the following values, it will be judged as a suitable value.

memoryAddress = $00010000
memorySize = $00040000

</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The customer has to configure the memory usage under Tresos Studio. This way the checks for the RequestDownload requests can be done safe.

Reprogramming status shall be fully managed in integration code</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-17_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $35 (RequestUpload service) Service $36 ( ) ECU
Service $35 (RequestUpload service) is used to give information to ECU on start address and number of bytes before
sending program code from ECU by Service $36.
dataFormatIdentifier addressAndLengthFormatIdentifier memoryAddress memorySize
Service $35 Service $36 ECU (
) ECU ECU memoryAddress memorySize
The offboard tester informs ECU using Service $35 request message of dataFormatIdentifier,
addressAndLengthFormatIdentifier, memoryAddress, memorySize. Then ECU should respond positive or negative
response.
memoryAddress memorySize ECU 1 Service $36
When ECU can send requested program code, ECU should reply receivable data size by one Service $36 in positive
response.
Service $35
Service $35 is supported or not is defined by the system.
- Service $35
Caution - Service $35 is only for development</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x35 RequestUpload service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-17_2_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 17.1 Service $35 Service $35 1
SID 1 dataFormatIdentifier 1 addressAndLengthFormatIdentifier 4
memoryAddress 4 memorySize
Table 17.1 shows Service $35 request message format, which consists of SID ,1 bytes of dataFormatIdentifier, 1 bytes
of addressAndLengthFormatIdentifier, 4 bytes of memoryAddress and 4 bytes of memorySize.
Table 17.1 Service $35
Service $35 Request message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $35 SID M 35
Service $35 Request SID
#2 dataFormatIdentifier M 00
#3 addressAndLengthFormatIdentifier M 44
#4 memoryAddress[] = [ byte#1 (MSB) M 00-FF
#5 byte#2 M 00-FF
#6 byte#3 M 00-FF
#7 byte#4] M 00-FF
#8 memorySize[] = [ byte#1 (MSB) M 00-FF
#9 byte#2 M 00-FF
#10 byte#3 M 00-FF
#11 byte#4] M 00-FF</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x35 RequestUpload service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-17_2_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 17.2 Service $35 Service $35
1 SID 1 lengthFormatIdentifier 2
maxNumberOfBlockLength
Table 17.2 shows Service $35 positive response message format, which consists of SID and lengthFormatIdentifier
and maxNumberOfBlockLength.
ECU
After task execution, positive message should be sent.
Table 17.2 Service $35
Service $35 Positive response message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $35 SID M 75
Service $35 Positive response SID
#2 lengthFormatIdentifier M 20
#3 maxNumberOfBlockLength[] = [ byte#1 (MSB) M 01
#4 byte#2] M 02</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x35 RequestUpload service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-17_2_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
2.2.2
Negative response message should follow section 2.2.2.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x35 RequestUpload service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-17_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $35
The section defines parameter for Service $35 message.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x35 RequestUpload service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-17_3_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
dataFormatIdentifier Service $35 1 4 bit 4
bit
dataFormatIdentifier is 1 byte information included in service $35 request message. 4bits from MSB show compression
method and the rest 4 bits show encrypt method.
HDC_CAN dataFormatIdentifier = $00
HDC_CAN uses dataFormatIdentifier = $00.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x35 RequestUpload service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-17_3_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
addressAndLengthFormatIdentifier Service $35 1 4 bit
memorySize 4 bit memoryAddress
addressAndLengthFormatIdentifier is 1 byte information included in Service $35 request message. 4bits from MSB
show number of bytes of memorySize and the rest 4 bits show number of bytes of memoryAddress.
HDC_CAN addressAndLengthFormatIdentifier = $44
HDC_CAN uses addressAndLengthFormatIdentifier = $44.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x35 RequestUpload service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-17_3_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
memoryAddress Service $35 4 Service $36 ECU
memoryAddress is 4 byte information included in service $35 request message. This indicates start address of
program code.
Table 17.1 memoryAddress byte #1 MSB byte #4 LSB
In byte#1 of memoryAddress of Table 17.1 shows MSB and byte#4 shows LSB.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x35 RequestUpload service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-17_3_4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
memorySize Service $35 4 Service $36 ECU
memorySize is 4 byte information included in service $35 request message. This indicates number of bytes of program
code
Table 17.1 memorySize byte #1 MSB byte #4 LSB
In byte#1 of memorySize of Table 17.1 shows MSB and byte#4 shows LSB.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x35 RequestUpload service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-17_3_5</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
lengthFormatIdentifier Service $35 1 4 bit
maxNumberOfBlockLength 4 bit "ISO " 0
lengthFormatIdentifier is included in service $35 positive response message. 4bits from MSB show number of bytes of
maxNumberOfBlockLength and the rest 4 bits are "0".
HDC_CAN lengthFormatIdentifier = $20
HDC_CAN uses lengthFormatIdentifier = $20.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x35 RequestUpload service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-17_3_6</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
maxNumberOfBlockLength Service $35 2 1
Service $36 ECU
maxNumberOfBlockLength is 2 bytes information included in service $35 positive response message to show
receivable data size by one Service $36.
ECU Service $36 1
SID 1 blockSequenceCounter ( 18.3.4.1 )
transferResponseParameterRecord ( ) maxNumberOfBlockLength 1
Service $36 ECU 2
Service $36 request message contains 1 byte request message SID and 1 byte blockSequenceCounter (18.3.4.1) and
transferRequestParameterRecord (program code). maxNumberOfBlockLength should be program code + 2 bytes.
HDC_CAN maxNumberOfBlockLength = $0102 ECU Service $36
256
HDC_CAN uses maxNumberOfBlockLength = $0102.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x35 RequestUpload service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-17_3_7</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 17.3 Service $35 NRC 17.4
Table 17.3 shows Service $35 NRC definition. Negative response should be refer to 17.4.
Table 17.3 Service $35
Service $35 Negative response code definition
NRC (Hex) Description
incorrectMessageLengthOrInvalidFormat (IMLOIF)
13
Received message length or message structure doesn't suit Spec. .
requestOutOfRange (ROOR)
(1) dataFormatIdentifier
dataFormatIdentifier out of Spec.
(2) addressAndLengthFormatIdentifier
31 addressAndLengthFormatIdentifier out of Spec,
(3) memorySize
memorySize is out of Spec.
(4) memoryAddress memorySize
Area defined by memoryAddress and memorySize is not correct.
serviceNotSupportedInActiveSession (SNSIAS)
7F DiagnosticSession Service $35
Current diagnostic Session doesn't support Service $35.
- Service $35 NRC = $78 (RCRRP)
Caution NRC=$78 (RCRRP) is not allowed in Service 35.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x35 RequestUpload service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-17_4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $35 ECU
Reply from ECU should follow this description.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x35 RequestUpload service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-17_4_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
(1) DiagnosticSession
DiagnosticSession analysis
a. ECU DiagnosticSession programmingSession ECU NRC = $7F (SNSIAS)
17.4.3
When diagnosticSession is not programmingSession, ECU should prepare negative response message with
NRC = $7F (SNSIAS) and execute reply response message specified at section 17.4.3.
(2)
Check length of request message
a. 11 ECU NRC = $13 (IMLOIF)
17.4.3
When received request message is NOT 11bytes, ECU should prepare negative response message with
NRC = $13 (IMLOIF) and execute reply response message specified at section 17.4.3.
(3) dataFormatIdentifier
dataFormatIdentifier check
a. dataFormatIdentifier $00 ECU NRC = $31
(ROOR) 17.4.3
When dataFormatIdentifier is NOT $00, ECU should prepare NRC = $31(ROOR) and execute reply
response message specified at section 17.4.3.
(4) addressAndLengthFormatIdentifier
addressAndLengthFormatIdentifier check
a. addressAndLengthFormatIdentifier $44 ECU
NRC = $31 (ROOR) 17.4.3
When addressAndLengthFormatIdentifier is NOT $44, ECU should prepare NRC = $31(ROOR) and execute
reply response message specified at section 17.4.3.
(5) memorySize
memorySize check
a. memorySize $100 (memorySize $100
0 ) ECU NRC = $31 (ROOR)
17.4.3
When memorySize in request message can not be divided by $100, ECU should prepare negative response
message with NRC = $31 (ROOR) and reply response message specified at section 17.4.3.
(6) memoryAddress memorySize
memoryAddress and memorySize check
a. memoryAddress memorySize
ECU NRC = $31 (ROOR)
17.4.3
When memoryAddress and memorySize is not appropriate values, ECU should prepare NRC = $31(ROOR)
and execute reply response message specified at section 17.4.3.
memoryAddress memorySize 17.5
Appropriate value is specified in 17.5.
(7) (1) (6) ECU RequestUpload service
ECU 17.4.2
17.4.3
When message doesn't match the above (1) to (6), ECU should judge it is possible to execute RequestUpload
service. ECU should execute task defined in 17.4.2 and prepare positive message and reply as defined in
17.4.3.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x35 RequestUpload service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-17_4_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
17.4.1 RequestUpload service ECU 18.3
Service $36 Upload (FLASH ROM )
When ECU judges it is possible to execute RequestUpload service on 18.3, ECU should release Service $36 Upload
service.
17.4.3 Reply response message
3
( or )
As described in section 3, not only by request message analysis results but also addressing type (physical or function
address) have influence on response message.
Table 17.4 17.4.1
Table 17.4 shows response message definition.
Table 17.4 Service $35
Service $35 Reply to request message
Request message check result
No 1) addressing Response message
Description type
(2)a Physical (NRC $13)
Wrong message length Negative response
Function
DiagnosticSession
(1)a Service $35 Physical (NRC $7F)
Current Diagnostic Session doesn't Negative response
support Service $35. Function
dataFormatIdentifier (NRC $31)
(3)a Physical Negative response
dataFormatIdentifier out of Spec. Function No response
addressAndLengthFormatIdentifier (NRC $31)
(4)a Physical Negative response
addressAndLengthFormatIdentifier
out of Spec. Function No response
(NRC $31)
(5)a memorySize Physical Negative response
memorySize out of Spec.
Function No response
memoryAddress memorySize (NRC $31)
(6)a Physical Negative response
Area defined by memoryAddress
and memorySize is not correct. Function No response
RequestUpload service
(7) Physical
Requested RequestUpload service Positive response
executable Function
1) 17.4.1 No.
No. is corresponding to No. in section 17.4.1.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x35 RequestUpload service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-17_5</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
memorySize
Service $35 (RequestUpload service) ( )
( )
Service $35 (RequestUpload) is to read out program memory
Service $35 memoryAddress memorySize
Reprogrammable area should be defined by the system.
Service $35 memoryAddress memorySize Service $36 ECU
The off-board tester uses memoryAddress and memorySize of Service $35 request message, The "start address" and
"the amount of data transmitted from the address" of the program code which ECU transmits by Service $36 are
specified.
memoryAddress = $00008000 memorySize = $00010000 Service $35
ECU Service $36 Upload (FLASH ROM ) $00008000 $00017FFF
64kbyte (65,536 = 216 )
Example
memoryAddress = $00008000, memorySize = $00010000
Address $00008000 - $017FFF is defined.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x35 RequestUpload service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-18_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $36 (TransferData service) Service $34 ( )
ECU Service $35 ( ) ECU
Service $36 (TransferData service) is used to send program code to ECU when Service $34 us used to give address
information or to get program code from ECU when Service $35 is used to give address information.
Service $36 ECU (TransferData service)
Service $34 (RequestDownload service) Service $35 (RequestUpload service)
ECU response to Service $36 is defined by receiving Service $34 (RequestDownload service) first or Service $35
(requestUploadService) first.
Service $34 Service $36 18.2 Service $35 Service $36
18.3
Details at the time of receiving Service $36, after receiving Service $34. It is shown in 18.2.
Details at the time of receiving Service $36, after receiving Service $35. It is shown in or 18.3.
Service $34 Service $35 Service $36 18.2
Also 18.2 if none of Service $34 and $35 is received.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-18_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $36 Download (FLASH ROM ) Service $34 memoryAddress
memorySize ( ) ECU
Download service (FLASH ROM data writing) of Service $36 is used in order that an off-board tester may transmit to
ECU the program code (including data) specified by memoryAddress and memorySize of the Service $34 request
message.
blockSequenceCounter transferRequestParameterRecord Service $36
ECU ECU
Off-board tester sends the number of times of program code transmission, and program code to ECU by the Service
$36 request message included blockSequenceCounter and transferRequestParameterRecord. ECU replies by
response message whether the program code which received is accepted.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-18_2_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 18.1 Service $36 Service $36 1
SID 1 blockSequenceCounter 1 transferRequestParameterRecord
Table 18.1 shows Service $36 request message format. Which consists of 1 byte of SID and 1 byte
blockSequenceCounter, minimum 1 byte transferRequestParameterRecord. The message is variable length.
Service $34 memoryAddress memorySize Service $34 ECU
maxNumberOfBlockLength-2 transferRequestParameterRecord
The offboard tester divides program code by (maxNumberOfBlockLength - 2) and then send program code.
memorySize maxNumberOfBlockLength-2 Service $34 memorySize
Service $36 maxNumberOfBlockLength
18.2.6
If memorySize is not deliverable by (maxNumberOfBlockLength - 2), then the last transmission from the offboard
tester message length become other than maxNumberOfBlockLength. Refer to 18.2.6 for more detail.
Table 18.1 Service $36
Service $36 Request message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $36 SID Service $xx Request SID M 36
#2 blockSequenceCounter M 00-FF
#3 transferRequestParameterRecord[] = [ transferRequestParameter#1 M 00-FF
: : : :
#n transferRequestParameter#m ] M 00-FF</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-18_2_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 18.2 Service $36 Service $36
1 SID 1 blockSequenceCounter
blockSequenceCounter blockSequenceCounter
Table 18.2 shows Service $36 positive response message format, which consists of 1 byte of SID and 1 byte of
blockSequenceCounter. blockSequenceCounter of a positive response message is made into the value received by
the request message.
ECU
After task execution, positive message should be sent.
Table 18.2 Service $36
Service $36 Positive response message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $36 SID M 76
Service $36 Positive response SID
#2 blockSequenceCounter M 00-FF</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-18_2_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
2.2.2
Negative response message should follow section 2.2.2.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-18_2_4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $36
The section defines parameter for Service $36 message.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-18_2_4_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
blockSequenceCounter Service $36 1 Service $36
blockSequenceCounter is 1 byte information included in service $36 request message. This indicates number of
transmission of program code by Service $36.
blockSequenceCounter
Positive message should include number received.
Service $36 Service $34 memoryAddress memorySize
ECU
Service $36 is used in order to transmit to ECU the program code specified by memoryAddress and memorySize of the
Service $34 request message from off-board tester.
Service $34 memoryAddress memorySize
Service $36
By Service $36, size of program code, which is possible to send at one transmission is max 4093 bytes but program
size defined by Service $34 is bigger. That's why the tester sends program code by repeating Service $36.
blockSequenceCounter Service $36
ECU Service $36 1 blockSequenceCounter
= $FF Service $36 blockSequenceCounter $00
blockSequenceCounter is to inform ECU of number of transmission. When blockSequenceCounter reaches $FF, next
blockSequenceCounter is $00.
blockSequenceCounter (Service $34 Service $36
blockSequenceCounter) $01
The initial value of blockSequenceCounter is $01. (blockSequenceCounter of the Service $36 request message of the
beginning after Service $34 is $01.)</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-18_2_4_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
transferRequestParameterRecord Service $36 ECU
transferRequestParameterRecord is variable length information included in Service $36 request message.
transferRequestParameterRecord Service $34 memoryAddress
transferRequestParameter#1 #2....
Program code in transferRequestParameterRecord is starting from address defined by memoryAddress in Service $34
such as transferRequestParameterRecord #1, #2,,,
11.5.2.2
ECU
Program code will be encrypted by decrypt information at 11.5.2.2 and decrypt function.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EB bootloader will call a callback for the decryption of the data.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-18_2_4_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 18.3 Service $36 NRC 18.2.5
Table 18.3 shows Service $36 NRC definition. Negative response should be refer to 18.2.5.
Table 18.3 Service $36 (Download (FLASH ROM ))
Service $36 (Download) Negative response code definition
NRC (Hex) Description
generalReject (GR)
(1) ECU 22.5 "
10 "
The reprogramming state of ECU was " Over-temperature is detected" specified to 22.5.
(2) ECU
ECU temperature is out of reprogrammable temperature.
incorrectMessageLengthOrInvalidFormat (IMLOIF)
13
Received message length or message structure doesn't suit Spec. .
requestSequenceError (RSE)
(1) ECU 22.5 " " "
" " " " "
" " " "
The reprogramming state of ECU was " waiting for program information", "waiting for
checkProgrammingDependencies", "finish of download", or "reprogramming normal
complete" specified to 22.5.
(2) ECU 22.5 " "
blockSequenceCounter Service $36
The reprogramming state of ECU is in the "finish of program code received" specified to
22.5, Service $36 of different blockSequenceCounter from blockSequenceCounter which
received last time was received.
transferDataSuspended (TDS)
ECU 22.5 " "
At the time of the "memory error detected"(The malfunctions in a memory are detected in writing)
as which the reprogramming state of ECU was specified to 22.5, Service $36 was received
again.
generalProgrammingFailure (GPF)
72
Writing didn't end successful.
wrongBlockSequenceCounter (WBSC)
blockSequenceCounter out of Spec
requestCorrectlyReceived-ResponsePending (RCRRP)
( NRC
78 )
Due to execution of requested task it is not possible to respond positive response or negative
response with appropriate NRC. Extension of time to reply for response message is requested.
TS-DCC01
Detail should refer to TS-DCC01 .
serviceNotSupportedInActiveSession (SNSIAS)
7F DiagnosticSession Service $36
Current diagnostic Session doesn't support Service $36.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">NRC_10 should be managed by the customer as not part of the ISO14229.

The EB will not check the preconditons(over-temperature, over-voltage...)

Reprogramming status shall be fully managed in integration code
</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-18_2_5</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $36 ECU
Reply from ECU should follow this description.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-18_2_5_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(1) DiagnosticSession
DiagnosticSession analysis
a. ECU DiagnosticSession programmingSession ECU NRC = $7F (SNSIAS)
18.2.5.3
When diagnosticSession is not programmingSession, ECU should prepare negative response message with
NRC = $7F (SNSIAS) and execute reply response message specified at section 18.2.5.3.
(2)
Check length of request message
a. memorySize (maxNumberOfBlockLength - 2)
When memorySize can divide among (maxNumberOfBlockLength-2)
i. Service $34
maxNumberOfBlockLength ECU NRC = $13 (IMLOIF)
18.2.5.3
In the cases of other than the maxNumberOfBlockLength value which the length of the request
message which received specified by the Service $34 positive response message, ECU should
prepare negative response message with NRC = $13 (IMLOIF) and execute reply response message
specified at section 18.2.5.3.
b. memorySize (maxNumberOfBlockLength - 2)
When memorySize cannot divide among (maxNumberOfBlockLength-2)
i. Service $34
maxNumberOfBlockLength 18.2.6 Last_Length
ECU NRC = $13 (IMLOIF)
18.2.5.3
When the length of the request message which received corresponds to neither the
maxNumberOfBlockLength value specified by the Service $34 positive response message, nor the
Last_Length value calculated by 18.2.6, ECU should prepare negative response message with NRC
= $13 (IMLOIF) and execute reply response message specified at section 18.2.5.3.
ii. 18.2.6 Last_Length ECU
22.5 " " Service $34
ECU NRC = $13
(IMLOIF) 18.2.5.3
When the reprogramming processing state of ECU is not in the "finish of program code received"
specified to 22.5, or when it is not in the condition of receiving the program code of the last of the
program code specified by Service $34. When the length of the request message which received is
equal to the Last_Length value calculated by 18.2.6 in this condition, ECU should prepare negative
response message with NRC = $13 (IMLOIF) and execute reply response message specified at
section 18.2.5.3.
iii. Service $34
maxNumberOfBlockLength ECU 22.5 "
" ECU NRC = $13 (IMLOIF)
18.2.5.3
In the case in the "finish of program code received" that the reprogramming processing state of ECU
is specified to 22.5. When the length of the request message which received is equal to the
maxNumberOfBlockLength value specified by the Service $34 positive response message in this
condition, ECU should prepare negative response message with NRC = $13 (IMLOIF) and execute
reply response message specified at section 18.2.5.3.
iv. Service $34
maxNumberOfBlockLength Service $34
blockSequenceCounter (6)
ECU NRC = $13 (IMLOIF)
18.2.5.3
At the time of the condition of receiving the program code of the last of the program code specified by
Service $34. When the length of the request message which received is equal to the
maxNumberOfBlockLength value specified by the positive response message of Service $34. In the
cases of other than the value which the blockSequenceCounter value included in the request
message which received in this condition received in the last process (6), ECU should prepare
negative response message with NRC = $13 (IMLOIF) and execute reply response message
specified at section 18.2.5.3.
(3) The check of reprogramming status
a. ECU 22.5 " " " " "
" " " " " "
" ECU NRC = $24 (RSE)
18.2.5.3
In the case of one of " waiting for program information", "waiting for eraseMemory", "waiting for download
request", "finish of download", "Waiting for checkProgrammingDependencies", or "reprogramming normal
complete" as which the reprogramming state of ECU is specified to22.5, ECU should prepare negative
response message with NRC = $24 (RSE) and execute reply response message specified at section
18.2.5.3.
b. ECU 22.5 " "
blockSequenceCounter (6) ECU NRC = $24
(RSE) 18.2.5.3
At the time of the "finish of program code received" that the reprogramming processing state of ECU is
specified to 22.5. In the cases of other than the value which the blockSequenceCounter value included in
the request message which received at this time received in the last process (6), ECU should prepare
negative response message with NRC = $24 (RSE) and execute reply response message specified at
section 18.2.5.3.
c. ECU 22.5 " " ECU NRC = $71
(TDS) 18.2.5.3
When the reprogramming processing state of ECU corresponds to the "memory error detected" specified to
22.5, ECU should prepare negative response message with NRC = $71 (TDS) and execute reply response
message specified at section 18.2.5.3.
d. ECU ECU 22.5 "
" ECU NRC = $10 (GR)
18.2.5.3
Only the ECU which has temperature restrictions in reprogramming is inspected. When the reprogramming
state of ECU is in " Over-temperature is detected " specified to 22.5, ECU should prepare negative response
message with NRC = $10 (GR) and execute reply response message specified at section 18.2.5.3.
(4) blockSequenceCounter 32
The check of blockSequenceCounter
a. memorySize (maxNumberOfBlockLength - 2)
When memorySize can divide among (maxNumberOfBlockLength-2)
i. Service $34 Service $36
blockSequenceCounter $01 ECU NRC =
$73 (WBSC) 18.2.5.3
When the blockSequenceCounter value included in the request message which received by the
Service $36 request message of the beginning after Service $34 positive response message return is
except $01, ECU should prepare negative response message with NRC = $73 (WBSC) and execute
reply response message specified at section 18.2.5.3.
ii. blockSequenceCounter (6)
(6) blockSequenceCounter 1
ECU NRC = $73 (WBSC)
18.2.5.3
In the case of in case the blockSequenceCounter value included in the request message which
received is not which of a value that was the same as that of the value received in the last process (6),
or added 1 to it, either, ECU should prepare negative response message with NRC = $73 (WBSC)
and execute reply response message specified at section 18.2.5.3.
iii. blockSequenceCounter (6)
ECU 18.2.5.3
When the blockSequenceCounter value included in the request message which received is the same
as the value received in the last process (6), ECU should prepare positive response message and
execute reply response message specified at section 18.2.5.3.
In addition, the program code which received cancels and writing does not execute.
(blockSequenceCounter = $FF blockSequenceCounter $00
)
The check of blockSequenceCounter checks that a receiving blockSequenceCounter value is a value added to
blockSequenceCounter which received last time one time. (Notice the next blockSequenceCounter of
blockSequenceCounter = $FF about it being $00)
blockSequenceCounter blockSequenceCounter
However, when the request message of blockSequenceCounter of the same value as blockSequenceCounter
which received last time is received, positive response message is returned.
b. memorySize (maxNumberOfBlockLength - 2)
When memorySize cannot divide among (maxNumberOfBlockLength-2)
i. Service $34 Service $36
blockSequenceCounter $01 ECU NRC =
$73 (WBSC) 18.2.5.3
When the blockSequenceCounter value included in the request message which received by the
Service $36 request message of the beginning after Service $34 positive response message return is
except $01, ECU should prepare negative response message with NRC = $73 (WBSC) and execute
reply response message specified at section 18.2.5.3.
ii. blockSequenceCounter (6)
(6) blockSequenceCounter 1
ECU NRC = $73 (WBSC)
18.2.5.3
In the case of in case the blockSequenceCounter value included in the request message which
received is not which of a value that was the same as that of the value received in the last process (6),
or added 1 to it, either, ECU should prepare negative response message with NRC = $73 (WBSC)
and execute reply response message specified at section 18.2.5.3.
iii. Service $34
18.2.6 Last_Length
blockSequenceCounter (6) blockSequenceCounter 1
ECU NRC = $73 (WBSC)
18.2.5.3
At the time of the condition of receiving the program code of the last of the program code specified by
Service $34. When the length of the request message which received is equal to the Last_Length
value calculated by 18.2.6. In the cases of other than the value which added 1 to the
blockSequenceCounter value which the blockSequenceCounter value included in the request
message which received in this condition received in the last process (6), ECU should prepare
negative response message with NRC = $73 (WBSC) and execute reply response message specified
at section 18.2.5.3.
iv. blockSequenceCounter (6)
ECU 18.2.5.3
When the blockSequenceCounter value included in the request message which received is the same
as the value received in the last process (6), ECU should prepare positive response message and
execute reply response message specified at section 18.2.5.3.
In addition, the program code which received cancels and writing does not execute.
(5) ( )
The check of the temperature at the time of reprogramming (It implements if needed)
a. ECU ECU NRC = $10
(GR) 18.2.5.3
ECU 22.5 "
"
Only the ECU which has temperature restrictions in reprogramming is inspected. When the temperature of
ECU is out of the reprogramming permissive temperature range, ECU should prepare negative response
message with NRC = $10 (GR) and execute reply response message specified at section 18.2.5.3. And the
reprogramming processing state of ECU is changed into the "Over-temperature is detected" of being
specified 22.5.
(6) (1) (5) ECU Download (FLASH ROM )
ECU 18.2.5.2
When check result doesn't match the above (1) to (5), ECU should judge requested Service is executable, ECU
should perform task specified in 18.2.5.2, ECU prepare positive message and execute reply response message
defined below.
a. 18.2.5.2 a ( ECU
) ECU NRC = $10 (GR)
18.2.5.3
At 18.2.5.2 a task case (ECU judges out of temperature Spec during memory writing or results checking),
ECU should prepare message with NRC = $10(GR) and reply response message specified at section
18.2.5.3.
b. 18.2.5.2 b ( ) ECU NRC = $72 (GPF)
18.2.5.3
At 18.2.5.2 b task case (writing results shows abnormal) ECU should prepare message with NRC =
$72(GPF) and reply response message specified at section 18.2.5.3.
c. 18.2.5.2 c ( Service $36 )
ECU 18.2.5.3
At 18.2.5.2 c task case (normal complete other than the last Service $36 request message), ECU should
prepare positive response message a reply specified at section 18.2.5.3.
d. 18.2.5.2 d ( Service $36 ) ECU
18.2.5.3
At 18.2.5.2 d task case, (the last Service $36 request message to writing complete), ECU should prepare
positive response message a reply specified at section 18.2.5.3.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The EB will not check the preconditons(over-temperature, over-voltage...)

Reprogramming status shall be fully managed in integration code</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-18_2_5_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(transferRequestParameterRecord)
ECU
When ECU judges it is possible to perform Download on 18.2.5.1, ECU should perform decrypt of program code, write
to memory and check written memory. Depending on the results, ECU should transfer by below conditions.
a. ECU
ECU ECU 22.5 "
"
When ECU detects temperature out of Spec during writing and checking, ECU should immediately stop task
and transfer to "Over-temperature is detected" defined by 22.5
b. ECU ECU 22.5 "
"
When abnormal is detected by results checking, ECU should transfer to "memory error detected" defined by
22.5.
c. Service $34 ECU
ECU 22.5 " "
When writing process is correctly finished besides the last program code, ECU should transfer to "during
program code received" defined by 22.5.
d. Service $34 ECU
ECU 22.5 " "
When writing process is correctly finished by the last program code, ECU should transfer to "finish of program
code received" defined by 22.5.
transferResponseParameterRecord
Address to write down "transferRequestParameterRecord" is shown below.
(1) Service $34 Service $36 ECU
Service $34 memoryAddress transferResponseParameterRecord
transferRequestParameter#1 transferRequestParameter#m
At the first service $36 request message reception after Service $34 positive response message, ECU should
write to memory address defined by Service 34 memoryAddress from transferRequestParameterRecord #1 to
#m.
(2) (1) ECU transferResponseParameterRecord
transferRequestParameter#1 transferRequestParameter#m
After (1) write transferRequestParameterRecord #1 to #m from next address of the last final address.


</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The EB will not check the preconditons(over-temperature, over-voltage...)

Reprogramming status shall be fully managed in integration code</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-18_2_5_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Reply response message
3
( or )
As described in section 3, not only by request message analysis results but also addressing type (physical or function
address) have influence on response message.
Table 18.4 18.2.5.1
Table 18.4 shows response message definition.
18.2.5.2 (P2CAN)
NRC = $78 (RCRRP)
18.2.7
When more time is needed to execution of the processing for 18.2.5.2 and it is not possible to respond positive
response message within P2CAN, ECU can request extension of positive response message by sending negative
response message with NRC = $78 (RCRRP). However, follow regulation of 18.2.7.
P2CAN NRC = $78 (RCRRP) TS-DCC01
Detail of negative response message of P2CAN, negative response message with NRC = $78 (RCRRP) should refer to
TS-DCC01 .
Table 18.4 Service $36
Service $36 Reply to request message
Request message check result
No 1) addressing Response message
Description type
(2)a i
(2)b i Physical (NRC $13)
(2)b ii Wrong message length Negative response
(2)b iii Function
(2)b iv
DiagnosticSession
(1)a Service $36 Physical (NRC $7F)
Current Diagnostic Session doesn't Negative response
support Service $36 Function
ECU
(3)a Physical (NRC $24)
(3)b ECU reprogramming status doesn't Negative response
accept writing. Function
ECU
" "
Service $36
(3)c Physical (NRC $71)
When the reprogramming status of Negative response
ECU was a " memory error Function
detected", Service $36 was
received again.
ECU
ECU
(3)d "
(5)a " Physical (NRC $10)
(6)a The temperature of ECU is not Negative response
reprogrammable. Or the Function
reprogramming status of ECU is in
"Over-temperature is detected".
Table 18.4 Service $36
Service $36 Reply to request message
Request message check result
No 1) addressing Response message
Description type
(4)a i
(4)a ii blockSequenceCounter Physical (NRC $73)
(4)b i blockSequenceCounter out of Spec. Negative response
(4)b ii Function
(4)b iii
(4)a iii Physical
(4)b iv Same program code as the last Positive response
time. Function
(6)b Physical (NRC $72)
Writing was not successful. Negative response
Function
Download (FLASH ROM
(6)c ) Physical
(6)d Requested Download (FLASH ROM Positive response
) executable Function
1) 18.2.5.1 No.
No. is corresponding to No. in section 18.2.5.1.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The EB will not check the preconditons(over-temperature, over-voltage...)

Reprogramming status shall be fully managed in integration code</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-18_2_6</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Message Length(Last_Length)
Service $34 memoryAddress memorySize ECU
(maxNumberOfBlockLength - 2) Service $36 transferRequestParameterRecord
An off-board tester divides the program code specified by memoryAddress and memorySize of Service $34 for every
number (maxNumberOfBlockLength - 2) of the specification program codes from ECU, and sends. In addition, the
divided program code is included and sent to transferRequestParameterRecord of Service $36.
Service $34 memoryAddress memorySize
Service $36 transferRequestParameterRecord
However, the program code sent by Service $36 which sends the last program code of the program code specified by
Service $34 is only an untransmitted program code.
memorySize (maxNumberOfBlockLength - 2)
Service $36 maxNumberOfBlockLength
Therefore, when (memorySize mod (maxNumberOfBlockLength - 2)) is not set to zero, the length of the Service $36
request message which transmits the last program code is different from maxNumberOfBlockLength.
memorySize (maxNumberOfBlockLength - 2) Service $36
Last_Length
When (memorySize mod (maxNumberOfBlockLength - 2)) is not set to 0, the Last_Length value calculated in the
following formulas is used for check of the Service $36 request message length who transmits the last program code.
Last_Length = memorySize mod (maxNumberOfBlockLength - 2) + 2
Example computation is shown below.
Last_Length
Last_Length example computation
memorySize=$1000 ( = 4096 ) (transmission capacity = 4096 byte)
maxNumberOfBlockLength=$182 (386) In the case of maxNumberOfBlockLength=$182 (386)
Last_Length = $1000 mod ($182 - 2) + 2
= $102
Service $34 Service $36
$182 (386) Service $36
$102 (258)
The length of the Service $36 request message which transmits the program code specified by Service $34
except for the last program code in the case of this example is $182 (386).
However, the length of the Service $36 request message which transmits the last program code is set to $102
(258).</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-18_2_7</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
ECU 22.7 Tc5
NRC = $78 (RCRRP)
When ECU requests extension of positive response message by sending negative response message with NRC = $78
(RCRRP), ECU should send within Tc5 positive message or NRC other than $78.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">Timming is HW and integration dependent (memory size, CPU speed, memory tehnology...) so can not be garanteed by the EB bootloader alone.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-18_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $36 Upload (FLASH ROM ) Service $35 memoryAddress
memorySize ( ) ECU
Service $36 (FLASH ROM data read out) is used to read out ECU program code.
blockSequenceCounter Service $36
ECU ECU
Off-board tester sends the number of read out program code to ECU by the Service $36 request message included
blockSequenceCounter. ECU replies by response message whether sends program code.
Service
This service is supported or not should be decided by the system.
Service
The service is limited to development.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EB bootloader doen't support Data Read out from flash (0x35 RequestUpload service).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-18_3_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 18.5 Service $36 Service $36 1
SID 1 blockSequenceCounter
Table 18.5 shows Service $36 request message format. which consists of 1 byte of SID and 1 byte
blockSequenceCounter.
Table 18.5 Service $36
Service $36 Request message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $36 SID M 36
Service $36 Request SID
#2 blockSequenceCounter M 00-FF</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EB bootloader doen't support Data Read out from flash (0x35 RequestUpload service).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-18_3_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 18.6 Service $36 Service $36
1 SID 1 blockSequenceCounter 256
transferResponseParameterRecord
Table 18.6 shows Service $36 positive response message format, which consists of 1 byte of SID and 1 byte of
blockSequenceCounter , 256 bytes of transferResponseParameterRecord.
ECU
After task execution, positive message should be sent.
Table 18.6 Service $36
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $36 SID M 76
Service $36 Positive response SID
#2 blockSequenceCounter M 00-FF
#3 transferResponseParameterRecord [] =[ transferResponseParameter#1 M 00-FF
: : : :
# 258 transferResponseParameter #256 ] M 00-FF</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EB bootloader doen't support Data Read out from flash (0x35 RequestUpload service).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-18_3_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
2.2.2
Negative response message should follow section 2.2.2.
18.3.4
Service $36
The section defines parameter for Service $36 message.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EB bootloader doen't support Data Read out from flash (0x35 RequestUpload service).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-18_3_4_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
blockSequenceCounter Service $36 1
blockSequenceCounter is 1 byte information included in service $36 request message. This indicates number of read
out program code.
blockSequenceCounter
Positive message should include number received.
Service $36 Service $35 memoryAddress memorySize
ECU
$35 Service $35 memoryAddress
memorySize Service $36
By Service $36, size of program code, which is possible to send at one transmission is max 4093 bytes but program
size defined by Service $35 is bigger. That's why the tester sends program code by repeating Service $36.
blockSequenceCounter Service $36
ECU Service $36 1
blockSequenceCounter = $FF Service $36 blockSequenceCounter $00
blockSequenceCounter is to inform ECU of number of transmission. When blockSequenceCounter reaches $FF, next
blockSequenceCounter is $00.
blockSequenceCounter (Service $35 Service $36
blockSequenceCounter) $01
Default value is $01.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EB bootloader doen't support Data Read out from flash (0x35 RequestUpload service).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-18_3_4_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
transferResponseParameterRecord Service $36 256
ECU
transferRequestParameterRecord is 256 bytes information included in Service $36 request message and meaning is
ECU program code.
transferResponseParameterRecord Service $35 memoryAddress
transferResponseParameter #1 #2....
Program code in transferRequestParameterRecord is starting from address defined by memoryAddress in Service $35
such as transferRequestParameterRecord #1, #2...
Service $36 transferResponseParameterRecord
ECU
Program code will NOT be decrypted.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EB bootloader doen't support Data Read out from flash (0x35 RequestUpload service).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-18_3_4_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 18.7 Service $36 NRC 18.3.5
Table 18.7 shows Service $36 NRC definition. Negative response should be refer to 18.3.5.
Table 18.7 Service $36 (Upload (FLASH ROM ))
Service $36 Negative response code definition
NRC (Hex) Description
incorrectMessageLengthOrInvalidFormat (IMLOIF)
13
Received message length or message structure doesn't suit Spec. .
requestSequenceError (RSE)
24 Service $35 Upload (FLASH ROM )
Service $37 Upload (FLASH ROM )
Upload is not yet released by Service $35. Or Service $37 finished the task.
wrongBlockSequenceCounter (WBSC)
73 blockSequenceCounter
blockSequenceCounter out of Spec.
serviceNotSupportedInActiveSession (SNSIAS)
7F DiagnosticSession Service $36
Current diagnostic Session doesn't support Service $36.
- Service 36 (Upload (FLASH ROM ) ) NRC = $78 (RCRRP)
Caution NRC=$78 (RCRRP) is not allowed. in Service 36(Upload).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EB bootloader doen't support Data Read out from flash (0x35 RequestUpload service).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-18_3_5</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $36 ECU
Reply from ECU should follow this description.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EB bootloader doen't support Data Read out from flash (0x35 RequestUpload service).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-18_3_5_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
(1) DiagnosticSession
DiagnosticSession analysis
a. ECU DiagnosticSession programmingSession ECU NRC = $7F (SNSIAS)
18.3.5.3
When diagnosticSession is not programmingSession, ECU should prepare negative response message with
NRC = $7F (SNSIAS) and execute reply response message specified at section 18.3.5.3.
(2)
Check length of request message
a. 2 ECU NRC = $13 (IMLOIF)
18.3.5.3
When received request message is NOT 2bytes, ECU should prepare negative response message with
NRC = $13 (IMLOIF) and execute reply response message specified at section 18.3.5.3.
(3) ECU The check of program code transmission status of ECU
a. 17.4.2 Upload (FLASH ROM ) ECU
NRC = $24 (RSE) 18.3.5.3
When permission of the Upload (FLASH ROM data read-out) processing specified to 17.4.2 is not being
executed, ECU should prepare negative response message with NRC = $24 (RSE) and reply response
message specified at section 18.3.5.3.
b. 19.4.2.2 Upload (FLASH ROM ) ECU NRC
= $24 (RSE) 18.3.5.3
When finishing of the Upload (FLASH ROM data read-out) processing specified to 19.4.2.2 is executed, ECU
should prepare negative response message with NRC = $24 (RSE) and reply response message specified at
section 18.3.5.3.
(4) blockSequenceCounter
blockSequenceCounter check
a. blockSequenceCounter (5) blockSequenceCounter ECU Service $36
18.3.5.2
18.3.5.3
When blockSequenceCounter value in received request message is the same as the one before, ECU
should perform the same task defined in 18.3.5.2, prepare positive message and reply response message
specified at section 18.3.5.3.
b. blockSequenceCounter (5) blockSequenceCounter 1 ECU NRC =
$73 (WBSC) 18.3.5.3
When blockSequenceCounter value in received request message is NOT +1 from the one before, ECU
should prepare negative response message with NRC = $73 (WBSC) and reply response message
specified at section 18.3.5.3.
(5) (1) (4) ECU Upload (FLASH ROM )
ECU 18.3.5.2
18.3.5.3
When check result doesn't match the above (1) to (4), ECU should judge it is possible to execute Upload
(FLASH ROM data read-out). ECU should perform task specified in 18.3.5.2, and prepare positive message and
reply as defined in 18.3.5.3.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EB bootloader doen't support Data Read out from flash (0x35 RequestUpload service).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-18_3_5_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service 36 (FLASH ROM )
Service $36(FLASH ROM data read out) doesn't request task except positive response message.
transferResponseParameterRecord
In addition, the program code included in transferResponseParameterRecord of a positive response message follows
below.
(1) 18.3.5.1 (4)a ECU
transferResponseParameterRecord
In case of 18.3.5.1 (4)a ECU should send program code the same as the last positive response message into
transferRequestParameterRecord.
(2) Service $35 Service $36 ECU
Service $35 memoryAddress 256
transferResponseParameterRecord
At first Service $36 request message reception ECU should send 256 bytes of program code into
transferRequestParameterRecord.
(3) (1) (2) ECU 256
transferResponseParameterRecord
When check result doesn't match the above (1) to (2), ECU should send 256 bytes program code from the next
address of the last transmission into transferRequestParameterRecord.
18.3.5.3 Reply response message
3
( or )
As described in section 3, not only by request message analysis results but also addressing type (physical or function
address) have influence on response message.
Table 18.8 18.3.5.1
Table 18.8 shows response message definition.
Table 18.8 Service $36
Service $36 Reply to request message
Request message check result
No 1) addressing Response message
Description type
(2)a Physical (NRC $13)
Wrong message length Negative response
Function
DiagnosticSession
(1)a Service $36 Physical (NRC $7F)
Current diagnostic Session doesn't Negative response
support Service $36. Function
(3)a Upload (FLASH ROM Physical (NRC $24)
(3)b ) Negative response
Failure in upload procedure Function
(4)b blockSequenceCounter Physical (NRC $73)
blockSequenceCounter out of Spec. Negative response
Function
(4)a Upload (FLASH ROM Physical
(5) ) Positive response
Requested Service is executable. Function
1) 18.3.5.1 No
No. is corresponding to No. in section 18.3.5.1.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EB bootloader doen't support Data Read out from flash (0x35 RequestUpload service).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-19_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $37 (RequestTransferExit service) TransferData service (Service $34 Service $36 ECU
( ) Service $35 Service $36 ECU ( )
) ECU
Service $37 (RequestTransferExit service) is used to inform ECU of end of program code transmission or end of
program code reading.
SID Service $37 ECU TransferData
service ECU TransferData service
Offboard tester requires the complete of ECU TransferData service.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-19_2_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 19.1 Service $37 Service $37 1
SID
Table 19.1 shows Service $37 request message format. which consists of 1 byte of SID only.
Table 19.1 Service $37
Service $37 Request message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $37 SID M 37
Service $37 Request SID</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-19_2_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 19.2 Service $37 Service $37
1 SID
Table 19.2 shows Service $37 positive response message format, which consists of 1 byte of SID only.
ECU
After task execution, positive message should be sent.
Table 19.2 Service $37
Service $37 Positive response message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service $37 SID M 77
Service $37 Positive response SID</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-19_2_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
2.2.2
Negative response message should follow section 2.2.2.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-19_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Service $37
Request message and Positive Response message of Service $37 has no parameter.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-19_3_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 19.3 Service $37 NRC 19.4
Table 19.3 shows Service $37 NRC definition. Negative response should be refer to 19.4.
Table 19.3 Service $37
Service $37 Negative response code definition
NRC (Hex) Description
incorrectMessageLengthOrInvalidFormat (IMLOIF)
13
Received message length or message structure doesn't suit Spec. .
requestSequenceError (RSE)
24 Service $34 (RequestDownload service) Service $35 (RequestUpload service)
Download (FLASH ROM ) Upload (FLASH ROM
)
Service $34 or Service $35 was not performed yet. Or Download or Upload can't be finished.
serviceNotSupportedInActiveSession (SNSIAS)
7F DiagnosticSession Service $37
Current diagnostic Session doesn't support Service $37.
- Service 37 NRC = $78 (RCRRP)
Caution NRC=$78 (RCRRP) is not allowed. in Service 37.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-19_4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $37 ECU Service $34 Service $36 Download (FLASH ROM
) Service $35 Service $36 Upload (FLASH ROM
)
ECU operation after receiving Service $37 is different.
Service $34 Service $36 Download (FLASH ROM ) Service $37
19.4.1 Service $35 Service $36 Upload (FLASH ROM ) Service $37
19.4.2
Download in case Service $34 and Upload if Service $35 and Service $36. Download service is shown in 19.4.1 and
Upload service is shown in 19.4.2.
Service $34 Service $35 Service $37 19.4.1
In addition, when Service $37 is received without Service $34 and Service $35 both receiving, should follow regulation
of 19.4.1.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-19_4_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $34 Service $36 Download (FLASH ROM ) Service $37
ECU
This section specifies reply processing of the response message which ECU which received the Service $37 request
message executes after Download (FLASH ROM data writing) by Service $34 and Service $36. In addition, perform
reply processing in order of this document.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-19_4_1_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(1) DiagnosticSession
DiagnosticSession analysis
a. ECU DiagnosticSession programmingSession ECU NRC = $7F (SNSIAS)
19.4.1.3
When diagnosticSession is not programmingSession, ECU should prepare negative response message with
NRC = $7F (SNSIAS) and execute reply response message specified at section 19.4.1.3.
(2)
Check length of request message
a. 1 ECU NRC = $13 (IMLOIF)
19.4.1.3
When received request message is NOT 1bytes, ECU should prepare negative response message with
NRC = $13 (IMLOIF) and execute reply response message specified at section 19.4.1.3.
(3) Reprogramming status check
a. ECU 22.5 " " " " "
" " " " " " " "
" " " ECU NRC=$24 (RSE)
19.4.1.3
When ECU programming status is "waiting for eraseMemory" or "waiting for program information", "memory
error detected", "waiting for download request", "waiting for program code received" , "during program code
received", "reprogramming normal complete"," Over-temperature is detected " ECU should prepare negative
response message with NRC = $24 (RSE) and reply response message specified at section 19.4.1.3.
(4) (1) (3) ECU RequestTransferExit service
ECU 19.4.1.2
19.4.1.3
When check result doesn't match the above (1) to (3), ECU should judge it is possible to execute
RequestTransferExit service. ECU should perform task specified in 19.4.1.2, and prepare positive message and
reply as defined in 19.4.1.3.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The EB will not check the preconditons(over-temperature, over-voltage...)

Programming status should be managed in integration code.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-19_4_1_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Download (FLASH ROM ) ECU
When ECU judges it is possible to execute RequestTransferExit service on 19.4.1.1, ECU should finish Download and
ECU should transfer by below conditions.
(1) ECU 22.5 " "
When Current reprogramming status is "waiting for program code failure detection", ECU should keep current
reprogramming status.
(2) ECU 22.5 " " "
" ECU 22.5 " "
When current reprogramming status is " finish of program code received" or " finish of download ", ECU should
transfer to "finish of download"
15.5.2
ECU 22.5 "
"
And if program code writing to all erased memory area, ECU should transfer to "waiting for program code failure
detection"
19.4.1.3 Reply response message
3
( or )
As described in section 3, not only by request message analysis results but also addressing type (physical or function
address) have influence on response message.
Table 19.4 19.4.1.1
Table 19.4 shows response message definition.
Table 19.4 Service $37
Service $37 Reply to request message
Request message check result
No 1) addressing Response message
Description type
(2)a Physical (NRC $13)
Wrong message length Negative response
Function
DiagnosticSession
(1)a Service $37 Physical (NRC $7F)
Current Diagnostic Session doesn't Negative response
support Service $37. Function
Download (FLASH ROM
)
Service $34 Download
(3)a (FLASH ROM ) Physical (NRC $24)
Negative response
Mistake in Download finish Function
procedure or Download task by
service $34 not released.
RequestTransferExit
(4) service Physical
Requested RequestTransferExit Positive response
service executable Function
1) 19.4.1.1 No.
No. is corresponding to No. in section 19.4.1.1.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">Programming status should be managed in integration code.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-19_4_1_3</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
 Reply response message
3
( or )
As described in section 3, not only by request message analysis results but also addressing type (physical or function
address) have influence on response message.
Table 19.4 19.4.1.1
Table 19.4 shows response message definition.
Table 19.4 Service $37
Service $37 Reply to request message
Request message check result
No 1) addressing Response message
Description type
(2)a Physical (NRC $13)
Wrong message length Negative response
Function
DiagnosticSession
(1)a Service $37 Physical (NRC $7F)
Current Diagnostic Session doesn't Negative response
support Service $37. Function
Download (FLASH ROM
)
Service $34 Download
(3)a (FLASH ROM ) Physical (NRC $24)
Negative response
Mistake in Download finish Function
procedure or Download task by
service $34 not released.
RequestTransferExit
(4) service Physical
Requested RequestTransferExit Positive response
service executable Function
1) 19.4.1.1 No.
No. is corresponding to No. in section 19.4.1.1.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-19_4_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $35 Service $36 Upload (FLASH ROM ) Service $37
ECU
This section specifies reply processing of the response message which ECU which received the Service $37 request
message executes after Upload (FLASH ROM data read-out) by Service $35 and Service $36. In addition, perform
reply processing in order of this document.
Service
This service is supported or not should be decided by the system. The service is limited to development.
- Service
Caution - the service is only for development.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Upload service not supported</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-19_4_2_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(1) DiagnosticSession
DiagnosticSession analysis
a. ECU DiagnosticSession programmingSession ECU NRC = $7F (SNSIAS)
19.4.2.3
When diagnosticSession is not programmingSession, ECU should prepare negative response message with
NRC = $7F (SNSIAS) and execute reply response message specified at section 19.4.2.3.
(2)
Check length of request message
a. 1 ECU NRC = $13 (IMLOIF)
19.4.2.3
When received request message is NOT 1bytes, ECU should prepare negative response message with
NRC = $13 (IMLOIF) and execute reply response message specified at section 19.4.2.3.
(3) ECU Upload (FLASH ROM )
ECU program upload status check
a. 17.4.2 Upload (FLASH ROM ) ECU NRC =
$24 (RSE) 19.4.2.3
When Upload task defined by 17.4.2 is not released, ECU should prepare negative response message with
NRC = $24 (RSE) and reply response message specified at section 19.4.2.3.
b. Service $35 ECU NRC
= $24 (RSE) 19.4.2.3
When Upload task defined by Service $35 is on going, ECU should prepare negative response message
with NRC = $24 (RSE) and reply response message specified at section 19.4.2.3.
(4) (1) (3) ECU RequestTransferExit service
ECU 19.4.2.2
19.4.2.3
When check result doesn't match the above (1) to (3), ECU should judge it is possible to execute
RequestTransferExit service. ECU should perform task specified in 19.4.2.2, and prepare positive message and
reply as defined in 19.4.2.3.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">Upload service not supported</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-19_4_2_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Upload (FLASH ROM )
When ECU judges it is possible to perform Upload on 19.4.2.1, ECU should finish Upload task.
</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Upload service not supported</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-19_4_2_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
 Reply response message
3
( or )
As described in section 3, not only by request message analysis results but also addressing type (physical or function
address) have influence on response message.
Table 19.5 19.4.2.1
Table 19.5 shows response message definition.
Table 19.5 Service $37
Request message check result
No 1) addressing Response message
Description type
(2)a Physical (NRC $13)
Wrong message length Negative response
Function
DiagnosticSession
(1)a Service $37 Physical (NRC $7F)
Current Diagnostic Session doesn't Negative response
support Service $37. Function
Upload (FLASH ROM Physical (NRC $24)
(3)a ) Negative response
Mistake in Upload procedure. Function
Service $35 Upload (FLASH
(3)b ROM ) Physical (NRC $24)
Negative response
Upload not released by Service $35. Function
RequestTransferExit Physical
(4) service Positive response
Requested Service is executable. Function
1) 19.4.2.1 No
No. is corresponding to No. in section 19.4.2.1.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Upload service not supported</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-20_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $23 (ReadMemoryByAddress service) RAM EEPROM
( Service $23 )
Service $23 (ReadMemoryByAddress service) is used to read out requested RAM or EEPROM. (not for program code
read out).
addressAndLengthFormatIdentifier memoryAddress memorySize
ECU memoryAddress memorySize RAM EEPROM
The off-board tester requires read-out of the value currently written in RAM or EEPROM specified as ECU by
memoryAddress and memorySize by the request message included addressAndLengthFormatIdentifier,
memoryAddress, and memorySize.
ECU memoryAddress memorySize RAM EEPROM
ECU includes and returns the value currently written in RAM or EEPROM corresponding to memoryAddress and
memorySize which were specified to a response message. Or ECU includes and returns the information which
indicates not returning the information corresponding to a request message to a response message.
Service Tool
Type IV
This Service is for development and field. When it is used for the field, it must be protected by Security (Type IV).
6 "Service $27 (SecurityAccess service)"
Service $23
If Service $23 is supported or not should be defined by the system.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x23 ReadMemoryByAddress service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-20_2_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 20.1 Service $23 Service $23 1
SID 1 addressAndLengthFormatIdentifier 1 memoryAddress 1
memorySize
Table 20.1 shows Service $23 request message format, which consists of SID, 1 bytes of
addressAndLengthFormatIdentifier, 1 or more bytes of memoryAddress and 1 or more bytes of memorySize.
Table 20.1 Service $23
Service $23 Request message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service$23 SID M 23
Service $23 Request SID
#2 addressAndLengthFormatIdentifier M 00-FF
#3 memoryAddress[ ] = [ byte #1 (MSB) M 00-FF
: : : :
#m+2 byte #m (LSB)] U1 00-FF
#n-(k-1) memorySize [ ] = [ byte #1 (MSB) M 00-FF
: : : :
#n byte #k (LSB)] U2 00-FF
U1: memoryAddress
Depending on memoryAddress bytes defined by the system.
U2: memorySize
Depending on memorySize bytes defined by the system.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x23 ReadMemoryByAddress service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-20_2_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 20.2 Service $23 Service $23 1
SID 1 dataRecord
Table 20.2 shows Service $23 positive response message format. The message contains 1 byte of positive response
message SID, minimum 1 byte of dataRecord.
ECU memoryAddress memorySize RAM EEPROM
dataRecord
ECU which received the request message includes and returns the value currently written in RAM or EEPROM
specified by memoryAddress and memorySize to dataRecord.
Table 20.2 Service $23
Service $23 Positive response message definition
Hex
Data Byte Parameter Cvt Hex
value
#1 Service$23 SID M 63
Service $23 Positive response SID
#2 dataRecord[ ] = [ data #1 M 00-FF
: : : :
#n data #m ] U 00-FF
U: memorySize
depending on memorySize.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x23 ReadMemoryByAddress service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-20_2_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
2.2.2
Negative response message should follow section 2.2.2.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x23 ReadMemoryByAddress service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-20_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $23
The section defines parameter for Service $23 message.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x23 ReadMemoryByAddress service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-20_3_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
addressAndLengthFormatIdentifier Service $23 1 4 bit
memorySize 4 bit memoryAddress
addressAndLengthFormatIdentifier is 1 byte information. higher 4 bits indicates byte of memorySize and lower 4 bits
byte of memoryAddress.
addressAndLengthFormatIdentifier Tool
addressAndLengthFormatIdentifier should be defined by the system.
Engine ECU addressAndLengthFormatIdentifier = $14 (memorySize = 1 memoryAddress = 4
)
example of Engine: addressAndLengthFormatIdentifier = $14 (memorySize 1 byte, memoryAddress 4 bytes)</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x23 ReadMemoryByAddress service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-20_3_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
memoryAddress Service $23 1 ECU RAM
EEPROM
memoryAddress is minimum 1byte information showing start address of RAM or EEPROM to be read out.
memoryAddress byte #1 (MSB) byte #m (LSB)
Byte #1 is indicating highest byte (MSB).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x23 ReadMemoryByAddress service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-20_3_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
memorySize Service $23 1 ECU RAM
EEPROM memorySize byte #1 (MSB) byte #k
(LSB)
memorySize is minimum 1byte information showing number of bytes of RAM or EEPROM to be read out. Byte #1 is
indicating highest byte (MSB)
memorySize Tool
Max number of memorySize should be defined by the system.
Engine ECU memorySize 4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x23 ReadMemoryByAddress service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-20_3_4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
dataRecord Service $23 1 memoryAddress
memorySize RAM EEPROM dataRecord data #1 memoryAddress
data #m memoryAddress memorySize
dataRecord is minimum 1 byte information included in Service $23 positive response message. This is requested RAM
or EEPROM data.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x23 ReadMemoryByAddress service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-20_3_5</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Table 20.3 Service $23 NRC 20.4
Table 20.3 shows Service $23 NRC definition. Negative response should be refer to 20.4.
Table 20.3 Service $23
Service $23 Negative response code definition
NRC (Hex) Description
incorrectMessageLengthOrInvalidFormat (IMLOIF)
13
Received message length or message structure doesn't suit Spec. .
requestOutOfRange (ROOR)
(1) AddressAndLengthFormatIdentifier
AddressAndLengthFormatIdentifier out of Spec.
31 (2) memorySize
memorySize out of Spec.
(3) memoryAddress memorySize
memoryAddress and memorySize not appropriate.
securityAccessDenied (SAD)
33 Type IV
Security is not released.
requestCorrectlyReceived-ResponsePending (RCRRP)
( NRC
78 )
Due to execution of requested task it is not possible to respond positive response or negative
response with appropriate NRC. Extension of time to reply for response message is requested.
TS-DCC01
Detail should refer to TS-DCC01 .
serviceNotSupportedInActiveSession (SNSIAS)
7F DiagnosticSession Service $23
Current diagnostic Session doesn't support Service $23.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x23 ReadMemoryByAddress service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-20_4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $23 ECU
Reply from ECU should follow this description.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x23 ReadMemoryByAddress service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-20_4_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
(1) DiagnosticSession (Service $23 DiagnosticSession )
DiagnosticSession analysis (valid for ECU, which has a certain diagnosticSession with no Service $23)
a. DiagnosticSession Service $23 ECU NRC = $7F (SNSIAS)
20.4.3
When current diagnosticSession doesn't support service $23, ECU should prepare negative response with
NRC = $7F (SNSIAS) and execute reply response message specified at section 20.4.3.
(2)
Check length of request message
a. (Engine ECU 7) ECU NRC = $13
(IMLOIF) 20.4.3
When received request message is different from specified value by system, ECU should prepare negative
response message with NRC = $13 (IMLOIF) and execute reply response message specified at section
20.4.3.
Request message length should be defined by the system.
(3) ( )
Security check (must for mass product)
a. ECU Type IV ( )
ECU NRC = $33 (SAD) 20.4.3
When ECU is in mass product state and Type IV security is not released (or fail to release), ECU should
prepare negative response message with NRC = $33 (SAD) and execute reply response message specified
at 20.4.3.
6 "Service $27 (SecurityAccess service)"
Detail of security access is described in section 6 "Service $27 (SecurityAccess service)".
- ( Type IV )
Caution - This inspecting is unnecessary during development. (During development, even if the security
of Type IV is not released, execution of this service is possible.)
(4) AddressAndLengthFormatIdentifier
AddressAndLengthFormatIdentifier check
a. AddressAndLengthFormatIdentifier (Engine ECU $14) ECU NRC = $31
(ROOR) 20.4.3
When addressAndLengthFormatIdentifier is not within specified value, ECU should prepare negative
response message with NRC = $31(ROOR) and execute reply response message specified at section
20.4.3.
AddressAndLengthFormatIdentifier
addressAndLengthFormatIdentifier should be defined by the system.
(5) memorySize
memorySize check
a. memorySize (Engine ECU $01 $04) ECU NRC = $31 (ROOR)
20.4.3
When memorySize is not within specified value, ECU should prepare negative response message with NRC
= $31(ROOR) and execute reply response message specified at section 20.4.3.
memorySize
memorySize should be defined by the system.
(6) memoryAddress memorySize
memoryAddress and memorySize check
a. memoryAddress memorySize RAM
EEPROM ECU NRC = $31 (ROOR)
20.4.3
When part or all of address, which is specified by memoryAddress and memorySize are not readable RAM
or EEPROM address, ECU should prepare NRC = $31 (ROOR), and reply as specified in 20.4.3.
RAM EEPROM
Readable RAM and EEPROM address should be specified by the system.
(7) (1) (6) ECU ReadMemoryByAddress service
ECU 20.4.2
20.4.3
When message doesn't match the above (1) to (6), ECU should judge it is possible to execute
ReadMemoryByAddress service. ECU should execute task defined in 20.4.2 and prepare positive message and
reply as defined in20.4.3.
20.4.2
Service $23 doesn't request task except positive response message.
20.4.3 Reply response message
3
( or )
As described in section 3, not only by request message analysis results but also addressing type (physical or function
address) have influence on response message.
Table 20.4 20.4.1
Table 20.4 shows response message definition.
(P2CAN) ( EEPROM ) NRC = $78 (RCRRP)
When more time is needed to prepare memory data and it is not possible to respond positive response message within
P2CAN, ECU can request extension of positive response message by sending negative response message with NRC =
$78 (RCRRP).
P2CAN NRC = $78 (RCRRP) TS-DCC01
Detail of negative response message of P2CAN, negative response message with NRC = $78 (RCRRP) should refer to
TS-DCC01 .
Table 20.4 Service $23
Service $23 Reply to request message
Request message check result
No 1) addressing Response message
Description type
DiagnosticSession
(1)a Service $23 Physical (NRC $ )
Current Diagnostic Session doesn't Negative response
support Service $23 Function
(2)a Physical (NRC $13)
Wrong message length Negative response
Function
(3)a Physical (NRC $33)
Security not released Negative response
Function
(NRC $31)
AddressAndLengthFormatIdentifier Physical Negative response
(4)a AddressAndLengthFormatIdentifier ( )
out of Spec. (NRC $31)
Function No Response(Recommendation)
or Negative response
(NRC $31)
(5)a memorySize Physical Negative response
memorySize out of Spec. ( )
Function (NRC $31)
memoryAddress memorySize (NRC $31)
Physical Negative response
(6)a The address range specified by ( )
memoryAddress and memorySize is (NRC $31)
out of the rated value range. Function No Response(Recommendation)
or Negative response
ReadMemoryByAddress
(7) service Physical
Requested ReadMemoryByAddress Positive response
service executable Function
1) 20.4.1 No.
No. is corresponding to No. in section 20.4.1.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x23 ReadMemoryByAddress service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-20_5</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
Service $23
Example to read out by Service $23.
ECU $FFFF0000 $FFFF7FFF (32kbyte) RAM $FFFF8000
$FFFF80FF (256byte) EEPROM ECU Table 20.5
Address $FFFF0000 to $FFFF7FFF (32Kbytes) are area for RAM and address $FFFF8000 to $FFFF80FF (256 bytes)
are EEPROM and data shown in Table 20.5 are stored.
Table 20.5 ECU ECU memory map
Memory Address Hex
(Hex) Hex value Note
:
FFFF7FFA 23 RAM
FFFF7FFB 81
FFFF7FFC F4
FFFF7FFD A1
FFFF7FFE B8
FFFF7FFF 9C
FFFF8000 11 EEPROM
FFFF8001 DD
FFFF8002 EE
FFFF8003 77
FFFF8004 80
:
$FFFF7FFF 2byte

ECU $FFFF7FFF RAM $FFFF8000 EEPROM dataRecord
ECU returns the positive response message which included the value of RAM of address $FFFF7FFF, and EEPROM
of $FFFF8000 in dataRecord.
Table 20.6 $FFFF7FFF 2byte
example: 2bytes from $FFFF7FFF
Hex
Data Byte Parameter Hex
value
#1 Service$23 SID 23
Service $23 Request SID
#2 addressAndLengthFormatIdentifier 14
#3 memoryAddress[ ] = [ byte #1 (MSB) FF
#4 byte #2 FF
#5 byte #3 7F
#6 byte #4 (LSB)] FF
#7 memorySize[ ] = [ byte#1 ] 02
Table 20.7 $FFFF7FFF 2byte
example: 2bytes from $FFFF7FFF
Hex
Data Byte Parameter Hex
value
#1 Service$23 SID 63
Service $23 Positive repose SID
#2 dataRecord[ ] = [ data #1 9C
#3 data #2 ] 11</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">The 0x23 ReadMemoryByAddress service is not supported by the EB Bootloader (should be managed by the customer).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-21</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
ECU Service
This section prescribes return of Service which ECU does not support.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-21_1_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Table 21.1 Service NRC 21.2
Table 21.1 shows definition of NRC of not supported Service. About negative Response message should refer to 21.2.
Table 21.1 Service
Negative response code definition for Not supported Service
NRC (Hex) Description
serviceNotSupported (SNS)
11 Service
Requested service is not supported.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-21_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Service ECU
Reply from ECU should follow this description.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-21_2_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(1) Service ECU NRC = $11 (SNS)
21.2.2
When not supported Service is received, ECU should prepare NRC = $11 (SNS), and reply as specified in
21.2.2.
21.2.2 Reply response message
3
( or )
As described in section 3, not only by request message analysis results but also addressing type (physical or function
address) have influence on response message.
Table 21.2 21.2.1
Table 21.2 shows response message definition.
Table 21.2 Service
Response message for Not supported Service
Request message check result
No 1) addressing Response message
Description type
(NRC $11)
(1) Service Physical Negative response
Requested Service is not supported
Function No response
1) 21.2.1 No.
No. is corresponding to No. in section 21.2.1.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-22</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
HDC_CAN ECU
The section describes ECU requirement, which has reprogramming function with HDC_CAN protocol.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-22_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
ECU (SAE J1962 )
( ) ECU
The communication line for diagnosis of ECU which implements a reprogramming function is connected with external
reprogramming equipment (off-board tester) through the connector for diagnosis (based on SAE J1962).
Reprogramming of ECU software is executed using this communication line.
Diagnosis communication line
CAN
Communication interface is CAN.
ECU OFF
( ) 33
ECU is requested not to communicate with the offboard tester when IG is off. 33
Fig. 22-1 ECU
Fig. 22-1 shows HW interface with vehicle for reprogramming ECU.
Fig. 22-1 The example of signal wire connection with vehicles
33
OFF/ON OFF
ECU
At reprogramming process, at the end of the session IG-OFF/ON operation is executed. At that stage the offboard
tester judges IG-OFF by no reply from the ECU.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">This is not a requirement for the bootloader (hardware requirement).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-22_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
ECU ECU ( )
ECU reprogramming should work under at ECU operating environment.
e.g. voltage , temperature</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">This is not a requirement for the bootloader.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-22_3</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
 Maximum number of reprogramming
100
100 times (min) must be possible.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">This is not a requirement for the bootloader (hardware related requirement).</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-22_4</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
reprogramming
ECU ECU (
OFF ) ECU
As for ECU, application software will be destroyed if an ECU power supply is shut off while reprogramming. The
correspondence which does not need to exchange ECUs even if application software will be destroyed is called
"correspondence to the power down during reprogramming." ECU which implements a reprogramming function must
be able to perform "correspondence to the power down during reprogramming."
ECU ECU (ECU )
"Correspondence to the power down during reprogramming" makes reprogramming possible again by ECU starting,
also after application software is destroyed.
ECU
BOOT
The software of ECU which generally implements reprogramming function consists of " Software which judges starting
of BOOT or application", "BOOT software ", and "Reprogramming software" other than " Application software " which
execute the usual system control.
The following processing are implemented in each software.
Software which judges starting of BOOT or application
ECU
Software which operates at the time of ECU starting. Processing which judges whether the last reprogramming
was completed normally is implemented.
Application software
ECU
DiagnosticSession programmingSession
Software which operates when the last reprogramming is completed normally. In addition to the usual system
control, reprogramming related processing which DiagnosticSession of ECU uses except programmingSession is
implemented.
BOOT BOOT software
ECU DiagnosticSession programmingSession
Software which operates when the last reprogramming is not completed normally. System control processing
which a system defines as changing vehicles into safe condition, and reprogramming related processing which
DiagnosticSession of ECU uses except programmingSession are implemented.
Reprogramming software
ECU DiagnosticSession programmingSession (
ECU )
Software for which the DiagnosticSession of ECU operates by programmingSession. Reprogramming related
processing (almost all processing for reprogramming ECU software, such as erasing, writing, etc. of a program
code) is implemented.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-22_4_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
reprogramming
ECU
Operation of ECU which can correspond to the power down during reprogramming is shown below.
(1) ECU
Process (1)
At the time of ECU starting, Software which judges starting of BOOT or application is started and it is
inspected whether the last reprogramming was completed normally.
(2) (1) ECU
Process (2)
The operating state of self-ECU is made to change to the following according to the test result of a process
(1).
- When reprogramming is judged to be a normal end
" "
Start Application software, it is made to change to "application mode", and the usual system control is
performed.
- When it is judged that the normal end of the reprogramming has not been done
BOOT "BOOT "
Start BOOT software and it is made to change to "BOOT mode", and system control is performed so
that the safety of vehicles can be maintained.
(3) Service $10 diagnosticSessionType = programmingSession ($02)
" " "BOOT " " "
Process (3)
Reprogramming software is started by diagnosticSessionType = programmingSession ($02) of Service $10
from off-board tester. Start reprogramming software and it is made to change from "application mode" or
"BOOT mode" to a "reprogramming mode", and system control and reprogramming are performed so that
vehicles may be changed into safe condition. It is made by this to change from "application mode" or
"BOOT mode" to "reprogramming mode", and system control which changes vehicles into safe condition is
performed, and reprogramming is performed.
In addition, the judgment of whether the last reprogramming was completed normally is judged on condition of the
following.
" " "
"
Success When the last reprogramming processing is completed by "before
memory clear" or " normal by error detection processing of the program code".
" " "
"
Failure When the last reprogramming processing is stops between "
eraseMemory " and "success of "normal by error detection processing of the program
code".
Table 22.1 ECU
The operating state definition of ECU is shown in Table 22.1.
ECU ( ON ) ECU " "
When ECU is turned on (it contains also when an ignition switch is turned on), regardless of the current ECU condition,
it changes in "un-judged mode".
Table 22.1 ECU Operating state definition of ECU
Name of operating state Definition of operating state
ECU ( ON ) "
" defaultSession 1)
un-judged mode From power supply ON of ECU, or changes to defaultSession from a "reprogramming
mode", Until the good-or-bad judging of the last reprogramming by software
finishes.
" "
After the judgment by becomes
application mode "the last reprogramming success" until it shifts to "reprogramming mode".
ECU
ECU of this condition performs the usual system control by application software.
" "
After the judgment by becomes
BOOT "the last reprogramming failure" until it shifts to "reprogramming mode".
Boot mode ECU BOOT
ECU of this condition performs system control by BOOT software. The system control at
this time defines vehicles as being in safe condition by a system.
" " ECU ( OFF
) defaultSession 1) " "
After ECU changes to "reprogramming mode" until it change to "unjudged mode", by cut
reprogramming mode off of battery power supply, ignition OFF, or changes to defaultSession.
ECU
ECU of this condition performs system control by reprogramming software. The system
control at this time defines vehicles as being in safe condition by a system.
1) (S3Server) Service $11 " OFF"
" " ECU defaultSession
Changes to defaultSession by timeout of session timer (S3Server), or the ECU reset execution by Service $11
request message.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EB Bootloader calls a callback to check if the application is valid. The callback and the check shall be implemented by customer.

ECU operating states shall be part of the integration</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-22_4_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
Service $10 diagnosticSessionType = programmingSession ($02)
4.5 " ECU "
Starting of reprogramming control software is performed by diagnosticSessionType = programmingSession ($02) of
Service $10. For details, refer to the section 4.5 "Requirement for reprogrammable ECU".
CPU
programmingSession
Because the CPU resources which can use reprogramming control software are restricted, they can execute no
required control. Therefore, this problem is avoided by defining the vehicles operating condition to which the changes
to programmingSession are permitted, and implementing only required minimum system control under those
conditions.
ECU Service $10 diagnosticSessionType = programmingSession ($02)
Service $22 ECU
Previous, an off-board tester reads vehicles condition from ECU using Service $22, and checks whether the changes
to programmingSession are possible. After that, an off-board tester requires the request message of
diagnosticSessionType = programmingSession ($02) of Service $10 of ECU.
Vehicles operating condition to which reprogramming is permitted should be defined by the system.
ECU (1) (4)
(1) (4)
ECU which started reprogramming software should continue operation by reprogramming software until following either
of (1) to (4) occurs. In addition, Software which judges starting of BOOT or application is started when following either
of (1) to (4) occurs.
(1) (S3Server)
Session Timer (S3Server) time out
(2) OFF
IG sw off.
(3)
Battery cut.
(4) Service $11 " OFF" " "
ECU
Execution of the ECU reset by Service $11 request.
Fig. 22-2
Fig. 22-2 shows about the manner of a software change.
ON
Ignition switch ON
un-judged mode
)
Application software Software which judges starting of
has broken. BOOT or application Application software
is written in normally.
BOOT BOOT mode application mode
BOOT ) )
(BOOT software) (Application software)
ECU Reset or S3 time out
ECU
S3
programmingSession programmingSession
The changes request to The changes request to
programmingSession programmingSession
reprogramming mode
)
(Reprogramming software)
Ignition switch OFF
OFF
Fig. 22-2 ECU ECU operating state diagram</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EB Bootloader call a callback to request the pre-condition check. Bootloader customer is responsible to implement the condition checks.  

EB Bootloader calls a callback to check if the application is valid. The callback and the check shall be implemented by customer

ECU operating states shall be part of the integration</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-22_5</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
At reprogramming, in order to protect against unauthorized reprogramming and guarantee right program codes,
security access control and status at each reprogramming step to limit transaction at each status and mode transfer.
Table 22.2 Fig. 22-3 ECU
Table 22.2 shows definition of each status and Fig. 22-3 shows state diagram to describe overview of ECU
reprogramming.
Table 22.2
Status definition at reprogramming handling
Status Definition
defaultSession ECU DiagnosticSession defaultSession
DiagnosticSession of ECU is defaultSession.
ECU DiagnosticSession extendedDiagnosticSession Type I
Security lock state After DiagnosticSession of ECU turns into extendedDiagnosticSession until it judges the
security of Type I release or not.
Type I ECU DiagnosticSession
defaultSession
After detecting unauthorized access with Security Type I, until DiagnosticSession of ECU
Security access refusal changes to defaultSession.
state Type I 6.5 "
"
In addition, the details about cancellation of the unauthorized access history of the
security Type I are refer to section 6.5 " unauthorized access."
Type I ECU DiagnosticSession defaultSession
programmingSession programmingSession
After releasing the security of Type I, until DiagnosticSession of ECU changes to
defaultSession or programmingSession.
Type I 6.6"
"
In addition, the details about the end of release of security Type I are refer to section 6.6
"End of security release".
ECU DiagnosticSession programmingSession Service $31
(routineIdentifier = eraseMemory)
waiting for eraseMemory After DiagnosticSession of ECU turns into programmingSession until erasing processing
of a program memory is completed by Service $31 (routineIdentifier = eraseMemory).
Service $2E (dataIdentifier = $ F101 (
waiting for program ))
information After erasing processing of a program memory carries out a normal end, until it receives
Service $2E (dataIdentifier = $ F101 (program information)).
Service $2E (dataIdentifier = $ F101 ( )) Service $34
waiting for download After receiving Service $2E (dataIdentifier = $ F101 (program information)), until it
request receives Service $34.
waiting for program code Service $34 Service $36
received Until it receives Service $36 for Service $34 after received.
Service $36 Service $34
during program code Until it judges that received and the writing of all the program codes which were specified
received by Service $34 were completed after the received start of Service $36.
Table 22.2
Status definition at reprogramming handling
Status Definition
Service $34
finish of program code Service $37
received After judging that received and the writing of all the program codes which were specified
by Service $34 were completed, until it receives Service $37.
Service $37 Service $31 (routineIdentifier = eraseMemory)
finish of download After receiving Service $37, until it judges that received and the writing of all the program
codes of the program memory area erased by Service $ 31 (routineIdentifier =
eraseMemory) carried out the normal end.
Service $31 (routineIdentifier = eraseMemory)
Service $31 (routineIdentifier
= checkProgrammingDependencies)
Waiting for After judging that received and the writing of all the program codes of the program
checkProgrammingDepe memory area erased by Service $31 (routineIdentifier = eraseMemory) carried out the
ndencies normal end, Until error detection processing of the program code by Service $ 31
(routineIdentifier = checkProgrammingDependencies) is completed.
Service $31 (routineIdentifier = checkProgrammingDependencies)
OFF
reprogramming normal defaultSession 1)
complete After judging that it is normal by error detection processing of the program code by
Service $31 (routineIdentifier = checkProgrammingDependencies), it is a period to cut off
of battery power supply, ignition OFF, or the changes to defaultSession1).
Service $31 (routineIdentifier =
eraseMemory)
memory error detected OFF defaultSession 1)
After failure memory erasing, program memory writing or error detection processing of a
program code, it is before program memory erase by Service $31, cut off of battery power
supply, ignition OFF, or the changes to defaultSession1).
OFF
defaultSession 1)
After it is judged as the outside of the reprogramming permissive temperature range by
program memory erase processing or program memory writing processing, it is before cut
off of battery power supply, ignition OFF, or the changes to defaultSession1).
Over-temperature is
detected ECU Service $31 (routineIdentifier = eraseMemory)
In addition, ECU of this state does not perform program memory erase processing by
Service $31 (routineIdentifier = eraseMemory).
1) (S3Server) Service $11 " OFF"
" " ECU defaultSession
Changes to defaultSession by timeout of session timer (S3Server), or the ECU reset execution by Service $11
request message.
IGSW OFF S3 ECU defaultSession
ECU
defaultSession
extendedDiagnosticSession
IGSW OFF ECU
programmingSession
programmingSession programmingSession
IGSW OFF S3
ECU
A
*1
A
*1;
Fig. 22-3
In this figure, IGSW OFF, S3 timeout, and the defaultSession changes by execution of ECU reset processing are not
indicated. And this figure is prepared in order to help an understanding about control of ECU, and it does not express
all the requests.
defaultSession
extendedDiagnosticSession
Security lock state Unauthorized When unauthorized access is
access detected, this history is held to
Security release. execution of IGSW OFF or
Waiting for ECU reset processing.
programmingSession
change
changes to programmingSession
It became the programmingSession
temperature
environment in which
reprogramming is
Memory erase impossible. There are no change
success states other than IGSW
OFF, S3 timeout, and ECU
Memory erase failure reset processing.
Waiting for programming
information
Program information received A
Memory erase
success
Download request received
Waiting for Memory write
failure
programming code
Program code
received
Memory write
failure
Download request The completion of program
received *1 code received
A
notification of termination of
download is received.
All the area write in ends
The result of
The result of checkProgramming
checkProgramming Dependencies is failure.
Dependencies is successful.
*1; When the area to write in is divided into several, a download request is performed again.
Fig. 22.3 example of a state transition diagram of software reprogram processing</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EB bootloader is proposing callback for the programming secquence configuration.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-22_6</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
ECU ECU
When ECU was shut down during reprogramming and is turned on, ECU can't do normal system control since software
loading was not completed. This section specifies requirement at "BOOT status"
"BOOT " ECU
This section specifies requirement at "BOOT mode"</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement. </Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-22_6_1</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
System is controlled by the default control, which is defined by the system.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EB bootloader doesn't assure the system control</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">HondaDiagnostics-22_6_2</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">EN:
ECU
Following request message should be supported to enable reprogramming and unnecessary replacement.</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">Not a requirement</Data></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReqRejected"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-22_6_2_1</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(1) (7)
Support the following request message of (1) to (7).
(1) Service $10 diagnosticSessionType = extendedDiagnosticSession ($03) diagnosticSessionType =
programmingSession ($02)
Service $10 diagnosticSessionType = extendedDiagnosticSession ($03)
diagnosticSessionType = programmingSession ($02)
(2) Service $27 Type I
Service $27 Type I security.
(3) Service $28 controlType = disableRxAndTx ($03) communicationType = NWMCM and NCM 34 ($03)
Service $28 controlType = disableRxAndTx ($03) communicationType = NWMCM and NCM 34 $03)
(4) Service $3E zeroSubFunction ($00)
Service $3E zeroSubFunction ($00)
(5) Service $85 DTCSettingType = off ($02)
Service $85 DTCSettingType = off ($02)
(6) Service $22 10.6 dataIdentifier " B.3 (3)
" dataIdentifier ECU.ID ("BOOT " ECU )
Service $22 dataIdentifier defined at section 10.6 , dataIdentifier , which is used to read out system condition ,
and ECU ID only for ECU which is used besides "BOOT mode"
ID (dataIdentifier = $F181) ECU ID "BOOT "
ECU.ID dataIdentifier "BOOT " ID ECU.ID
Program ID (dataIdentifier = $F181 and ECU ID should reply with the value indicating "BOOT mode".
dataIdentifier for ECU ID and Program ID and ECU ID at "BOOT mode" should be defined by the system and
not by this Spec.
(7) Service $19 sub-function = reportNumberOfDTCByStatusMask ($01) sub-function =
reportDTCByStatusMask ($02)
Service $19 sub-function = reportNumberOfDTCByStatusMask ($01)
sub-function = reportDTCByStatusMask ($02)
DTC 1 DTC "BOOT " "U3000-51($F00051)"
The number of DTC is one. DTC is set to "U3000-51 ($F00051)" which indicates "BOOT mode".
"BOOT " Service $19 DTCStatusAvailabilityMask "ConfirmedDTC"
sub-function = reportDTCByStatusMask ($02) DTCAndStatusRecord statusOfDTC
"ConfirmedDTC"
Support of only "ConfirmedDTC" may be sufficient as DTCStatusAvailabilityMask at Service $19 in "BOOT
mode". When ECU output DTCAndStatusRecord by sub-function = reportDTCByStatusMask ($02), set only
"ConfirmedDTC" as statusOfDTC.
("BOOT " " " DTCStatusAvailabilityMask sub-function =
reportDTCByStatusMask ($02) DTCAndStatusRecord statusOfDTC
DTCStatusAvailabilityMask )
(ECU may use the same DTCStatusAvailabilityMask as "application mode" also "BOOT mode". However, make
into suitable value statusOfDTC outputted by DTCAndStatusRecord of
sub-function=reportDTCByStatusMask($02) according to DTCStatusAvailabilityMask. )</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">Shall be configured by Customer

The following services are not supported by the EB Bootloader (should be managed by the customer during integration):
14 ClearDiagnosticInformation service
19 ReadDTCInformation service
23 ReadMemoryByAddress service
28 CommunicationControl service
2F InputOutputControlByIdentifier service
35 RequestUpload service
85 ControlDTCSetting service

 DID reading shall be implemented by customer.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-22_6_2_2</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
(1) (10)
(1) Service $10 diagnosticSessionType = programmingSession ($02)
Service $10 diagnosticSessionType = programmingSession ($02)
(2) Service $11 resetType = hardReset ($01)
Service $11 resetType = hardReset ($01)
(3) Service $3E zeroSubFunction ($00)
Service $3E zeroSubFunction ($00)
(4) ECU Service $22
(For ECU with temperature limitation) Service $22 related to temperature
(5) Service $2E dataIdentifier = $F100 ( ) dataIdentifier = $F101 ( )
Service $2E dataIdentifier = $F100 (reprogramming history)
dataIdentifier = $F101 (program information)
(6) Service $31 routineIdentifier = $ FF00 (eraseMemory) routineIdentifier = $ FF01
(checkProgrammingDependencies)
Service $31 routineIdentifier = $FF00 (eraseMemory)
routineIdentifier = $FF01 (checkProgrammingDependencies)
(7) Service $34
(8) Service $35
Service $35. Support or not must be defined by the system.
(9) Service $36
(10) Service $37</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">The 0x35 RequestUpload service is not supported by the EB Bootloader (should be managed by the customer during integration).

The EB bootloader doesn't manage the ECU temperature.

The writing of DIDs F100 and F101 shall be managed by the customer.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row><Row><Cell ss:StyleID="StyleReq"><Data ss:Type="String">HondaDiagnostics-22_7</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">EN:
This section defines timing at reprogramming.
Table 22.3 ECU
Table 22.3 defines. ECU should meet the requirement.
Service $10 Request change to
programmingSession programmingSession
Off-board tester NegRsp PosRsp
ECU (NRC $78)
Tc2
Fig. 22-4 programmingSession Communication timing of change to
programmingSession
Service $31 Request eraseMemory
Off-board tester NegRsp
(NRC $78) PosRsp
ECU
Tc4
Fig. 22-5 Communication timing of Memory erase
Service $36
Request TransferData
Off-board tester NegRsp
(NRC $78) PosRsp
ECU
Tc5
Fig. 22-6 Communication timing of TransferData and write memory
Service $31 Request
checkProgrammingDependencies
Off-board Tester NegRsp
(NRC $78) PosRsp
ECU
Tc6
Fig. 22-7 Communication timing of
checkProgrammingDependencies
Service $11 Next request
ECU Request ECU Reset request
Off-board Tester
PosRsp
ECU
Tc8
Fig. 22-8 ECU Communication timing of ECU reset
Table 22.3
Reprogramming control timing and value
Calibration value
Description ECU
Parameter Regulation of operation to ECU
Minimu Maximu
m m
diagnosticSessionType =
programmingSession Service $10
ECU programmingSession
(Fig.
Tc2 22-4) (4.5 ) --- 5sec
Time from the completion of Service $10 Change to programmingSession
request message transmitting of within this time and complete return of
diagnosticSessionType = a response message. (see 4.5.)
programmingSession to the completion of
response message return of ECU. (Fig.
22-4)
routineIdentifier = $ FF00 Service $31(
)
ECU
(Fig. 22-5) (15.5.2 )
Tc4 Time from the completion of Service $31 Perform erasing of a program 120sec
(erasing request of program memory) memory within this time, and
request message transmitting of complete return of the response
routineIdentifier = $ FF00 to the completion message included that result. (see
of response message return of ECU. (Fig. 15.5.2.)
22-5)
Service $36
ECU
Tc5 (Fig. 22-6) (18 ) 5sec
Time from the completion of transmitting of Perform the writing of a program code
a Service $36 request message to the within this time, and complete return
completion of response message return of of the response message included
ECU. (Fig. 22-6) that result . (see18.)
routineIdentifier = $ FF01 Service $31 (
)
ECU
(Fig.
Tc6 22-7) (15.5.3 ) 5sec
Time from the completion of transmitting of Perform error detection processing of
the Service $31 (error detection request of a program code within this time, and
program code) request message of complete return of the response
routineIdentifier = $ FF01 to the completion message included that result. (see
of response message return of ECU. (Fig. 15.5.3.)
22-7)
Service $11 (resetType = hardReset)
ECU ECU
(Fig. (5.5 )
Tc8 22-8) Complete ECU reset processing 5sec
Time from the completion of an ECU within this time, and be possible of
positive response message reply to a received of the following request
Service $11 (resetType = hardReset) message. (see 5.5.)
request message to the following request
message transmitting start. (Fig. 22-8)</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">x</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">Timming is HW and integration dependent (memory size, CPU speed, memory tehnology...) so can not be garanteed by the EB bootloader alone.</Data></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String"/></Cell><Cell ss:StyleID="StyleReq"><Data ss:Type="String">TS-DCC02-HondaDiagnostic_v5.1&#10;</Data></Cell></Row></Table></Worksheet></Workbook>
